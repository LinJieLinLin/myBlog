<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title></title>
    <url>/myBlog/2022/03/08/vue/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>记一次主题更新</title>
    <url>/myBlog/2022/02/18/QA/%E6%A8%A1%E6%9D%BF/</url>
    <content><![CDATA[<blockquote><p>使用patch-package生成patch覆盖node_modules里的包 </p>
</blockquote>

<span id="more"></span>

<h2 id="升级主题"><a href="#升级主题" class="headerlink" title="升级主题"></a>升级主题</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yarn upgrade-interactive --latest</span><br><span class="line"><span class="meta"># </span><span class="language-bash">选择要升级的包即可</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>问题一：_config.ayer.yml与主题包内的_config.yml配置是assign形式</p>
</blockquote>
<blockquote>
<p>问题二：本blog运行在二级目录下，开始全局search发现引用的js xml均请求根路径</p>
</blockquote>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">手动进入主题包目录 1.node_modules\hexo-theme-ayer\_config.yml 删除多余配置 2.node_modules\hexo-theme-ayer\<span class="built_in">source</span>\dist\main.js /js/search.js to /二级目录名/js/search.js /search.xml to /二级目录名/search.xml</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">然后执行打补丁</span></span><br><span class="line">npx patch-package hexo-theme-ayer</span><br><span class="line"><span class="meta"># </span><span class="language-bash">在package.json script添加</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash"><span class="string">&quot;postinstall&quot;</span>: <span class="string">&quot;npx patch-package&quot;</span>,</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">提交即可</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">ps 以后升级主题包的话，生成的patch版本对应改上即可</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>问题</category>
      </categories>
      <tags>
        <tag>问题</tag>
      </tags>
  </entry>
  <entry>
    <title>typeScript</title>
    <url>/myBlog/2021/11/02/typeScript/</url>
    <content><![CDATA[<blockquote><p>typeScript 相关 </p>
</blockquote>

<span id="more"></span>
<h1 id="ts访问器-key自动补全任意层级"><a href="#ts访问器-key自动补全任意层级" class="headerlink" title="ts访问器,key自动补全任意层级"></a>ts访问器,key自动补全任意层级</h1><blockquote>
<p>很多时候我们会对配置类型写一个访问器, 用 key1.key2.key3 这样的形式来访问深层内容. 这代码用JavaScript写起来很容易, 一行就能搞定:</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">get</span>(<span class="params">data, key, defaultValue</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> key.<span class="title function_">split</span>(<span class="string">&#x27;.&#x27;</span>).<span class="title function_">reduce</span>(<span class="function">(<span class="params">o, x</span>) =&gt;</span> o[x], data) ?? defaultValue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="用TS-在第一个参数类型确定的情况下-key自动补全任意层级-返回的value类型正确"><a href="#用TS-在第一个参数类型确定的情况下-key自动补全任意层级-返回的value类型正确" class="headerlink" title="用TS,在第一个参数类型确定的情况下, key自动补全任意层级, 返回的value类型正确"></a>用TS,在第一个参数类型确定的情况下, key自动补全任意层级, 返回的value类型正确</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="variable constant_">STORAGE</span> = &#123;</span><br><span class="line">    <span class="attr">redis</span>: &#123;</span><br><span class="line">        <span class="attr">host</span>: <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">        <span class="attr">port</span>: <span class="number">3000</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// keyof without function</span></span><br><span class="line">type <span class="title class_">KeyOf</span>&lt;T <span class="keyword">extends</span> <span class="title class_">Record</span>&lt;string, any&gt;, K = keyof T&gt; = K <span class="keyword">extends</span> string ? (T[K] <span class="keyword">extends</span> <span class="title class_">Function</span> ? never : K) : never</span><br><span class="line">type <span class="title class_">FileId</span>&lt;T <span class="keyword">extends</span> <span class="title class_">Record</span>&lt;string, any&gt;, K = <span class="title class_">KeyOf</span>&lt;T&gt;&gt; = K <span class="keyword">extends</span> string ? (K | <span class="string">`<span class="subst">$&#123;K&#125;</span>.<span class="subst">$&#123;FileId&lt;T[K]&gt;&#125;</span>`</span>) : never</span><br><span class="line">type <span class="title class_">ValueOf</span>&lt;T <span class="keyword">extends</span> <span class="title class_">Record</span>&lt;string, any&gt;, K&gt; = K <span class="keyword">extends</span> <span class="string">`<span class="subst">$&#123;infer I&#125;</span>.<span class="subst">$&#123;infer R&#125;</span>`</span> ? <span class="title class_">ValueOf</span>&lt;T[I], R&gt; : (K <span class="keyword">extends</span> string ? T[K] : never)</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> get&lt;T, K <span class="keyword">extends</span> <span class="title class_">FileId</span>&lt;T&gt;&gt;(<span class="attr">data</span>: T, <span class="attr">key</span>: K, defaultValue?: <span class="title class_">ValueOf</span>&lt;T, K&gt;): <span class="title class_">ValueOf</span>&lt;T, K&gt; | <span class="literal">undefined</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> key.<span class="title function_">split</span>(<span class="string">&#x27;.&#x27;</span>).<span class="title function_">reduce</span>(<span class="function">(<span class="params">o, x</span>) =&gt;</span> o[x], data <span class="keyword">as</span> any) ?? defaultValue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> host = <span class="title function_">get</span>(<span class="variable constant_">STORAGE</span>, <span class="string">&#x27;redis.host&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(host)</span><br></pre></td></tr></table></figure>

<h3 id="FileId"><a href="#FileId" class="headerlink" title="FileId"></a>FileId</h3><blockquote>
<p>FileId 的作用是将一个类型的属性名称转换为一组字符串, 以便能够用 . 进行层级访问.</p>
</blockquote>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">FileId</span>&lt;</span><br><span class="line">    T <span class="keyword">extends</span> <span class="title class_">Record</span>&lt;<span class="built_in">string</span>, <span class="built_in">any</span>&gt;,</span><br><span class="line">    K = <span class="title class_">KeyOf</span>&lt;T&gt;, <span class="comment">// 这里获取当前 T 的所有 key</span></span><br><span class="line">&gt; = K <span class="keyword">extends</span> <span class="built_in">string</span></span><br><span class="line">        ? (K | <span class="string">`<span class="subst">$&#123;K&#125;</span>.<span class="subst">$&#123;FileId&lt;T[K]&gt;&#125;</span>`</span>)</span><br><span class="line">        : <span class="built_in">never</span></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>typeScript</tag>
      </tags>
  </entry>
  <entry>
    <title>codeFormat</title>
    <url>/myBlog/2021/08/02/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/codeFormat/</url>
    <content><![CDATA[<blockquote><p>代码格式化相关 </p>
</blockquote>
<span id="more"></span>

<h1 id="eslint-格式化"><a href="#eslint-格式化" class="headerlink" title="eslint 格式化"></a>eslint 格式化</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">devDependencies</span><br><span class="line">eslint</span><br><span class="line">以下按需：</span><br><span class="line">&quot;eslint-plugin-html&quot;</span><br><span class="line">&quot;eslint-plugin-import&quot;</span><br><span class="line">&quot;eslint-plugin-node&quot;</span><br><span class="line">&quot;eslint-plugin-promise&quot;</span><br><span class="line">&quot;eslint-plugin-standard&quot;</span><br><span class="line">&quot;eslint-plugin-vue&quot;</span><br><span class="line">react:</span><br><span class="line">&quot;eslint-plugin-eslint-comments&quot;</span><br><span class="line">&quot;eslint-plugin-jest&quot;</span><br><span class="line">&quot;eslint-plugin-jsx-a11y&quot;</span><br><span class="line">&quot;eslint-plugin-react&quot;</span><br><span class="line">&quot;eslint-plugin-react-hooks&quot;</span><br><span class="line">&quot;eslint-plugin-unicorn&quot;</span><br><span class="line">&quot;eslint-template-visitor&quot; --&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- scripts --&gt;</span><br><span class="line">&quot;lint&quot;: &quot;eslint src/**/*.&#123;js,jsx,ts,tsx,vue&#125; --fix&quot;,</span><br></pre></td></tr></table></figure>

<h2 id="eslint-配置"><a href="#eslint-配置" class="headerlink" title="eslint 配置"></a>eslint 配置</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- 初始化 --&gt;</span><br><span class="line">eslint --init</span><br><span class="line"> &lt;!-- 关闭当前行 --&gt;</span><br><span class="line">// eslint-disable-line</span><br><span class="line">关闭下一行</span><br><span class="line">// eslint-disable-next-line</span><br><span class="line">关闭当前文件</span><br><span class="line">/* eslint-disable */</span><br></pre></td></tr></table></figure>

<h3 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;eslintConfig&quot;:</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;env&quot;: &#123;</span><br><span class="line">      &quot;browser&quot;: true,</span><br><span class="line">      &quot;node&quot;: true</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<h3 id="YAML"><a href="#YAML" class="headerlink" title="YAML"></a>YAML</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">env:</span><br><span class="line">    browser: true</span><br></pre></td></tr></table></figure>

<h3 id="eslintrc-js"><a href="#eslintrc-js" class="headerlink" title=".eslintrc.js"></a>.eslintrc.js</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  &lt;!-- 运行环境 --&gt;</span><br><span class="line">  &quot;env&quot;: &#123;</span><br><span class="line">    &quot;browser&quot;: true,</span><br><span class="line">  &#125;,</span><br><span class="line">  &lt;!-- 插件 --&gt;</span><br><span class="line">  &#x27;plugins&#x27;: [</span><br><span class="line">		&#x27;vue&#x27;</span><br><span class="line">	],</span><br><span class="line">  &lt;!-- 扩展配置文件 --&gt;</span><br><span class="line">  extends:[],</span><br><span class="line">  &lt;!-- 规则 --&gt;</span><br><span class="line">  &#x27;rules&#x27;: &#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  &lt;!-- 全局变量 --&gt;</span><br><span class="line">  globals:&#123;</span><br><span class="line">    window:true</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="为特定类型的文件指定处理器"><a href="#为特定类型的文件指定处理器" class="headerlink" title="为特定类型的文件指定处理器"></a>为特定类型的文件指定处理器</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;overrides&quot;: [</span><br><span class="line">       &#123;</span><br><span class="line">           &quot;files&quot;: [&quot;*.md&quot;],</span><br><span class="line">           &quot;processor&quot;: &quot;a-plugin/markdown&quot;</span><br><span class="line">       &#125;,</span><br><span class="line">       &#123;</span><br><span class="line">           &quot;files&quot;: [&quot;**/*.md/*.js&quot;],</span><br><span class="line">           &quot;rules&quot;: &#123;</span><br><span class="line">               &quot;strict&quot;: &quot;off&quot;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   ]</span><br></pre></td></tr></table></figure>

<h1 id="prettier-格式化"><a href="#prettier-格式化" class="headerlink" title="prettier 格式化"></a>prettier 格式化</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">不使用prettier格式化代码,常用于css PX 处理</span><br><span class="line">/* prettier-ignore */</span><br><span class="line">&lt;!-- devDependencies prettier --&gt;</span><br><span class="line">&lt;!-- scripts --&gt;</span><br><span class="line">&quot;prettier --write &#x27;src/**/*.&#123;js,jsx,tsx,ts,vue,less,md,json&#125;&#x27;&quot;,</span><br></pre></td></tr></table></figure>

<h1 id="git-代码提交检查"><a href="#git-代码提交检查" class="headerlink" title="git 代码提交检查"></a>git 代码提交检查</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- package.json --&gt;</span><br><span class="line">&lt;!-- devDependencies: husky lint-staged --&gt;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;husky&quot;: &#123;</span><br><span class="line">    &quot;hooks&quot;: &#123;</span><br><span class="line">      &quot;pre-commit&quot;: &quot;lint-staged&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;lint-staged&quot;: &#123;</span><br><span class="line">    &quot;src/**/*.&#123;js,jsx,ts,tsx,vue,json,css,scss,md&#125;&quot;: [</span><br><span class="line">      &quot;prettier --write&quot;,</span><br><span class="line">      &quot;git add&quot;</span><br><span class="line">    ],</span><br><span class="line">    &quot;src/**/*.&#123;js,jsx,ts,tsx,vue&#125;&quot;: [</span><br><span class="line">      &quot;eslint --fix&quot;,</span><br><span class="line">      &quot;git add&quot;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>配置</tag>
      </tags>
  </entry>
  <entry>
    <title>vsCode</title>
    <url>/myBlog/2021/08/02/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/vscode/</url>
    <content><![CDATA[<blockquote><p>vsCode 相关 </p>
</blockquote>
<span id="more"></span>

<h1 id="vscode"><a href="#vscode" class="headerlink" title=".vscode"></a>.vscode</h1><h2 id="launch-json-vue-edgeDebug"><a href="#launch-json-vue-edgeDebug" class="headerlink" title="launch.json,vue edgeDebug"></a>launch.json,vue edgeDebug</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;version&quot;: &quot;0.2.0&quot;,</span><br><span class="line">  &quot;configurations&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;type&quot;: &quot;pwa-msedge&quot;,</span><br><span class="line">      &quot;request&quot;: &quot;launch&quot;,</span><br><span class="line">      &quot;name&quot;: &quot;edge&quot;,</span><br><span class="line">      &quot;url&quot;: &quot;http://localhost:8888&quot;,</span><br><span class="line">      &quot;webRoot&quot;: &quot;$&#123;workspaceFolder&#125;/src&quot;,</span><br><span class="line">      &quot;breakOnLoad&quot;: true,</span><br><span class="line">      &quot;sourceMapPathOverrides&quot;: &#123;</span><br><span class="line">        &quot;webpack:///src/*&quot;: &quot;$&#123;webRoot&#125;/*&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="launch-json-react-edgeDebug"><a href="#launch-json-react-edgeDebug" class="headerlink" title="launch.json,react edgeDebug"></a>launch.json,react edgeDebug</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;version&quot;: &quot;0.2.0&quot;,</span><br><span class="line">  &quot;configurations&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;name&quot;: &quot;Launch Chrome&quot;,</span><br><span class="line">      &quot;request&quot;: &quot;launch&quot;,</span><br><span class="line">      &quot;type&quot;: &quot;pwa-chrome&quot;,</span><br><span class="line">      &quot;url&quot;: &quot;http://localhost:8080&quot;,</span><br><span class="line">      &quot;webRoot&quot;: &quot;$&#123;workspaceFolder&#125;&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="setting-json-项目级配置"><a href="#setting-json-项目级配置" class="headerlink" title="setting.json 项目级配置"></a>setting.json 项目级配置</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  // 重新设定tabsize</span><br><span class="line">  &quot;editor.tabSize&quot;: 2,</span><br><span class="line">  // 保存即格式化</span><br><span class="line">  &quot;editor.formatOnSave&quot;: true,</span><br><span class="line">  // typescript版本使用项目依赖的版本</span><br><span class="line">  &quot;typescript.tsdk&quot;: &quot;node_modules/typescript/lib&quot;</span><br><span class="line">  // eslint自动修复</span><br><span class="line">  &quot;editor.codeActionsOnSave&quot;: &#123;</span><br><span class="line">    &quot;source.fixAll.eslint&quot;: true,</span><br><span class="line">    &quot;source.organizeImports&quot;: true</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="sftp-json-ftp-配置"><a href="#sftp-json-ftp-配置" class="headerlink" title="sftp.json ftp 配置"></a>sftp.json ftp 配置</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;: &quot;名称&quot;,</span><br><span class="line">  &quot;protocol&quot;: &quot;sftp|ftp&quot;,</span><br><span class="line">  &quot;port&quot;: 22,</span><br><span class="line">  &quot;username&quot;: &quot;用户名&quot;,</span><br><span class="line">  &quot;host&quot;: &quot;host&quot;,</span><br><span class="line">  &quot;password&quot;: &quot;&quot;,</span><br><span class="line">  &quot;context&quot;: &quot;dist/本地目录&quot;,</span><br><span class="line">  &quot;ignore&quot;: [&quot;.vscode&quot;, &quot;.git&quot;, &quot;.DS_Store&quot;, &quot;node_modules&quot;],</span><br><span class="line">  &quot;remotePath&quot;: &quot;目标目录&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>配置</tag>
        <tag>vscode</tag>
      </tags>
  </entry>
  <entry>
    <title>node</title>
    <url>/myBlog/2021/07/02/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/node/</url>
    <content><![CDATA[<blockquote><p>node 相关 </p>
</blockquote>

<span id="more"></span>

<h1 id="nvm"><a href="#nvm" class="headerlink" title="nvm"></a><a href="https://github.com/coreybutler/nvm-windows">nvm</a></h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">安装目录</span></span><br><span class="line">nvm root</span><br><span class="line"><span class="meta"># </span><span class="language-bash">安装版本</span></span><br><span class="line">nvm install v14.15.3</span><br><span class="line"><span class="meta"># </span><span class="language-bash">默认版本</span></span><br><span class="line">nvm use 14.15.3</span><br></pre></td></tr></table></figure>

<h1 id="nvs"><a href="#nvs" class="headerlink" title="nvs"></a><a href="https://github.com/jasongin/nvs/releases">nvs</a></h1><h2 id="修改默认源-vim-x2F-defaults-json"><a href="#修改默认源-vim-x2F-defaults-json" class="headerlink" title="修改默认源 vim .&#x2F;defaults.json"></a>修改默认源 vim .&#x2F;defaults.json</h2><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"> <span class="attr">&quot;aliases&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"> <span class="comment">// for windows</span></span><br><span class="line"> <span class="attr">&quot;linkToSystem&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line"> <span class="attr">&quot;remotes&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;default&quot;</span><span class="punctuation">:</span> <span class="string">&quot;node&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;node&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://npm.taobao.org/mirrors/node/&quot;</span></span><br><span class="line"> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"> <span class="attr">&quot;bootstrap&quot;</span><span class="punctuation">:</span> <span class="string">&quot;node/12.18.2&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">添加源</span></span><br><span class="line">nvs remote taobao https://npm.taobao.org/mirrors/node/</span><br><span class="line"><span class="meta"># </span><span class="language-bash">安装最新稳定版</span></span><br><span class="line">nvs add lts</span><br><span class="line"><span class="meta"># </span><span class="language-bash">安装指定版本</span></span><br><span class="line">nvs add 14.15.3</span><br><span class="line"><span class="meta"># </span><span class="language-bash">设置默认版本</span></span><br><span class="line">nvs link 14.15.3</span><br><span class="line"><span class="meta"># </span><span class="language-bash">列出当前版本路径</span></span><br><span class="line">nvs which</span><br><span class="line"><span class="meta"># </span><span class="language-bash">临时使用指定版本，当前窗口生效</span></span><br><span class="line">nvs use 14.15.3</span><br><span class="line"><span class="meta"># </span><span class="language-bash">npm 必装</span></span><br><span class="line">npm i nrm yarn yrm eslint prettier http-server pnpm  -g --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>

<h1 id="npm配置"><a href="#npm配置" class="headerlink" title="npm配置"></a>npm配置</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">puppeteer下载源</span></span><br><span class="line">npm config set puppeteer_download_host=https://npm.taobao.org/mirrors</span><br><span class="line"><span class="meta"># </span><span class="language-bash">指定npm源</span></span><br><span class="line">npm i nrm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>配置</tag>
        <tag>node</tag>
      </tags>
  </entry>
  <entry>
    <title>webpack-vue相关</title>
    <url>/myBlog/2018/11/11/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/webpack-vue%E7%9B%B8%E5%85%B3/</url>
    <content><![CDATA[<blockquote><p>一句话描述 </p>
</blockquote>

<span id="more"></span>

<h1 id="vue-cli3JS"><a href="#vue-cli3JS" class="headerlink" title="vue cli3JS"></a>vue cli3JS</h1><h2 id="修改-webpack-插件配置"><a href="#修改-webpack-插件配置" class="headerlink" title="修改 webpack 插件配置"></a>修改 webpack 插件配置</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 添加生成的html标签的双引号</span><br><span class="line">    chainWebpack: config =&gt; &#123;</span><br><span class="line">        config</span><br><span class="line">            .plugin(&#x27;html&#x27;)</span><br><span class="line">            .tap(args =&gt; &#123;</span><br><span class="line">                if (args[0] &amp;&amp; args[0].minify) &#123;</span><br><span class="line">                    args[0].minify.removeAttributeQuotes = false</span><br><span class="line">                &#125;</span><br><span class="line">                return args</span><br><span class="line">            &#125;)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>JS</tag>
        <tag>配置</tag>
      </tags>
  </entry>
  <entry>
    <title>GIT</title>
    <url>/myBlog/2018/08/08/git/</url>
    <content><![CDATA[<blockquote><p>与 GIT 相关的一些学习记录 </p>
</blockquote>

<span id="more"></span>
<h1 id="commit规范"><a href="#commit规范" class="headerlink" title="commit规范"></a><a href="https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits">commit规范</a></h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">feat：新功能</span><br><span class="line">fix：修补 bug</span><br><span class="line">docs：文档类变动</span><br><span class="line">style：样式</span><br><span class="line">refactor：重构</span><br><span class="line">test：增加测试</span><br><span class="line">chore：构建过程或辅助工具的变动</span><br></pre></td></tr></table></figure>

<h1 id="git-ssh-pull-error-ssh-报错-Their-offer-ssh-rsa-fatal-Could-not-read-from-remote-repository"><a href="#git-ssh-pull-error-ssh-报错-Their-offer-ssh-rsa-fatal-Could-not-read-from-remote-repository" class="headerlink" title="git ssh pull error: .ssh 报错 Their offer: ssh-rsa fatal: Could not read from remote repository"></a>git ssh pull error: .ssh 报错 Their offer: ssh-rsa fatal: Could not read from remote repository</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">.ssh目录添加config文件</span></span><br><span class="line">Host *</span><br><span class="line">HostkeyAlgorithms +ssh-rsa</span><br><span class="line">PubkeyAcceptedKeyTypes +ssh-rsa</span><br></pre></td></tr></table></figure>

<h1 id="忽略变更"><a href="#忽略变更" class="headerlink" title="忽略变更"></a>忽略变更</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git update-index --assume-unchanged fileName</span><br><span class="line">git update-index --no-assume-unchanged fileName</span><br></pre></td></tr></table></figure>

<h2 id="格式化与空白"><a href="#格式化与空白" class="headerlink" title="格式化与空白"></a>格式化与空白</h2><blockquote>
<p>交时自动地把行结束符 CRLF 转换成 LF，而在检出代码时把 LF 转换成 CRLF。</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global core.autocrlf true</span><br></pre></td></tr></table></figure>

<h1 id="记住-http-方式克隆仓库的密码"><a href="#记住-http-方式克隆仓库的密码" class="headerlink" title="记住 http 方式克隆仓库的密码"></a>记住 http 方式克隆仓库的密码</h1><h2 id="命令行"><a href="#命令行" class="headerlink" title="命令行"></a>命令行</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config credential.helper store</span><br><span class="line">全局</span><br><span class="line">git config --global credential.helper store</span><br></pre></td></tr></table></figure>

<h2 id="配置文件加上-git-x2F-config"><a href="#配置文件加上-git-x2F-config" class="headerlink" title="配置文件加上(.git&#x2F;config)"></a>配置文件加上(.git&#x2F;config)</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[credential]</span><br><span class="line">helper = store</span><br></pre></td></tr></table></figure>

<h1 id="回滚"><a href="#回滚" class="headerlink" title="回滚"></a>回滚</h1><h2 id="回滚到上一次-pull-成功的版本"><a href="#回滚到上一次-pull-成功的版本" class="headerlink" title="回滚到上一次 pull 成功的版本"></a>回滚到上一次 pull 成功的版本</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git reset --hard FETCH_HEAD</span><br></pre></td></tr></table></figure>

<h2 id="回滚到服务器版本"><a href="#回滚到服务器版本" class="headerlink" title="回滚到服务器版本"></a>回滚到服务器版本</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git reset --hard origin/分支名</span><br></pre></td></tr></table></figure>

<h1 id="cherry-pick-把另一个本地分支的-commit-修改应用到当前分支。-还是tortoisegit比较方便"><a href="#cherry-pick-把另一个本地分支的-commit-修改应用到当前分支。-还是tortoisegit比较方便" class="headerlink" title="cherry-pick 把另一个本地分支的 commit 修改应用到当前分支。 (还是tortoisegit比较方便 )"></a>cherry-pick 把另一个本地分支的 commit 修改应用到当前分支。 (还是<a href="https://tortoisegit.org/">tortoisegit</a>比较方便 )</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git cherry-pick &lt;commit id&gt;</span><br></pre></td></tr></table></figure>

<h1 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h1><h2 id="设置代理-http"><a href="#设置代理-http" class="headerlink" title="设置代理 http"></a>设置代理 http</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global http.proxy &#x27;socks5://127.0.0.1:1080&#x27;</span><br><span class="line">git config --global https.proxy &#x27;socks5://127.0.0.1:1080&#x27;</span><br></pre></td></tr></table></figure>

<h2 id="设置代理-linux-ssh"><a href="#设置代理-linux-ssh" class="headerlink" title="设置代理 (linux) ssh"></a>设置代理 (linux) ssh</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">~/.ssh/config 文件后面添加几行，没有可以新建一个</span><br><span class="line">Host github.com</span><br><span class="line">ProxyCommand nc -X 5 -x 127.0.0.1:1080 %h %p</span><br></pre></td></tr></table></figure>

<h2 id="取消代理"><a href="#取消代理" class="headerlink" title="取消代理"></a>取消代理</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global --unset http.proxy</span><br><span class="line">git config --global --unset https.proxy</span><br></pre></td></tr></table></figure>

<h2 id="新建代码库"><a href="#新建代码库" class="headerlink" title="新建代码库"></a>新建代码库</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 在当前目录新建一个Git代码库</span><br><span class="line">$ git init</span><br><span class="line"># 新建一个目录，将其初始化为Git代码库</span><br><span class="line">$ git init [project-name]</span><br><span class="line"># 下载一个项目和它的整个代码历史</span><br><span class="line">$ git clone [url]</span><br></pre></td></tr></table></figure>

<h2 id="Git-的设置文件为-gitconfig，它可以在用户主目录下（全局配置），也可以在项目目录下（项目配置）"><a href="#Git-的设置文件为-gitconfig，它可以在用户主目录下（全局配置），也可以在项目目录下（项目配置）" class="headerlink" title="Git 的设置文件为.gitconfig，它可以在用户主目录下（全局配置），也可以在项目目录下（项目配置）"></a>Git 的设置文件为.gitconfig，它可以在用户主目录下（全局配置），也可以在项目目录下（项目配置）</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 显示当前的Git配置</span><br><span class="line">$ git config --list</span><br><span class="line"># 编辑Git配置文件</span><br><span class="line">$ git config -e [--global]</span><br><span class="line"># 设置提交代码时的用户信息</span><br><span class="line">$ git config [--global] user.name &quot;[name]&quot;</span><br><span class="line">$ git config [--global] user.email &quot;[email address]&quot;</span><br></pre></td></tr></table></figure>

<h2 id="增加-x2F-删除文件"><a href="#增加-x2F-删除文件" class="headerlink" title="增加&#x2F;删除文件"></a>增加&#x2F;删除文件</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 添加指定文件到暂存区</span><br><span class="line">$ git add [file1] [file2] ...</span><br><span class="line"># 添加指定目录到暂存区，包括子目录</span><br><span class="line">$ git add [dir]</span><br><span class="line"># 添加当前目录的所有文件到暂存区</span><br><span class="line">$ git add .</span><br><span class="line"># 添加每个变化前，都会要求确认</span><br><span class="line"># 对于同一个文件的多处变化，可以实现分次提交</span><br><span class="line">$ git add -p</span><br><span class="line"># 删除工作区文件，并且将这次删除放入暂存区</span><br><span class="line">$ git rm [file1] [file2] ...</span><br><span class="line"># 停止追踪指定文件，但该文件会保留在工作区</span><br><span class="line">$ git rm --cached [file]</span><br><span class="line"># 改名文件，并且将这个改名放入暂存区</span><br><span class="line">$ git mv [file-original] [file-renamed]</span><br></pre></td></tr></table></figure>

<h2 id="代码提交"><a href="#代码提交" class="headerlink" title="代码提交"></a>代码提交</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 提交暂存区到仓库区</span><br><span class="line">$ git commit -m &quot;message&quot;</span><br><span class="line"># 提交暂存区的指定文件到仓库区</span><br><span class="line">$ git commit [file1] [file2] ... -m &quot;message&quot;</span><br><span class="line"># 提交工作区自上次commit之后的变化，直接到仓库区</span><br><span class="line">$ git commit -a</span><br><span class="line"># 提交时显示所有diff信息</span><br><span class="line">$ git commit -v</span><br><span class="line"># 使用一次新的commit，替代上一次提交</span><br><span class="line"># 如果代码没有任何新变化，则用来改写上一次commit的提交信息</span><br><span class="line">$ git commit --amend -m &quot;message&quot;</span><br><span class="line"># 重做上一次commit，并包括指定文件的新变化</span><br><span class="line">$ git commit --amend [file1] [file2] ...</span><br></pre></td></tr></table></figure>

<h2 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 列出所有本地分支</span><br><span class="line">$ git branch</span><br><span class="line"># 列出所有远程分支</span><br><span class="line">$ git branch -r</span><br><span class="line"># 列出所有本地分支和远程分支</span><br><span class="line">$ git branch -a</span><br><span class="line"># 新建一个分支，但依然停留在当前分支</span><br><span class="line">$ git branch [branch-name]</span><br><span class="line"># 新建一个分支，并切换到该分支</span><br><span class="line">$ git checkout -b [branch]</span><br><span class="line"># 新建一个分支，指向指定commit</span><br><span class="line">$ git branch [branch] [commit]</span><br><span class="line"># 新建一个分支，与指定的远程分支建立追踪关系</span><br><span class="line">$ git branch --track [branch] [remote-branch]</span><br><span class="line"># 切换到指定分支，并更新工作区</span><br><span class="line">$ git checkout [branch-name]</span><br><span class="line"># 切换到上一个分支</span><br><span class="line">$ git checkout -</span><br><span class="line"># 建立追踪关系，在现有分支与指定的远程分支之间</span><br><span class="line">$ git branch --set-upstream [branch] [remote-branch]</span><br><span class="line"># 合并指定分支到当前分支</span><br><span class="line">$ git merge [branch]</span><br><span class="line"># 选择一个commit，合并进当前分支</span><br><span class="line">$ git cherry-pick [commit]</span><br><span class="line"># 删除分支</span><br><span class="line">$ git branch -d [branch-name]</span><br><span class="line"># 删除远程分支</span><br><span class="line">$ git push origin --delete [branch-name]</span><br><span class="line">$ git branch -dr [remote/branch]</span><br></pre></td></tr></table></figure>

<h2 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 列出所有tag</span><br><span class="line">$ git tag</span><br><span class="line"># 新建一个tag在当前commit</span><br><span class="line">$ git tag [tag]</span><br><span class="line"># 新建一个tag在指定commit</span><br><span class="line">$ git tag [tag] [commit]</span><br><span class="line"># 删除本地tag</span><br><span class="line">$ git tag -d [tag]</span><br><span class="line"># 删除远程tag</span><br><span class="line">$ git push origin :refs/tags/[tagName]</span><br><span class="line"># 查看tag信息</span><br><span class="line">$ git show [tag]</span><br><span class="line"># 提交指定tag</span><br><span class="line">$ git push [remote] [tag]</span><br><span class="line"># 提交所有tag</span><br><span class="line">$ git push [remote] --tags</span><br><span class="line"># 新建一个分支，指向某个tag</span><br><span class="line">$ git checkout -b [branch] [tag]</span><br></pre></td></tr></table></figure>

<h2 id="查看信息"><a href="#查看信息" class="headerlink" title="查看信息"></a>查看信息</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 显示有变更的文件</span><br><span class="line">$ git status</span><br><span class="line"># 显示当前分支的版本历史</span><br><span class="line">$ git log</span><br><span class="line"># 显示commit历史，以及每次commit发生变更的文件</span><br><span class="line">$ git log --stat</span><br><span class="line"># 搜索提交历史，根据关键词</span><br><span class="line">$ git log -S [keyword]</span><br><span class="line"># 显示某个commit之后的所有变动，每个commit占据一行</span><br><span class="line">$ git log [tag] HEAD --pretty=format:%s</span><br><span class="line"># 显示某个commit之后的所有变动，其&quot;提交说明&quot;必须符合搜索条件</span><br><span class="line">$ git log [tag] HEAD --grep feature</span><br><span class="line"># 显示某个文件的版本历史，包括文件改名</span><br><span class="line">$ git log --follow [file]</span><br><span class="line">$ git whatchanged [file]</span><br><span class="line"># 显示指定文件相关的每一次diff</span><br><span class="line">$ git log -p [file]</span><br><span class="line"># 显示过去5次提交</span><br><span class="line">$ git log -5 --pretty --oneline</span><br><span class="line"># 显示所有提交过的用户，按提交次数排序</span><br><span class="line">$ git shortlog -sn</span><br><span class="line"># 显示指定文件是什么人在什么时间修改过</span><br><span class="line">$ git blame [file]</span><br><span class="line"># 显示暂存区和工作区的差异</span><br><span class="line">$ git diff</span><br><span class="line"># 显示暂存区和上一个commit的差异</span><br><span class="line">$ git diff --cached [file]</span><br><span class="line"># 显示工作区与当前分支最新commit之间的差异</span><br><span class="line">$ git diff HEAD</span><br><span class="line"># 显示两次提交之间的差异</span><br><span class="line">$ git diff [first-branch]...[second-branch]</span><br><span class="line"># 显示今天你写了多少行代码</span><br><span class="line">$ git diff --shortstat &quot;@&#123;0 day ago&#125;&quot;</span><br><span class="line"># 显示某次提交的元数据和内容变化</span><br><span class="line">$ git show [commit]</span><br><span class="line"># 显示某次提交发生变化的文件</span><br><span class="line">$ git show --name-only [commit]</span><br><span class="line"># 显示某次提交时，某个文件的内容</span><br><span class="line">$ git show [commit]:[filename]</span><br><span class="line"># 显示当前分支的最近几次提交</span><br><span class="line">$ git reflog</span><br></pre></td></tr></table></figure>

<h2 id="远程同步"><a href="#远程同步" class="headerlink" title="远程同步"></a>远程同步</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 下载远程仓库的所有变动</span><br><span class="line">$ git fetch [remote]</span><br><span class="line"># 显示所有远程仓库</span><br><span class="line">$ git remote -v</span><br><span class="line"># 显示某个远程仓库的信息</span><br><span class="line">$ git remote show [remote]</span><br><span class="line"># 增加一个新的远程仓库，并命名</span><br><span class="line">$ git remote add [shortname] [url]</span><br><span class="line"># 取回远程仓库的变化，并与本地分支合并</span><br><span class="line">$ git pull [remote] [branch]</span><br><span class="line"># 上传本地指定分支到远程仓库</span><br><span class="line">$ git push [remote] [branch]</span><br><span class="line"># 强行推送当前分支到远程仓库，即使有冲突</span><br><span class="line">$ git push [remote] --force</span><br><span class="line"># 推送所有分支到远程仓库</span><br><span class="line">$ git push [remote] --all</span><br></pre></td></tr></table></figure>

<h2 id="撤销"><a href="#撤销" class="headerlink" title="撤销"></a>撤销</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 恢复暂存区的指定文件到工作区</span><br><span class="line">$ git checkout [file]</span><br><span class="line"># 恢复某个commit的指定文件到暂存区和工作区</span><br><span class="line">$ git checkout [commit] [file]</span><br><span class="line"># 恢复暂存区的所有文件到工作区</span><br><span class="line">$ git checkout .</span><br><span class="line"># 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变</span><br><span class="line">$ git reset [file]</span><br><span class="line"># 重置暂存区与工作区，与上一次commit保持一致</span><br><span class="line">$ git reset --hard</span><br><span class="line"># 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变</span><br><span class="line">$ git reset [commit]</span><br><span class="line"># 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致</span><br><span class="line">$ git reset --hard [commit]</span><br><span class="line"># 重置当前HEAD为指定commit，但保持暂存区和工作区不变</span><br><span class="line">$ git reset --keep [commit]</span><br><span class="line"># 新建一个commit，用来撤销指定commit</span><br><span class="line"># 后者的所有变化都将被前者抵消，并且应用到当前分支</span><br><span class="line">$ git revert [commit]</span><br><span class="line"># 暂时将未提交的变化移除，稍后再移入</span><br><span class="line">$ git stash</span><br><span class="line">$ git stash pop</span><br><span class="line"># 生成一个可供发布的压缩包</span><br><span class="line">$ git archive</span><br></pre></td></tr></table></figure>

<h2 id="更多内容》》"><a href="#更多内容》》" class="headerlink" title="更多内容》》"></a><a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000">更多内容》》</a></h2>]]></content>
      <categories>
        <category>GIT</category>
      </categories>
      <tags>
        <tag>GIT</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu</title>
    <url>/myBlog/2018/08/02/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/ubuntu/</url>
    <content><![CDATA[<blockquote><p>ubuntu 相关 </p>
</blockquote>

<span id="more"></span>

<h1 id="linux"><a href="#linux" class="headerlink" title="linux"></a><a href="https://lj4.top/myBlog/2016/07/07/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/linux/">linux</a></h1><h1 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h1><h2 id="翻"><a href="#翻" class="headerlink" title="翻"></a>翻</h2><ul>
<li>install <a href="https://github.com/shadowsocks/shadowsocks-qt5/wiki/%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97">shadowsocks-qt5</a></li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository ppa:hzwhuang/ss-qt5</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install shadowsocks-qt5</span><br></pre></td></tr></table></figure>

<ul>
<li>install polipo(将 socks5 转为 http)</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install polipo</span><br><span class="line">sudo vim /etc/polipo/config</span><br><span class="line"></span><br><span class="line">SET:</span><br><span class="line">logSyslog = true</span><br><span class="line">logFile = /var/log/polipo/polipo.log</span><br><span class="line"></span><br><span class="line">proxyAddress = &quot;0.0.0.0&quot;</span><br><span class="line"># socks5 ip:port</span><br><span class="line">socksParentProxy = &quot;127.0.0.1:1080&quot;</span><br><span class="line">socksProxyType = socks5</span><br><span class="line">proxyPort = 7777</span><br><span class="line"></span><br><span class="line">chunkHighMark = 50331648</span><br><span class="line">objectHighMark = 16384</span><br><span class="line">serverMaxSlots = 64</span><br><span class="line">serverSlots = 16</span><br><span class="line">serverSlots1 = 32</span><br><span class="line">END SET</span><br><span class="line"></span><br><span class="line">sudo /etc/init.d/polipo restart</span><br></pre></td></tr></table></figure>

<ul>
<li>查看代理状态</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export http_proxy=&quot;http://127.0.0.1:7777/&quot;</span><br><span class="line">curl ip.gs</span><br></pre></td></tr></table></figure>

<ul>
<li>npm 设置代理</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm config set proxy=http://127.0.0.1:7777</span><br></pre></td></tr></table></figure>

<ul>
<li>node sass</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># windows</span><br><span class="line">npm config set sass-binary-site=http://npm.taobao.org/mirrors/node-sass</span><br></pre></td></tr></table></figure>

<ul>
<li>shell 全局代理：</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export http_proxy=&quot;http://127.0.0.1:7777/&quot;</span><br></pre></td></tr></table></figure>

<h2 id="node-相关"><a href="#node-相关" class="headerlink" title="node 相关"></a>node 相关</h2><ul>
<li>install nvm</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh | bash</span><br><span class="line">vim ~/.profile</span><br><span class="line">export NVM_DIR=&quot;$HOME/.nvm&quot;</span><br><span class="line">[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;&amp; . &quot;$NVM_DIR/nvm.sh&quot; # This loads nvm</span><br><span class="line"># wq</span><br><span class="line"># 使用淘宝源</span><br><span class="line">~/.bashrc</span><br><span class="line">export NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node</span><br><span class="line"># wq</span><br><span class="line">source ~/.profile</span><br><span class="line">NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node nvm install stable</span><br></pre></td></tr></table></figure>

<ul>
<li>install nrm</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm --registry https://registry.npm.taobao.org install nrm -g</span><br></pre></td></tr></table></figure>

<ul>
<li>使用 cnpm 源</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nrm ls</span><br><span class="line">nrm use cnpm</span><br><span class="line">npm install -g bower gulp http-server</span><br></pre></td></tr></table></figure>

<h2 id="五笔拼音"><a href="#五笔拼音" class="headerlink" title="五笔拼音"></a>五笔拼音</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install fcitx-table-wbpy</span><br></pre></td></tr></table></figure>

<h2 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h2><ul>
<li>unity-tweak-tool</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install unity-tweak-tool</span><br></pre></td></tr></table></figure>

<ul>
<li>Flatabulous 主题</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository ppa:noobslab/themes</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install flatabulous-theme</span><br></pre></td></tr></table></figure>

<ul>
<li>图标</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository ppa:noobslab/icons</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install ultra-flat-icons</span><br></pre></td></tr></table></figure>

<blockquote>
<p>进入 unity-tweak-tool 修改主题为 Flatabulous，图标为 ultra-flat</p>
</blockquote>
<h2 id="去掉登陆密环提示"><a href="#去掉登陆密环提示" class="headerlink" title="去掉登陆密环提示"></a>去掉登陆密环提示</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">seahorse</span><br><span class="line"># 选中修改密码，输入旧密码后不输密码即可</span><br></pre></td></tr></table></figure>

<h2 id="git-ssh"><a href="#git-ssh" class="headerlink" title="git-ssh"></a>git-ssh</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd ~/.ssh</span><br><span class="line">ssh-keygen -t rsa -C &quot;993353454@qq.com&quot;</span><br><span class="line">//输入文件名eg: a</span><br><span class="line">ssh-add a</span><br><span class="line">// 将生成的a.pub内容放到github的 add sshkey 里</span><br><span class="line">// 注： 如果执行 ssh-add 时显示错误 Could not open a connection to your authentication agent. 那么执行</span><br><span class="line">eval `ssh-agent -s`</span><br><span class="line">// 测试连接</span><br><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>

<h3 id="多个-ssh-key"><a href="#多个-ssh-key" class="headerlink" title="多个 ssh key"></a>多个 ssh key</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim ~/.ssh/config</span><br><span class="line">Host eg.github.com</span><br><span class="line">    HostName a.github.com</span><br><span class="line">    User linj</span><br><span class="line">    IdentityFile ~/.ssh/a</span><br><span class="line"></span><br><span class="line">Host bbbb.github.com</span><br><span class="line">    HostName b.github.com</span><br><span class="line">    User linjielinlin</span><br><span class="line">    IdentityFile ~/.ssh/b</span><br><span class="line">esc wq</span><br><span class="line"></span><br><span class="line">// 列出ssh key</span><br><span class="line">ssh-add -l</span><br><span class="line">// 清空ssh-key</span><br><span class="line">ssh-add -D</span><br></pre></td></tr></table></figure>

<h2 id="ssh-远程"><a href="#ssh-远程" class="headerlink" title="ssh 远程"></a>ssh 远程</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt install openssh-server</span><br><span class="line">sudo rm -r /etc/ssh/ssh*key</span><br><span class="line"># 使用</span><br><span class="line">sudo dpkg-reconfigure openssh-server</span><br><span class="line"># 或使用二选一</span><br><span class="line">sudo ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key</span><br><span class="line">sudo ssh-keygen -t dsa -f /etc/ssh/ssh_host_dsa_key</span><br><span class="line">sudo ssh-keygen -t ecdsa -f /etc/ssh/ssh_host_ecdsa_key</span><br><span class="line"># 客户端生成ssh</span><br><span class="line">ssh-keygen -t rsa -P &#x27;&#x27;</span><br><span class="line"># 将客户端公钥id_rsa.pub复制到服务端</span><br><span class="line">scp ~/.ssh/id_rsa.pub user@192.168.1.140:~</span><br><span class="line"># 将上传到服务端的公钥添加到~/.ssh/authorzied_keys之中</span><br><span class="line">cat ~/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</span><br><span class="line"># 服务端开启key登录</span><br><span class="line">sudo vim /etc/ssh/sshd_config</span><br><span class="line"># 打开选项 PubkeyAuthentication yes</span><br><span class="line"># 打开选项 AuthorizedKeysFile</span><br><span class="line">sudo service ssh restart</span><br></pre></td></tr></table></figure>

<h2 id="添加软件图标到启动器"><a href="#添加软件图标到启动器" class="headerlink" title="添加软件图标到启动器"></a>添加软件图标到启动器</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ Exec=bash 软件路径</span><br></pre></td></tr></table></figure>

<h1 id="配置链接"><a href="#配置链接" class="headerlink" title="配置链接"></a>配置链接</h1><h2 id="ubuntu-nginx-ssl"><a href="#ubuntu-nginx-ssl" class="headerlink" title="ubuntu-nginx-ssl"></a><a href="https://www.codecasts.com/blog/post/secure-nginx-with-let-s-encrypt-on-ubuntu-16-04">ubuntu-nginx-ssl</a></h2><h1 id="定时任务"><a href="#定时任务" class="headerlink" title="定时任务"></a>定时任务</h1><h2 id="crontab"><a href="#crontab" class="headerlink" title="crontab"></a>crontab</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">运行命令crontab -e打开crontab的任务添加命令</span><br><span class="line">实例1：每1分钟执行一次command</span><br><span class="line">命令：</span><br><span class="line"></span><br><span class="line">* * * * * command</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">实例2：每小时的第3和第15分钟执行</span><br><span class="line"></span><br><span class="line">命令：</span><br><span class="line"></span><br><span class="line">3,15 * * * * command</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">实例3：在上午8点到11点的第3和第15分钟执行</span><br><span class="line"></span><br><span class="line">命令：</span><br><span class="line"></span><br><span class="line">3,15 8-11 * * * command</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">实例4：每隔两天的上午8点到11点的第3和第15分钟执行</span><br><span class="line"></span><br><span class="line">命令：</span><br><span class="line"></span><br><span class="line">3,15 8-11 */2 * * command</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">实例5：每个星期一的上午8点到11点的第3和第15分钟执行</span><br><span class="line"></span><br><span class="line">命令：</span><br><span class="line"></span><br><span class="line">3,15 8-11 * * 1 command</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">实例6：每晚的21:30重启smb</span><br><span class="line"></span><br><span class="line">命令：</span><br><span class="line"></span><br><span class="line">30 21 * * * /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">实例7：每月1、10、22日的4 : 45重启smb</span><br><span class="line"></span><br><span class="line">命令：</span><br><span class="line"></span><br><span class="line">45 4 1,10,22 * * /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">实例8：每周六、周日的1 : 10重启smb</span><br><span class="line"></span><br><span class="line">命令：</span><br><span class="line"></span><br><span class="line">10 1 * * 6,0 /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">实例9：每天18 : 00至23 : 00之间每隔30分钟重启smb</span><br><span class="line"></span><br><span class="line">命令：</span><br><span class="line"></span><br><span class="line">0,30 18-23 * * * /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">实例10：每星期六的晚上11 : 00 pm重启smb</span><br><span class="line"></span><br><span class="line">命令：</span><br><span class="line"></span><br><span class="line">0 23 * * 6 /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">实例11：每一小时重启smb</span><br><span class="line"></span><br><span class="line">命令：</span><br><span class="line"></span><br><span class="line">* */1 * * * /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">实例12：晚上11点到早上7点之间，每隔一小时重启smb</span><br><span class="line"></span><br><span class="line">命令：</span><br><span class="line"></span><br><span class="line">* 23-7/1 * * * /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">实例13：每月的4号与每周一到周三的11点重启smb</span><br><span class="line"></span><br><span class="line">命令：</span><br><span class="line"></span><br><span class="line">0 11 4 * mon-wed /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">实例14：一月一号的4点重启smb</span><br><span class="line"></span><br><span class="line">命令：</span><br><span class="line"></span><br><span class="line">0 4 1 jan * /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line">实例15：每小时执行/etc/cron.hourly目录内的脚本</span><br><span class="line"></span><br><span class="line">命令：</span><br><span class="line"></span><br><span class="line">01   *   *   *   *     root run-parts /etc/cron.hourly</span><br></pre></td></tr></table></figure>

<h2 id="修改为阿里源"><a href="#修改为阿里源" class="headerlink" title="修改为阿里源"></a>修改为阿里源</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo mv /etc/apt/sources.list /etc/apt/sources.list.bak</span><br><span class="line">sudo vim /etc/apt/sources.list</span><br><span class="line"></span><br><span class="line">## 复制以下</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line"></span><br><span class="line"># 更新</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt upgrade</span><br></pre></td></tr></table></figure>

<h2 id="apt-命令"><a href="#apt-命令" class="headerlink" title="apt 命令"></a>apt 命令</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get update  更新源</span><br><span class="line">sudo apt-get install package 安装包</span><br><span class="line">sudo apt-get remove package 删除包</span><br><span class="line">sudo apt-cache search package 搜索软件包</span><br><span class="line">sudo apt-cache show package  获取包的相关信息，如说明、大小、版本等</span><br><span class="line">sudo apt-get install package --reinstall  重新安装包</span><br><span class="line">sudo apt-get -f install  修复安装</span><br><span class="line">sudo apt-get remove package --purge 删除包，包括配置文件等</span><br><span class="line">sudo apt-get build-dep package 安装相关的编译环境</span><br><span class="line">sudo apt-get upgrade 更新已安装的包</span><br><span class="line">sudo apt-get dist-upgrade 升级系统</span><br><span class="line">sudo apt-cache depends package 了解使用该包依赖那些包</span><br><span class="line">sudo apt-cache rdepends package 查看该包被哪些包依赖</span><br><span class="line">sudo apt-get source package  下载该包的源代码</span><br><span class="line">sudo apt-get clean &amp;&amp; sudo apt-get autoclean 清理无用的包</span><br><span class="line">sudo apt-get check 检查是否有损坏的依赖</span><br></pre></td></tr></table></figure>

<h2 id="修改-host"><a href="#修改-host" class="headerlink" title="修改 host"></a>修改 host</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/hosts</span><br></pre></td></tr></table></figure>

<h1 id="WSL"><a href="#WSL" class="headerlink" title="WSL"></a>WSL</h1><h2 id="开机启动脚本"><a href="#开机启动脚本" class="headerlink" title="开机启动脚本"></a>开机启动脚本</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># win+r shell:startup</span><br><span class="line"># 编辑 ubuntu.vbs</span><br><span class="line">set ws=wscript.createobject(&quot;wscript.shell&quot;)</span><br><span class="line">ws.run &quot;C:\Windows\System32\bash.exe&quot;,0</span><br><span class="line">ws.run &quot;C:\Windows\System32\bash.exe  -c &#x27;sudo /root/init.sh&#x27;&quot;,0</span><br></pre></td></tr></table></figure>

<h2 id="默认使用-root"><a href="#默认使用-root" class="headerlink" title="默认使用 root"></a>默认使用 root</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 设置root密码</span><br><span class="line">sudo passwd root</span><br><span class="line"># win设置WSL使用 root</span><br><span class="line"># powershell</span><br><span class="line">ubuntu1804.exe -v</span><br><span class="line">ubuntu1804.exe config --default-user root</span><br></pre></td></tr></table></figure>

<h1 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h1><h2 id="fastadmin"><a href="#fastadmin" class="headerlink" title="fastadmin"></a>fastadmin</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 依赖</span><br><span class="line">sudo apt-get install php7.2-zip php7.2-gd -y</span><br><span class="line">sudo service php7.2-fpm restart</span><br><span class="line"># composer</span><br><span class="line">sudo apt install composer -y</span><br><span class="line"># 使用镜像</span><br><span class="line">composer config -g repo.packagist composer https://packagist.phpcomposer.com</span><br><span class="line"># 开启debug，修改 /fastadmin/application/config.php</span><br><span class="line"># 关于没有权限（线上这样设置）</span><br><span class="line">chown www:www /var/www/fastadmin -R</span><br><span class="line">chmod 655 /var/www/fastadmin -R</span><br><span class="line">chmod u+w /var/www/fastadmin/runtime -R</span><br><span class="line">chmod u+w /var/www/fastadmin/public/upload -R</span><br><span class="line"># 强制重新安装</span><br><span class="line">php think install -u 数据库用户名 -p 数据库密码 --force=true</span><br></pre></td></tr></table></figure>

<h1 id="android-ubuntu18-04"><a href="#android-ubuntu18-04" class="headerlink" title="android ubuntu18.04"></a>android ubuntu18.04</h1><h2 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 开启这个才能启动mysql</span><br><span class="line">usermod -a -G aid_inet,aid_net_raw mysql</span><br><span class="line"># 配置mysql</span><br><span class="line">sudo mysql_secure_installation</span><br><span class="line"># 设置root 密码</span><br><span class="line">y y y n y</span><br><span class="line"># 允许设置简单密码</span><br><span class="line">set global validate_password_policy=0;</span><br><span class="line">set global validate_password_length=4;</span><br><span class="line"># 创建用户</span><br><span class="line">CREATE USER &#x27;linj&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;123456&#x27;;</span><br><span class="line"># del</span><br><span class="line">drop user &#x27;linj&#x27;@&#x27;localhost&#x27;;</span><br><span class="line"># 全部权限</span><br><span class="line">grant all on *.* to  &#x27;linj&#x27;@&#x27;localhost&#x27; identified by &#x27;123456&#x27;;</span><br><span class="line"># test数据库全部权限</span><br><span class="line">grant all on test.* to  &#x27;linj&#x27;@&#x27;localhost&#x27; identified by &#x27;123456&#x27;;</span><br></pre></td></tr></table></figure>

<h2 id="php-arm64-android"><a href="#php-arm64-android" class="headerlink" title="php(arm64 android)"></a>php(arm64 android)</h2><blockquote>
<p>php 环境下运行 curl get 请求返回 false</p>
</blockquote>
]]></content>
      <tags>
        <tag>配置</tag>
      </tags>
  </entry>
  <entry>
    <title>centos7</title>
    <url>/myBlog/2018/07/07/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/centos7/</url>
    <content><![CDATA[<blockquote><p>centos6.5 </p>
</blockquote>

<span id="more"></span>

<h1 id="自动网络对时"><a href="#自动网络对时" class="headerlink" title="自动网络对时"></a>自动网络对时</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo yum -y install ntp</span><br><span class="line"># 使用 ntpdate 测试 NTP</span><br><span class="line">ntpdate pool.ntp.org</span><br><span class="line"># 查看服务器时间</span><br><span class="line">date</span><br><span class="line"># 启动ntpd daemon，持续校准时间</span><br><span class="line">systemctl start ntpd</span><br></pre></td></tr></table></figure>

<h1 id="docker-in-centos7"><a href="#docker-in-centos7" class="headerlink" title="docker in centos7"></a>docker in centos7</h1><h2 id="docker-mongo"><a href="#docker-mongo" class="headerlink" title="docker-mongo"></a><a href="https://www.jianshu.com/p/2181b2e27021">docker-mongo</a></h2><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 权限登录</span><br><span class="line">docker exec -it mongo mongo admin -u linj -p</span><br><span class="line"># 添加用户</span><br><span class="line">db.createUser(&#123; user: &#x27;test&#x27;, pwd: &#x27;123456&#x27;, roles: [&#123; role: &quot;readWrite&quot;, db: &quot;test&quot; &#125;] &#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="备份恢复"><a href="#备份恢复" class="headerlink" title="备份恢复"></a>备份恢复</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一.备份数据库：</span><br><span class="line">方法一：进入mongodb容器：</span><br><span class="line">docker exec -it 容器名 /bin/sh</span><br><span class="line"></span><br><span class="line">执行备份指令：</span><br><span class="line">mongodump -h ip  -d 数据库名 -o  容器存放备份数据的地址</span><br><span class="line">注意：若容器内的存备份数据的地址没有被映射出来，则exit推出容器回到宿主机,</span><br><span class="line">          执行：</span><br><span class="line">          docker cp 容器名:容器内存备份数据的地址  宿主机的存放备份数据的地址</span><br><span class="line">方法二：直接在宿主机执行导出操作：</span><br><span class="line"></span><br><span class="line">            将备份指令写入sh文件，建立宿主机和docker容器之间的联系</span><br><span class="line"></span><br><span class="line">          docker run --link 容器名:mongodb -v 容器存放备份数据的地址:宿主机存放导出文件的地址 mongo 宿主机存放sh文件的地址</span><br><span class="line">          例如：</span><br><span class="line">         docker run --link zks-mongo:mongodb -v /zks/db_backup:/zks/db_backup mongo /zks/db_backup/backupright.sh</span><br><span class="line"></span><br><span class="line">二、导入数据库</span><br><span class="line"></span><br><span class="line">  将数据到入docker中mongodb,且mongodb已经存在这个数据库表</span><br><span class="line"></span><br><span class="line">  先删掉原来的的数据库表，否则，新导入进去的数据如果有一些和原来的数据重复就不能导入成功</span><br><span class="line">  删掉数据库表的步骤：</span><br><span class="line">  1.进入mongodb容器</span><br><span class="line">  2.执行mongo</span><br><span class="line">  3.查看有哪些数据库 show dbs</span><br><span class="line">  4.进入某个数据库 use 数据库名</span><br><span class="line">  5.查看数据库中有哪些表 show collections</span><br><span class="line">  6.删除数据库中的某个表 db.数据库表名.drop()</span><br><span class="line"></span><br><span class="line">  将要导入的数据库表放在容器映射到宿主机的路径下</span><br><span class="line">  执行：</span><br><span class="line">  mongorestore -h mongodb容器的ip -d 要导入的数据库的表名 要导入的数据库表存放的路径</span><br><span class="line">---------------------</span><br><span class="line">作者：crush1988</span><br><span class="line">来源：CSDN</span><br><span class="line">原文：https://blog.csdn.net/crush1988/article/details/81019302</span><br><span class="line">版权声明：本文为博主原创文章，转载请附上博文链接！</span><br></pre></td></tr></table></figure>

<h3 id="默认数据地址"><a href="#默认数据地址" class="headerlink" title="默认数据地址:"></a>默认数据地址:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/var/lib/docker/volumes</span><br></pre></td></tr></table></figure>

<h2 id="yapi"><a href="#yapi" class="headerlink" title="yapi"></a><a href="https://www.jianshu.com/p/a97d2efb23c5">yapi</a></h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -it --rm \</span><br><span class="line"> --link mongo:mongo \</span><br><span class="line"> --entrypoint npm \</span><br><span class="line"> --workdir /api/vendors \</span><br><span class="line"> registry.cn-hangzhou.aliyuncs.com/anoy/yapi \</span><br><span class="line"> run install-server</span><br><span class="line"></span><br><span class="line"># 初始化管理员账号成功,账号名：&quot;admin@admin.com&quot;，密码：&quot;ymfe.org&quot;</span><br><span class="line"></span><br><span class="line">docker run -d \</span><br><span class="line">  --name yapi \</span><br><span class="line">  --link mongo-yapi:mongo \</span><br><span class="line">  --workdir /api/vendors \</span><br><span class="line">  -p 3000:3000 \</span><br><span class="line">  registry.cn-hangzhou.aliyuncs.com/anoy/yapi \</span><br><span class="line">  server/app.js</span><br></pre></td></tr></table></figure>

<h2 id="jenkins"><a href="#jenkins" class="headerlink" title="jenkins"></a><a href="https://github.com/jenkinsci/docker/blob/master/README.md">jenkins</a></h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run --name jenkins -d -e JAVA_OPTS=&quot;-Duser.timezone=Asia/Shanghai&quot; -v jenkins_home:/var/jenkins_home -v /etc/localtime:/etc/localtime -p 3002:8080 -p 50000:50000 jenkins/jenkins</span><br></pre></td></tr></table></figure>

<h2 id="gitlab"><a href="#gitlab" class="headerlink" title="gitlab"></a><a href="https://www.jianshu.com/p/24959481340e">gitlab</a></h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo docker run --detach \</span><br><span class="line">    --hostname gitlab.gdtn.io \</span><br><span class="line">    --publish 443:443 --publish 3003:80 --publish 23:22 \</span><br><span class="line">    --name gitlab \</span><br><span class="line">    --restart always \</span><br><span class="line">    -v /etc/localtime:/etc/localtime \</span><br><span class="line">    --volume /gitlab/config:/etc/gitlab \</span><br><span class="line">    --volume /gitlab/logs:/var/log/gitlab \</span><br><span class="line">    --volume /gitlab/data:/var/opt/gitlab \</span><br><span class="line">    gitlab/gitlab-ce</span><br></pre></td></tr></table></figure>

<h2 id="gitlab-runner"><a href="#gitlab-runner" class="headerlink" title="gitlab-runner"></a><a href="https://segmentfault.com/a/1190000011553991">gitlab-runner</a></h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo docker run -d --name gitlab-runner --add-host=lj.io:127.0.0.1 --restart always   -v /root/lj/gitlab-runner/config:/etc/gitlab-runner   -v /var/run/docker.sock:/var/run/docker.sock   gitlab/gitlab-runner</span><br></pre></td></tr></table></figure>

<h2 id="gitlab-multi-runner"><a href="#gitlab-multi-runner" class="headerlink" title="gitlab-multi-runner"></a><a href="https://hub.docker.com/r/sameersbn/gitlab-ci-multi-runner">gitlab-multi-runner</a></h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo docker run -d --name gitlab-runner --add-host=lj.io:127.0.0.1 --restart always   -v /root/lj/gitlab-runner/config:/etc/gitlab-runner   -v /var/run/docker.sock:/var/run/docker.sock   gitlab/gitlab-runner</span><br></pre></td></tr></table></figure>

<h2 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a><a href="http://www.runoob.com/docker/docker-install-mysql.html">mysql</a></h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker pull mysql</span><br><span class="line">sudo docker run -p 3306:3306 --name mysql -v /opt/docker_v/mysql/conf:/etc/mysql/conf.d -e MYSQL_ROOT_PASSWORD=123456 -d mysql</span><br></pre></td></tr></table></figure>

<h2 id="容器开机启动"><a href="#容器开机启动" class="headerlink" title="容器开机启动"></a>容器开机启动</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 没有使用到 --link的容器使用</span><br><span class="line">docker update --restart=always xxx</span><br><span class="line"># 取消启动</span><br><span class="line">docker update --restart=no xxx</span><br></pre></td></tr></table></figure>

<h2 id="导出容器信息"><a href="#导出容器信息" class="headerlink" title="导出容器信息"></a>导出容器信息</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker inspect name/id</span><br></pre></td></tr></table></figure>

<h2 id="修改容器-host"><a href="#修改容器-host" class="headerlink" title="修改容器 host"></a>修改容器 host</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 创建容器时添加</span><br><span class="line">--add-host= lj.io:127.0.0.1</span><br></pre></td></tr></table></figure>

<h2 id="修改容器时区"><a href="#修改容器时区" class="headerlink" title="修改容器时区"></a>修改容器时区</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-v /etc/localtime:/etc/localtime</span><br></pre></td></tr></table></figure>

<h2 id="进入容器-shell"><a href="#进入容器-shell" class="headerlink" title="进入容器 shell"></a>进入容器 shell</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker exec -it [name] /bin/bash</span><br></pre></td></tr></table></figure>

<h2 id="zip-相关"><a href="#zip-相关" class="headerlink" title="zip 相关"></a>zip 相关</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 压缩</span><br><span class="line">zip –q –r a.zip /home/wwwroot/a</span><br><span class="line"># 解压缩 到当前目录</span><br><span class="line">unzip a.zip</span><br><span class="line"># 解压缩带参</span><br><span class="line">unzip a.zip -q -d /home/a</span><br></pre></td></tr></table></figure>

<h3 id="查看-centos-版本"><a href="#查看-centos-版本" class="headerlink" title="查看 centos 版本"></a>查看 centos 版本</h3><p><code>cat /etc/redhat-release</code></p>
<h1 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo yum install nginx</span><br><span class="line">sudo systemctl start nginx</span><br></pre></td></tr></table></figure>

<h1 id="MYSQL"><a href="#MYSQL" class="headerlink" title="MYSQL"></a>MYSQL</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo rpm -ivh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm</span><br><span class="line">sudo yum -y install mysql-community-server</span><br><span class="line">sudo systemctl start mysqld</span><br><span class="line"># 自启动</span><br><span class="line">sudo systemctl enable mysqld</span><br><span class="line"># 状态</span><br><span class="line">sudo systemctl status mysqld</span><br><span class="line"># 查看默认密码</span><br><span class="line">cat /var/log/mysqld.log | grep -i &#x27;temporary password&#x27;</span><br><span class="line"># 配置mysql</span><br><span class="line">mysql_secure_installation</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo  rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span><br><span class="line">sudo rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm</span><br><span class="line">sudo yum -y install php72w php72w-cli php72w-common php72w-devel php72w-embedded php72w-fpm php72w-gd php72w-mbstring php72w-mysqlnd php72w-opcache php72w-pdo php72w-xml php72w-process php-mysqli --skip-broken</span><br><span class="line"># 查看已安装扩展</span><br><span class="line">php -m</span><br><span class="line"># 启动php-fpm</span><br><span class="line">sudo service php-fpm start</span><br><span class="line"># 检查启动是否成功</span><br><span class="line">sudo service php-fpm status</span><br><span class="line"># 设置开机自启动</span><br><span class="line">sudo systemctl enable php-fpm.service</span><br><span class="line"># 检查开机自启动是否设置成功</span><br><span class="line">sudo systemctl list-dependencies | grep php-fpm</span><br><span class="line"> ps -ef | grep php-fpm</span><br><span class="line"># 查看监听端口</span><br><span class="line">netstat -ant | grep 9000</span><br></pre></td></tr></table></figure>

<h2 id="php-nginx-配置"><a href="#php-nginx-配置" class="headerlink" title="php nginx 配置"></a>php nginx 配置</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 配置最后加上：</span><br><span class="line">fastcgi_param  PHP_ADMIN_VALUE  &quot;open_basedir=/home/php项目根目录/:/tmp/:/proc/&quot;;</span><br></pre></td></tr></table></figure>

<h1 id="安装-redis"><a href="#安装-redis" class="headerlink" title="安装 redis"></a>安装 redis</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install -y http://rpms.famillecollet.com/enterprise/remi-release-7.rpm</span><br><span class="line">yum --enablerepo=remi install redis</span><br><span class="line"># 开机启动</span><br><span class="line">systemctl enable redis.service</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>配置</tag>
      </tags>
  </entry>
  <entry>
    <title>linux shell</title>
    <url>/myBlog/2018/07/07/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/linux/</url>
    <content><![CDATA[<blockquote><p>linux shell </p>
</blockquote>

<span id="more"></span>

<h1 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#使脚本具有执行权限</span><br><span class="line">chmod +x ./test.sh</span><br><span class="line">#执行脚本</span><br><span class="line">./test.sh</span><br></pre></td></tr></table></figure>

<h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><h2 id="定义变量"><a href="#定义变量" class="headerlink" title="定义变量"></a>定义变量</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 设置只读</span><br><span class="line">hi=&quot;hello world!&quot;</span><br><span class="line">readonly hi</span><br><span class="line">hi=&quot;read only&quot;</span><br><span class="line">echo $&#123;hi&#125;</span><br><span class="line">#hello world!</span><br><span class="line"># 删除</span><br><span class="line">del=&quot;del me!&quot;</span><br><span class="line">unset $&#123;del&#125;</span><br><span class="line"># for循环</span><br><span class="line">for key in a b c d e</span><br><span class="line">do</span><br><span class="line">    echo &quot;now key is $&#123;key&#125;&quot;</span><br><span class="line">done</span><br></pre></td></tr></table></figure>

<h2 id="特殊变量"><a href="#特殊变量" class="headerlink" title="特殊变量"></a>特殊变量</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$0  当前脚本的文件名</span><br><span class="line">$n  传递给脚本或函数的参数。n 是一个数字，表示第几个参数。例如，第一个参数是$1，第二个参数是$2。</span><br><span class="line">$#  传递给脚本或函数的参数个数。</span><br><span class="line">$*  传递给脚本或函数的所有参数。</span><br><span class="line">$@  传递给脚本或函数的所有参数。被双引号(&quot; &quot;)包含时，与 $* 稍有不同，下面将会讲到。$* 和 $@ 的区别</span><br><span class="line">    $* 和 $@ 都表示传递给函数或脚本的所有参数，不被双引号(&quot; &quot;)包含时，都以&quot;$1&quot;   &quot;$2&quot; … &quot;$n&quot; 的形式输出所有参数。</span><br><span class="line">    但是当它们被双引号(&quot; &quot;)包含时，&quot;$*&quot; 会将所有的参数作为一个整体，以&quot;$1 $2 …  $n&quot;的形式输出所有参数；&quot;$@&quot; 会将各个参数分开，以&quot;$1&quot; &quot;$2&quot; … &quot;$n&quot;     的形式输出所有参数。</span><br><span class="line"></span><br><span class="line">$?  上个命令的退出状态，或函数的返回值。</span><br><span class="line">$$  当前Shell进程ID。对于 Shell 脚本，就是这些脚本所在的进程ID。</span><br><span class="line">eg:</span><br><span class="line">vim t.sh</span><br><span class="line">echo &quot;文件名: $&#123;0&#125;&quot;</span><br><span class="line">echo &quot;第一个参数 : $&#123;1&#125;&quot;</span><br><span class="line">echo &quot;第二个参数 : $&#123;2&#125;&quot;</span><br><span class="line">echo &quot;参数: $@&quot;</span><br><span class="line">echo &quot;参数: $*&quot;</span><br><span class="line">echo &quot;参数个数 : $&#123;#&#125;&quot;</span><br><span class="line">ESC :wq</span><br></pre></td></tr></table></figure>

<h2 id="转义"><a href="#转义" class="headerlink" title="转义"></a>转义</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 有 -e 表示对转义字符进行替换。如果不使用 -e 选项，将会原样输出</span><br><span class="line">echo -e &#x27;***&#x27;</span><br><span class="line">\\  反斜杠</span><br><span class="line">\a  警报，响铃</span><br><span class="line">\b  退格（删除键）</span><br><span class="line">\f  换页(FF)，将当前位置移到下页开头</span><br><span class="line">\n  换行</span><br><span class="line">\r  回车</span><br><span class="line">\t  水平制表符（tab键）</span><br><span class="line">\v  垂直制表符</span><br></pre></td></tr></table></figure>

<h2 id="自带命令替换"><a href="#自带命令替换" class="headerlink" title="自带命令替换"></a>自带命令替换</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 不是单引号</span><br><span class="line">DATE=`date`</span><br><span class="line">echo &quot;当前时间是： $&#123;DATE&#125;&quot;</span><br></pre></td></tr></table></figure>

<h2 id="变量替换"><a href="#变量替换" class="headerlink" title="变量替换"></a>变量替换</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$&#123;var&#125;  变量本来的值</span><br><span class="line">$&#123;var:-word&#125;    如果变量 var 为空或已被删除(unset)，那么返回 word，但不改变 var 的值。</span><br><span class="line">$&#123;var:=word&#125;    如果变量 var 为空或已被删除(unset)，那么返回 word，并将 var 的值设置为 word。</span><br><span class="line">$&#123;var:?message&#125; 如果变量 var 为空或已被删除(unset)，那么将消息 message 送到标准错误输出，可以用来检测变量 var 是否可以被正常赋值。</span><br><span class="line">若此替换出现在Shell脚本中，那么脚本将停止运行。</span><br><span class="line">$&#123;var:+word&#125;    如果变量 var 被定义，那么返回 word，但不改变 var 的值。</span><br></pre></td></tr></table></figure>

<h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><h3 id="查看端口占用"><a href="#查看端口占用" class="headerlink" title="查看端口占用"></a>查看端口占用</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">netstat -anp|grep 80</span><br></pre></td></tr></table></figure>

<h3 id="wget"><a href="#wget" class="headerlink" title="wget"></a>wget</h3><h3 id="更改文件-x2F-文件夹所有者"><a href="#更改文件-x2F-文件夹所有者" class="headerlink" title="更改文件&#x2F;文件夹所有者"></a>更改文件&#x2F;文件夹所有者</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo chown -R root:root 文件/文件夹</span><br></pre></td></tr></table></figure>

<h3 id="建立软连接"><a href="#建立软连接" class="headerlink" title="建立软连接"></a>建立软连接</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ln -s 源目录 目标目录（绝对路径）</span><br></pre></td></tr></table></figure>

<h3 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">passwd usrname</span><br></pre></td></tr></table></figure>

<h3 id="新建用户"><a href="#新建用户" class="headerlink" title="新建用户"></a>新建用户</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">adduser linj</span><br><span class="line"># 输入密码，然后一路回车，按y</span><br><span class="line"># 添加root权限</span><br><span class="line">vim /etc/sudoers</span><br></pre></td></tr></table></figure>

<h3 id="改变用户-x2F-组"><a href="#改变用户-x2F-组" class="headerlink" title="改变用户&#x2F;组"></a>改变用户&#x2F;组</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># -R 为递归操作</span><br><span class="line">chown -R username dirname/filename</span><br><span class="line"># -R 为递归操作</span><br><span class="line">chgrp -R groupname dirname</span><br></pre></td></tr></table></figure>

<h3 id="显示磁盘空间"><a href="#显示磁盘空间" class="headerlink" title="显示磁盘空间"></a>显示磁盘空间</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">df -hl</span><br><span class="line"># 查看当前目录文件大小，max-depth为目录层数</span><br><span class="line">du -h --max-depth=1</span><br></pre></td></tr></table></figure>

<h3 id="同步时间"><a href="#同步时间" class="headerlink" title="同步时间"></a>同步时间</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># apt-get install ntpdate</span><br><span class="line">#  yum install ntp</span><br><span class="line">ntpdate cn.pool.ntp.org</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>配置</tag>
      </tags>
  </entry>
  <entry>
    <title>win CMD</title>
    <url>/myBlog/2018/07/07/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/win/</url>
    <content><![CDATA[<blockquote><p>win 命令行相关 </p>
</blockquote>

<span id="more"></span>
<h1 id="echo输入文件"><a href="#echo输入文件" class="headerlink" title="echo输入文件"></a>echo输入文件</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">奖内容写入.npmrc中，若不存在文件则生成</span></span><br><span class="line">echo registry= &gt; /root/.npmrc</span><br><span class="line"><span class="meta"># </span><span class="language-bash">向文件追加内容,会换行</span></span><br><span class="line">echo https://registry.npmmirror.com/ &gt;&gt; /root/.npmrc</span><br></pre></td></tr></table></figure>

<h1 id="设置代理"><a href="#设置代理" class="headerlink" title="设置代理"></a>设置代理</h1><p><code>set http_proxy=http://127.0.0.1:7777</code></p>
<h1 id="不显示-CMD-窗口"><a href="#不显示-CMD-窗口" class="headerlink" title="不显示 CMD 窗口"></a>不显示 CMD 窗口</h1><p><code>CreateObject(&quot;WScript.Shell&quot;).Run &quot;CMD脚本&quot;,0</code></p>
<h1 id="查看端口占用"><a href="#查看端口占用" class="headerlink" title="查看端口占用"></a>查看端口占用</h1><p><code>netstat -aon|findstr &quot;1119&quot; LISTENING 后面即为PID</code></p>
<h1 id="查看-PID-对应-exe"><a href="#查看-PID-对应-exe" class="headerlink" title="查看 PID 对应 exe"></a>查看 PID 对应 exe</h1><p><code>tasklist|findstr &quot;PID&quot;</code></p>
<h1 id="暂停-10-秒"><a href="#暂停-10-秒" class="headerlink" title="暂停 10 秒"></a>暂停 10 秒</h1><p><code>ping localhost -n 10 &gt; nul</code></p>
<h1 id="空格暂停"><a href="#空格暂停" class="headerlink" title="空格暂停"></a>空格暂停</h1><p><code>pause /s</code></p>
<h1 id="ARP-绑定"><a href="#ARP-绑定" class="headerlink" title="ARP 绑定"></a>ARP 绑定</h1><p><code>arp -s ip mac</code></p>
<h1 id="查看-ARP"><a href="#查看-ARP" class="headerlink" title="查看 ARP"></a>查看 ARP</h1><p><code>arp -a</code></p>
<h1 id="文件夹映射"><a href="#文件夹映射" class="headerlink" title="文件夹映射"></a>文件夹映射</h1><blockquote>
<p>mklink 只能在命令提示符 “CMD” 中使用。</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mklink [[/d] | [/h] | [/j]] Link Target</span><br><span class="line">/d　　　创建目录符号链接。黙认为文件符号链接。</span><br><span class="line">/h　　　创建硬链接，而不是符号链接。</span><br><span class="line">/h　　　创建目录联接。</span><br><span class="line">Link　　指定新的符号链接名称。</span><br><span class="line">Target　指定新链接引用的路径(相对或绝对)。</span><br><span class="line">eg: mklink /d 新路径 源路径</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>配置</tag>
      </tags>
  </entry>
  <entry>
    <title>appium-androidUi测试</title>
    <url>/myBlog/2016/07/07/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/appium-androidUi%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<blockquote><p>appium-androidUi 测试环境搭建 </p>
</blockquote>

<span id="more"></span>

<h1 id="工具准备"><a href="#工具准备" class="headerlink" title="工具准备"></a>工具准备</h1><h2 id="appium"><a href="#appium" class="headerlink" title="appium"></a><a href="http://appium.io/">appium</a></h2><h2 id="JAVA"><a href="#JAVA" class="headerlink" title="JAVA"></a><a href="https://www.java.com/zh_CN/">JAVA</a></h2><h2 id="AndroidSDK"><a href="#AndroidSDK" class="headerlink" title="AndroidSDK"></a><a href="http://sdk.android-studio.org/">AndroidSDK</a></h2><h2 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h2><h3 id="确认-JAVA-环境变量，没有则添加"><a href="#确认-JAVA-环境变量，没有则添加" class="headerlink" title="确认 JAVA 环境变量，没有则添加"></a>确认 JAVA 环境变量，没有则添加</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 测试</span><br><span class="line">java -version</span><br></pre></td></tr></table></figure>

<h3 id="设置-AndroidSDK-环境变量"><a href="#设置-AndroidSDK-环境变量" class="headerlink" title="设置 AndroidSDK 环境变量"></a>设置 AndroidSDK 环境变量</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 测试</span><br><span class="line">adb devices</span><br></pre></td></tr></table></figure>

<h2 id="连接真机"><a href="#连接真机" class="headerlink" title="连接真机"></a>连接真机</h2><blockquote>
<p>手机打开开发者模式，允许调试，允许 USB 安装程序<br>下载谷歌框架，安卓最新版 Chrome（调试 webview）</p>
</blockquote>
<h2 id="使用-node-js-编写测试代码"><a href="#使用-node-js-编写测试代码" class="headerlink" title="使用 node.js 编写测试代码"></a>使用 node.js 编写测试代码</h2><blockquote>
<p>安装 node.js,安装依赖</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i wd,... -g</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>测试</tag>
      </tags>
  </entry>
  <entry>
    <title>centos6.5</title>
    <url>/myBlog/2016/07/07/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/centos6.5/</url>
    <content><![CDATA[<blockquote><p>centos6.5 </p>
</blockquote>

<span id="more"></span>

<h1 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h1><h2 id="vsftpd"><a href="#vsftpd" class="headerlink" title="vsftpd"></a>vsftpd</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install vsftpd</span><br></pre></td></tr></table></figure>

<h3 id="虚拟用户"><a href="#虚拟用户" class="headerlink" title="虚拟用户"></a>虚拟用户</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum -y install db4 db4-utils</span><br><span class="line">#创建用户列表，注意奇行是用户名，偶行是密码</span><br><span class="line">vim /etc/vsftpd/virtual_user.txt</span><br><span class="line"></span><br><span class="line">#添加用户</span><br><span class="line">test</span><br><span class="line">123456</span><br><span class="line"></span><br><span class="line"># 生成虚拟用户认证的db文件</span><br><span class="line">db_load -T -t hash -f /etc/vsftpd/virtual_user.txt /etc/vsftpd/virtual_user.db</span><br><span class="line"># 编辑认证文件</span><br><span class="line">vim /etc/pam.d/vsftpd</span><br><span class="line"># 保留第一行注释其他，在最后增加以下两句</span><br><span class="line"># 32位系统</span><br><span class="line">auth required /lib/security/pam_userdb.so db=/etc/vsftpd/virtual_user</span><br><span class="line">account required /lib/security/pam_userdb.so db=/etc/vsftpd/virtual_user</span><br><span class="line"># 64位系统</span><br><span class="line">auth required /lib64/security/pam_userdb.so db=/etc/vsftpd/virtual_user</span><br><span class="line">account required /lib64/security/pam_userdb.so db=/etc/vsftpd/virtual_user</span><br><span class="line">#生成配置文件</span><br><span class="line">mkdir -p /etc/vsftpd/virtual_conf</span><br><span class="line"></span><br><span class="line">#添加账户，文件名等于virtual_user.txt里面的账户名，否则下面设置无效</span><br><span class="line">vim /etc/vsftpd/virtual_conf/test</span><br><span class="line"></span><br><span class="line"># 每个虚拟用户的单独配置，会覆盖模板配置文件配置</span><br><span class="line">local_root=/www/wwwroot</span><br><span class="line">anon_umask=022</span><br><span class="line">write_enable=YES</span><br><span class="line">anon_world_readable_only=NO</span><br><span class="line">anon_upload_enable=YES</span><br><span class="line">anon_mkdir_write_enable=YES</span><br><span class="line">anon_other_write_enable=YES</span><br></pre></td></tr></table></figure>

<h3 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># vim /etc/sysconfig/iptables</span><br><span class="line">iptables -A INPUT -m state --state NEW -m tcp -p tcp --dport 21 -j ACCEPT</span><br><span class="line">iptables -A INPUT -p tcp -m state --state NEW -m tcp --dport 50000:50020 -j ACCEPT</span><br><span class="line">service iptables save</span><br><span class="line">service iptables restart</span><br></pre></td></tr></table></figure>

<h3 id="配置-SELinux"><a href="#配置-SELinux" class="headerlink" title="配置 SELinux"></a>配置 SELinux</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 关掉</span><br><span class="line">setenforce 0</span><br><span class="line"># 或使用这个</span><br><span class="line">setsebool -P allow_ftpd_full_access 1</span><br></pre></td></tr></table></figure>

<h3 id="vsftpd-conf"><a href="#vsftpd-conf" class="headerlink" title="vsftpd.conf"></a>vsftpd.conf</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Example config file /etc/vsftpd/vsftpd.conf</span><br><span class="line">#</span><br><span class="line"># 如果vsftpd处于独立模式，则这是它将侦听传入FTP连接的端口。</span><br><span class="line">listen_port=21</span><br><span class="line">#</span><br><span class="line"># 登入目录</span><br><span class="line">local_root=/root/home/ftp</span><br><span class="line">#</span><br><span class="line"># 是否允许匿名用户登录</span><br><span class="line">anonymous_enable=NO</span><br><span class="line">#</span><br><span class="line"># 设定本地用户可以访问。注：如使用虚拟宿主用户，在该项目设定为NO的情况下所有虚拟用户将无法访问</span><br><span class="line">local_enable=YES</span><br><span class="line">#</span><br><span class="line"># 设定允许进行写操作(上传、删除)，默认为YES</span><br><span class="line">write_enable=YES</span><br><span class="line">#</span><br><span class="line"># 使用本地时间，如果不设置的话默认时间是GMT格林时间，会慢8个小时</span><br><span class="line">use_localtime=YES</span><br><span class="line">#</span><br><span class="line"># 此参数在VSFTPD使用单独(standalone)模式下有效。此参数定义了FTP服务器最大的并发连接数，当超过此连接数时，服务器拒绝客户端连接。默认值：0（无限制）。</span><br><span class="line">max_clients=5</span><br><span class="line">#</span><br><span class="line"># 此参数在VSFTPD使用单独(standalone)模式下有效。此参数定义每个IP地址最大的并发连接数目。超过这个数目将会拒绝连接。此选项的设置将影响到象网际快车这类的多进程下载软件。默认值为0，表示不限制。</span><br><span class="line">max_per_ip=3</span><br><span class="line">#</span><br><span class="line"># 掩饰码</span><br><span class="line">local_umask=022</span><br><span class="line">#</span><br><span class="line"># 是否允许匿名FTP用户上传文件。</span><br><span class="line">#anon_upload_enable=YES</span><br><span class="line">#</span><br><span class="line"># 是否允许匿名FTP用户能够创建新目录</span><br><span class="line">#anon_mkdir_write_enable=YES</span><br><span class="line">#</span><br><span class="line"># 激活目录消息 - 当远程用户进入某个目录时发送的消息。</span><br><span class="line">dirmessage_enable=YES</span><br><span class="line">#</span><br><span class="line"># 设置为yes时，用户上传和下载文件都会被记录下来，记录文件位置与xferlog_file=/var/log/vsftpd/xferlog</span><br><span class="line">xferlog_enable=YES</span><br><span class="line">#</span><br><span class="line"># 在vsftpd_log_file和xferlog_file文件之间切换登录文件信息，NO 写入 vsftpd_log_file, YES 写入 xferlog_file</span><br><span class="line">xferlog_std_format=YES</span><br><span class="line">#</span><br><span class="line"># 设置另外一个vsftpd的日记文件，也可以不设置</span><br><span class="line">dual_log_enable=YES</span><br><span class="line">xferlog_file=/var/log/vsftpd/xferlog</span><br><span class="line">#</span><br><span class="line"># 设置日志目录</span><br><span class="line">vsftpd_log_file=/var/log/vsftpd/vsftpd.log</span><br><span class="line">#</span><br><span class="line"># 端口样式连接始发的端口（只要名称不正确的 connect_from_port_20 启用），默认值：20</span><br><span class="line">#connect_from_port_20=YES</span><br><span class="line">#</span><br><span class="line"># 是否修改匿名用户所上传文件的所有权。YES，匿名用户所上传的文件的所有权将改为另外一个不同的用户所有，用户由chown_username参数指定。此选项默认值为NO。</span><br><span class="line">#chown_uploads=YES</span><br><span class="line">#</span><br><span class="line"># 指定拥有匿名用户上传文件所有权的用户</span><br><span class="line">#chown_username=whoever</span><br><span class="line">#</span><br><span class="line"># 远程客户端建立与PASV样式数据连接的连接的超时（以秒为单位）,默认值：60。</span><br><span class="line">#accept_timeout=60</span><br><span class="line">#</span><br><span class="line"># 远程客户端响应我们的端口样式数据连接的超时时间（秒）。默认值：60。</span><br><span class="line">#connect_timeout=60</span><br><span class="line">#</span><br><span class="line"># 远程客户端可能在FTP命令之间花费的最长时间（以秒为单位）。如果超时触发，远程客户端将被启动。默认值：300</span><br><span class="line">#idle_session_timeout=300</span><br><span class="line">#</span><br><span class="line"># 超时时间（以秒为单位），大概是允许数据传输停止而无进度的最大时间。如果超时触发，远程客户端将被启动。默认值：300</span><br><span class="line">#data_connection_timeout=300</span><br><span class="line">#</span><br><span class="line"># 本地认证用户允许的最大数据传输速率（以字节为单位）。默认值：0（无限制）</span><br><span class="line">#local_max_rate=0</span><br><span class="line">#</span><br><span class="line"># 建议您在系统上定义一个唯一的用户，ftp服务器可以用作完全独立且无特权的用户。</span><br><span class="line">#nopriv_user=ftpsecure</span><br><span class="line">#</span><br><span class="line"># 是否启动异步传输功能</span><br><span class="line">#async_abor_enable=YES</span><br><span class="line">#</span><br><span class="line"># 是否启用ASCII功能</span><br><span class="line">ascii_upload_enable=YES</span><br><span class="line">ascii_download_enable=YES</span><br><span class="line">#</span><br><span class="line"># 自定义登录显示的字符串</span><br><span class="line">#ftpd_banner=Welcome to blah FTP service.</span><br><span class="line">#</span><br><span class="line"># 指定某个纯文本作为用户登录时显示的欢迎字眼，也可以放置一些让用户知道本FTP服务器的目录架构</span><br><span class="line">#banner_file=/etc/vsftpd/welcome.txt</span><br><span class="line">#</span><br><span class="line"># 您可以指定一个不允许的匿名电子邮件地址的文件。 显然有助于打击某些DoS攻击。</span><br><span class="line">#deny_email_enable=YES</span><br><span class="line"># (default follows)</span><br><span class="line">#banned_email_file=/etc/vsftpd/banned_emails</span><br><span class="line">#</span><br><span class="line"># 锁定某些用户在自家目录中。即当这些用户登录后，不可以转到系统的其他目录，只能在自家目录(及其子目录)下。</span><br><span class="line">#chroot_local_user=YES</span><br><span class="line">chroot_list_enable=YES</span><br><span class="line"># (default follows)</span><br><span class="line">#chroot_list_file=/etc/vsftpd/chroot_list</span><br><span class="line">#</span><br><span class="line"># 此选项默认值为NO , 此时ftpusers 文件中的用户禁止登录FTP 服务器；若此项设为YES ，则 user_list 文件中的用户允许登录 FTP 服务器，而如果同时设置了 userlist_deny=YES ，则 user_list 文件中的用户将不允许登录FTP 服务器，甚至连输入密码提示信息都没有，直接被FTP服务器拒绝</span><br><span class="line">#userlist_enable=YES</span><br><span class="line">#</span><br><span class="line"># 此项默认为YES ，设置是否阻扯user_list 文件中的用户登录FTP 服务器,设置为NO时只允许user_list 当中的用户使用ftp,对于后新建的用户起到屏蔽作用，如果想要使用ftp则必须加入这个列表文件中</span><br><span class="line">#userlist_deny=NO</span><br><span class="line">#</span><br><span class="line"># 当启用“listen”指令时，vsftpd以独立模式运行，并在IPv4套接字上侦听。 该指令不能与listen_ipv6指令一起使用。</span><br><span class="line">listen=YES</span><br><span class="line">#</span><br><span class="line"># 此指令允许侦听IPv6套接字。 要监听IPv4和IPv6套接字，您必须运行两个vsftpd副本和两个配置文件。请确保其中一个listen选项被注释！</span><br><span class="line">#listen_ipv6=YES</span><br><span class="line">#</span><br><span class="line"># 设置 PAM 外挂模块提供的认证服务所使用的配置文件名 ，即/etc/pam.d/vsftpd 文件</span><br><span class="line">pam_service_name=vsftpd.db</span><br><span class="line">#</span><br><span class="line"># 是否开启用虚拟用户功能</span><br><span class="line">guest_enable=YES</span><br><span class="line">#</span><br><span class="line"># 指定虚拟用户的宿主用户，CentOS中已经有内置的ftp用户了</span><br><span class="line">guest_username=root</span><br><span class="line">#</span><br><span class="line"># 匿名客户端允许的最大数据传输速率（以字节为单位）。默认值：0（无限制）</span><br><span class="line">#anon_max_rate=0</span><br><span class="line">#</span><br><span class="line"># 为匿名用户设置文件创建的umask的值。注意！如果要指定八进制值，请记住“0”前缀，否则该值将被视为基数10整数！默认值：077</span><br><span class="line">#anon_umask=022</span><br><span class="line">#</span><br><span class="line"># 设定虚拟用户个人vsftp的CentOS FTP服务文件存放路径。存放虚拟用户个性的CentOS FTP服务文件(配置文件名=虚拟用户名)</span><br><span class="line">user_config_dir=/etc/vsftpd/virtual_conf</span><br><span class="line">#</span><br><span class="line"># 如果要禁止PASV方法获取数据连接，请设置为NO。</span><br><span class="line">pasv_enable=YES</span><br><span class="line">#</span><br><span class="line"># 设定在PASV模式下，建立数据传输所可以使用port范围的下界和上界，0 表示任意。默认值为0。把端口范围设在比较高的一段范围内</span><br><span class="line">pasv_min_port=50000</span><br><span class="line">pasv_max_port=50020</span><br><span class="line">#</span><br><span class="line"># 默认值为NO。为YES时，将关闭PASV模式的安全检查。</span><br><span class="line">pasv_promiscuous=YES</span><br><span class="line">#</span><br><span class="line"># 如果您不想使用PORT方法获取数据连接，则设置为NO。</span><br><span class="line">#port_enable=YES</span><br><span class="line">#</span><br><span class="line"># 默认值为NO。如果要禁用PORT安全检查，确保传出数据连接只能连接到客户端，请设置为YES。</span><br><span class="line">#port_promiscuous=YES</span><br><span class="line">#</span><br><span class="line"># 表明服务器使用 tcp_wrappers 作为主机访问控制方式，tcp_wrappers 可以实现linux 系统中网络服务的基于主机地址的访问控制，在/etc 目录中的hosts.allow 和hosts.deny 两个文件用于设置tcp_wrappers 的访问控制，前者设置允许访问记录，后者设置拒绝访问记录。例如想限制某些主机对FTP 服务器12.36.126.141 的匿名访问，编缉/etc/hosts.allow 文件，如在下面增加两行命令：vsftpd:192.168.2.1:DENY 和vsftpd:192.168.2.20:DENY 表明限制IP 为192.168.2.1/192.168.2.20 主机访问IP 为12.36.126.141 的FTP 服务器，此时FTP 服务器虽可以PING 通，但无法连接</span><br><span class="line">tcp_wrappers=YES</span><br></pre></td></tr></table></figure>

<h3 id="重启-vsftpd-服务"><a href="#重启-vsftpd-服务" class="headerlink" title="重启 vsftpd 服务"></a>重启 vsftpd 服务</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#启动vsftpd 服务</span><br><span class="line">service vsftpd start</span><br><span class="line"></span><br><span class="line">#重启vsftpd 服务</span><br><span class="line">service vsftpd restart</span><br></pre></td></tr></table></figure>

<h3 id="开机启动"><a href="#开机启动" class="headerlink" title="开机启动"></a>开机启动</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chkconfig vsftpd on</span><br><span class="line">chkconfig vsftpd --list | grep vsftpd</span><br></pre></td></tr></table></figure>

<h3 id="连不上处理"><a href="#连不上处理" class="headerlink" title="连不上处理"></a>连不上处理</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">连接被拒绝</span><br><span class="line">有两个原因，vsftpd进程没有启动，或者服务器防火墙的端口没有打开。</span><br><span class="line">可以用</span><br><span class="line">telnet 服务器IP地址 21</span><br><span class="line">这个命令来测试。</span><br><span class="line"></span><br><span class="line">500 OOPS: priv_sock_get_cmd</span><br><span class="line">增加这个配置应该就可以解决：</span><br><span class="line">seccomp_sandbox=NO</span><br><span class="line"></span><br><span class="line">错误: GnuTLS 错误 -15: An unexpected TLS packet was received.</span><br><span class="line">增加这个配置可以解决：</span><br><span class="line">allow_writeable_chroot=YES</span><br><span class="line"></span><br><span class="line">响应: 425 Security: Bad IP connecting.</span><br><span class="line">这个一般是因为pasv端口没有设置，或者防火墙上对应的端口没有打开。</span><br><span class="line">防火墙上打开40000~40100端口，然后设置</span><br><span class="line">pasv_min_port=40000</span><br><span class="line">pasv_max_port=40100</span><br><span class="line">pasv_promiscuous=YES</span><br><span class="line">就可以解决了。</span><br></pre></td></tr></table></figure>

<h3 id="参考自"><a href="#参考自" class="headerlink" title="参考自"></a><a href="https://www.jianshu.com/p/ea32af794680">参考自</a></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">作者：马儿爱吃草</span><br><span class="line">链接：https://www.jianshu.com/p/ea32af794680</span><br><span class="line">來源：简书</span><br><span class="line">简书著作权归作者所有，任何形式的转载都请联系作者获得授权并注明出处。</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>配置</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 Travis CI 自动更新 GitHub Pages</title>
    <url>/myBlog/2016/07/07/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/travis/</url>
    <content><![CDATA[<blockquote><p>使用 Travis CI 自动更新 GitHub Pages </p>
</blockquote>

<span id="more"></span>

<h2 id="生成一个-Github-Personal-Access-Token"><a href="#生成一个-Github-Personal-Access-Token" class="headerlink" title="生成一个 Github Personal Access Token"></a>生成一个 Github Personal Access Token</h2><h4 id="前往-Github-帐号-Settings-页面，在左侧选择-Personal-Access-Token，然后在右侧面板点击-“Generate-new-token”-来新建一个-Token。需要注意的是，创建完的-Token-只有第一次可见，之后再访问就无法看见（只能看见他的名称），因此要保存好这个值。"><a href="#前往-Github-帐号-Settings-页面，在左侧选择-Personal-Access-Token，然后在右侧面板点击-“Generate-new-token”-来新建一个-Token。需要注意的是，创建完的-Token-只有第一次可见，之后再访问就无法看见（只能看见他的名称），因此要保存好这个值。" class="headerlink" title="前往 Github 帐号 Settings 页面，在左侧选择 Personal Access Token，然后在右侧面板点击 “Generate new token” 来新建一个 Token。需要注意的是，创建完的 Token 只有第一次可见，之后再访问就无法看见（只能看见他的名称），因此要保存好这个值。"></a>前往 Github 帐号 Settings 页面，在左侧选择 Personal Access Token，然后在右侧面板点击 “Generate new token” 来新建一个 Token。需要注意的是，创建完的 Token 只有第一次可见，之后再访问就无法看见（只能看见他的名称），因此要保存好这个值。</h4><h2 id="使用-Travis-CI-的-命令行工具-加密-GitHub-的-Personal-Access-Token"><a href="#使用-Travis-CI-的-命令行工具-加密-GitHub-的-Personal-Access-Token" class="headerlink" title="使用 Travis CI 的 命令行工具 加密 GitHub 的 Personal Access Token"></a>使用 Travis CI 的 命令行工具 加密 GitHub 的 Personal Access Token</h2><h4 id="这个工具是一个-gem-包，因此需要-Ruby-环境。假设已经安装好-Ruby-环境，即可安装-Travis-CI-的命令行工具，以及加密："><a href="#这个工具是一个-gem-包，因此需要-Ruby-环境。假设已经安装好-Ruby-环境，即可安装-Travis-CI-的命令行工具，以及加密：" class="headerlink" title="这个工具是一个 gem 包，因此需要 Ruby 环境。假设已经安装好 Ruby 环境，即可安装 Travis CI 的命令行工具，以及加密："></a>这个工具是一个 gem 包，因此需要 Ruby 环境。假设已经安装好 Ruby 环境，即可安装 Travis CI 的命令行工具，以及加密：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 安装 Travis CI 命令行工具</span><br><span class="line">gem install travis</span><br><span class="line"></span><br><span class="line"># 加密 Personal Access Token</span><br><span class="line">travis encrypt -r iissnan/theme-next-docs GH_Token=XXX</span><br></pre></td></tr></table></figure>

<h4 id="第二条命令中-r-后的参数是-GitHub-仓库的名字（-lt-用户名-gt-x2F-lt-仓库名-gt-）；GH-TOKEN-将作为环境变量使用。将这条命令输出的结果复制到-travis-yml-文件下："><a href="#第二条命令中-r-后的参数是-GitHub-仓库的名字（-lt-用户名-gt-x2F-lt-仓库名-gt-）；GH-TOKEN-将作为环境变量使用。将这条命令输出的结果复制到-travis-yml-文件下：" class="headerlink" title="第二条命令中 -r 后的参数是 GitHub 仓库的名字（&lt;用户名&gt;&#x2F;&lt;仓库名&gt;）；GH_TOKEN 将作为环境变量使用。将这条命令输出的结果复制到 .travis.yml 文件下："></a>第二条命令中 -r 后的参数是 GitHub 仓库的名字（&lt;用户名&gt;&#x2F;&lt;仓库名&gt;）；GH_TOKEN 将作为环境变量使用。将这条命令输出的结果复制到 .travis.yml 文件下：</h4><h2 id="让-Travis-CI-往-Github-仓库的-gh-pages-分支提交"><a href="#让-Travis-CI-往-Github-仓库的-gh-pages-分支提交" class="headerlink" title="让 Travis CI 往 Github 仓库的 gh-pages 分支提交"></a>让 Travis CI 往 Github 仓库的 gh-pages 分支提交</h2><h4 id="根据需求的不同，这里的配置也不尽相同，但重要的是如何使用-GH-REF-和-GH-TOKEN-这两个环境变量。NexT-文档是执行-gulp-dist-来生成最终的-HTML-文件，然后推送到-GitHub-Pages，其配置如下："><a href="#根据需求的不同，这里的配置也不尽相同，但重要的是如何使用-GH-REF-和-GH-TOKEN-这两个环境变量。NexT-文档是执行-gulp-dist-来生成最终的-HTML-文件，然后推送到-GitHub-Pages，其配置如下：" class="headerlink" title="根据需求的不同，这里的配置也不尽相同，但重要的是如何使用 GH_REF 和 GH_TOKEN 这两个环境变量。NexT 文档是执行 gulp dist 来生成最终的 HTML 文件，然后推送到 GitHub Pages，其配置如下："></a>根据需求的不同，这里的配置也不尽相同，但重要的是如何使用 GH_REF 和 GH_TOKEN 这两个环境变量。NexT 文档是执行 gulp dist 来生成最终的 HTML 文件，然后推送到 GitHub Pages，其配置如下：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">language: node_js</span><br><span class="line">node_js: stable</span><br><span class="line"># Travis-CI Caching</span><br><span class="line">cache:</span><br><span class="line">  directories:</span><br><span class="line">    - node_modules</span><br><span class="line"># S: Build Lifecycle</span><br><span class="line">install:</span><br><span class="line">  - npm install</span><br><span class="line">script:</span><br><span class="line">  - hexo clean</span><br><span class="line">  - hexo g</span><br><span class="line"></span><br><span class="line">after_script:</span><br><span class="line">  - cd public</span><br><span class="line">  - git init</span><br><span class="line">  - git config user.name &quot;LinJieLinLin&quot;</span><br><span class="line">  - git config user.email &quot;993353454@qq.com&quot;</span><br><span class="line">  - git add .</span><br><span class="line">  - git commit -m &quot;Update Blog&quot;</span><br><span class="line">  - git push --force --quiet &quot;https://$&#123;GH_TOKEN&#125;@$&#123;GH_URL&#125;&quot; master:gh-pages</span><br><span class="line"># E: Build LifeCycle</span><br><span class="line"></span><br><span class="line">branches:</span><br><span class="line">  only:</span><br><span class="line">    - master</span><br><span class="line">env:</span><br><span class="line"> global:</span><br><span class="line">  - secure: &quot;gtTjsLor7/6tnMpuM0e4g8Om7A8KvZSd9uX1c9Ey4CyCpILEWpDyP/pEBM4e4gmt6ADierzWiDNlK76Vkprioql+RxVrRohu3VpEwDHWfNiRNY662ysLPqS8DVbWwJLsrPegdgyXd9WWkMaf49kwMRSWSpKh8dA0T6ngQqGaXKmJnlf6SQOZCZwucf33P+K2RqklAytnBDrVFUyKGmsk/qRbDu4mSVPlfIfBZktdPFm4tbyStTFw8PKixUD9b33SSbR4SeH5zYRCXzDIldTPL+fW2+yTWEM+g+WqTMZgRH/jJBsfGhjtjTW1Kb/c7hphpF/GoRl444Tm68LoGx7sTEhs7tCOAftEYShci5cMhRxxnuLiDJnzFUT9v4QIfaHyIHpTB+WTWCcFeaTmRcggoDaQbegkUReaUosw5V36YopdEVSMG0VL0V6WkQRaRfP6NrDBK6G5HjOTzc6qXUuxTfB6vYeT9sef0E3zEIHnVQBRl+uyeraRk5hBMeVCmjs1SoSFysdwzNhHCagM7PHWQSsWfwGZCa2X1e569SXxONF7WBF0C3iqCYHsWNa1LBC0YoESgMUp56yf/FiYauMoBa7isDs61jVBF2/bfOdfgRDrccjoLdHwuulb/3fRLs3PnqorAG0/Hmr/PazFwyw2IDlp7Psm9FbtumFaUJzg6OU=&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>配置</tag>
      </tags>
  </entry>
  <entry>
    <title>jenkins</title>
    <url>/myBlog/2016/07/07/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/jenkins/</url>
    <content><![CDATA[<blockquote><p>jenkins 相关 </p>
</blockquote>

<span id="more"></span>

<h1 id="捕获脚本运行时的错误"><a href="#捕获脚本运行时的错误" class="headerlink" title="捕获脚本运行时的错误"></a>捕获脚本运行时的错误</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在脚本首行加上：</span><br><span class="line">set -e</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>配置</tag>
      </tags>
  </entry>
  <entry>
    <title>sublimetext相关</title>
    <url>/myBlog/2016/05/04/%E5%B7%A5%E5%85%B7%E7%B1%BB-sublime/</url>
    <content><![CDATA[<blockquote><p>sublimetext 快捷键 </p>
</blockquote>

<span id="more"></span>

<h1 id="我的插件"><a href="#我的插件" class="headerlink" title="我的插件"></a>我的插件</h1><ol>
<li>Babel</li>
<li>ColorPicker 颜色选择</li>
<li>ConvertToUTF8 解决中文乱码问题</li>
<li>HTML-CSS-JS Prettify 格式化代码</li>
<li>Terminal 打开 linux shell</li>
<li>Side​Bar​Enhancements 扩展工具栏</li>
<li>SublimeLinter 代码检测的工具</li>
<li>BracketHighlighter 显示成对标签</li>
<li>HTML5</li>
<li>git</li>
<li>jquery</li>
<li>angularJS</li>
<li>scss</li>
<li>DocBlockr 注释</li>
<li>Markdown Preview</li>
<li>Material Theme 主题</li>
<li>GoSublime</li>
<li>Auto​File​Name 文件路径</li>
<li>Vue Syntax Highlight</li>
<li>Vuejs Snippets</li>
</ol>
<h1 id="ubuntu-输入中文"><a href="#ubuntu-输入中文" class="headerlink" title="ubuntu 输入中文"></a>ubuntu 输入中文</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install libgtk2.0-dev</span><br></pre></td></tr></table></figure>

<p><a href="http://jingyan.baidu.com/article/f3ad7d0ff8731609c3345b3b.html">百度经验</a></p>
<h1 id="sublimetext-快捷键"><a href="#sublimetext-快捷键" class="headerlink" title="sublimetext 快捷键"></a>sublimetext 快捷键</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Ctrl+Shift+P：打开命令面板</span><br><span class="line">Ctrl+P：搜索项目中的文件</span><br><span class="line">Ctrl+G：跳转到第几行</span><br><span class="line">Ctrl+W：关闭当前打开文件</span><br><span class="line">Ctrl+Shift+W：关闭所有打开文件</span><br><span class="line">Ctrl+Shift+V：粘贴并格式化</span><br><span class="line">Ctrl+D：选择单词，重复可增加选择下一个相同的单词</span><br><span class="line">Ctrl+L：选择行，重复可依次增加选择下一行</span><br><span class="line">Ctrl+Shift+L：选择多行</span><br><span class="line">Ctrl+Shift+Enter：在当前行前插入新行</span><br><span class="line">Ctrl+X：删除当前行</span><br><span class="line">Ctrl+M：跳转到对应括号</span><br><span class="line">Ctrl+U：软撤销，撤销光标位置</span><br><span class="line">Ctrl+J：选择标签内容</span><br><span class="line">Ctrl+F：查找内容</span><br><span class="line">Ctrl+Shift+F：查找并替换</span><br><span class="line">Ctrl+H：替换</span><br><span class="line">Ctrl+R：前往 method</span><br><span class="line">Ctrl+N：新建窗口</span><br><span class="line">Ctrl+K+B：开关侧栏</span><br><span class="line">Ctrl+Shift+M：选中当前括号内容，重复可选着括号本身</span><br><span class="line">Ctrl+F2：设置/删除标记</span><br><span class="line">Ctrl+/：注释当前行</span><br><span class="line">Ctrl+Shift+/：当前位置插入注释</span><br><span class="line">Ctrl+Alt+/：块注释，并Focus到首行，写注释说明用的</span><br><span class="line">Ctrl+Shift+A：选择当前标签前后，修改标签用的</span><br><span class="line">F11：全屏</span><br><span class="line">Shift+F11：全屏免打扰模式，只编辑当前文件</span><br><span class="line">Alt+F3：选择所有相同的词</span><br><span class="line">Alt+.：闭合标签</span><br><span class="line">Alt+Shift+数字：分屏显示</span><br><span class="line">Alt+数字：切换打开第N个文件</span><br><span class="line">Shift+右键拖动：光标多不，用来更改或插入列内容</span><br><span class="line">鼠标的前进后退键可切换Tab文件</span><br><span class="line">按Ctrl，依次点击或选取，可需要编辑的多个位置</span><br><span class="line">按Ctrl+Shift+上下键，可替换行</span><br></pre></td></tr></table></figure>

<h1 id="配置-react"><a href="#配置-react" class="headerlink" title="配置 react"></a>配置 react</h1><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PC上ctrl+shift+p（MacCmd+shift+p）</span><br><span class="line">jsx</span><br><span class="line">babel</span><br><span class="line">reactjs</span><br><span class="line">jsxhint</span><br><span class="line">node:</span><br><span class="line">npm install -g jsxhint</span><br></pre></td></tr></table></figure>

<h2 id="语法高亮"><a href="#语法高亮" class="headerlink" title="语法高亮"></a>语法高亮</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">babel</span><br></pre></td></tr></table></figure>

<h2 id="代码提示"><a href="#代码提示" class="headerlink" title="代码提示"></a>代码提示</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">reactJs</span><br><span class="line">//支持的代码片段如下</span><br><span class="line">cdm→  componentDidMount: fn() &#123; ... &#125;</span><br><span class="line">cdup→  componentDidUpdate: fn(pp, ps) &#123; ... &#125;</span><br><span class="line">cs→  var cx = React.addons.classSet;</span><br><span class="line">cwm→  componentWillMount: fn() &#123; ... &#125;</span><br><span class="line">cwr→  componentWillReceiveProps: fn(np) &#123; ... &#125;</span><br><span class="line">cwu→  componentWillUpdate: fn(np, ns) &#123; ... &#125;</span><br><span class="line">cwun→  componentWillUnmount: fn() &#123; ... &#125;</span><br><span class="line">cx→  cx(&#123; ... &#125;)</span><br><span class="line">fdn→  React.findDOMNode(...)</span><br><span class="line">fup→  forceUpdate(...)</span><br><span class="line">gdp→  getDefaultProps: fn() &#123; return &#123;...&#125; &#125;</span><br><span class="line">gis→  getInitialState: fn() &#123; return &#123;...&#125; &#125;</span><br><span class="line">ism→  isMounted()</span><br><span class="line">props→  this.props.</span><br><span class="line">pt→  propTypes &#123; ... &#125;</span><br><span class="line">rcc→  component skeleton</span><br><span class="line">refs→  this.refs.</span><br><span class="line">ren→  render: fn() &#123; return ... &#125;</span><br><span class="line">scu→  shouldComponentUpdate: fn(np, ns) &#123; ... &#125;</span><br><span class="line">sst→  this.setState(&#123; ... &#125;)</span><br><span class="line">state→  this.state.</span><br></pre></td></tr></table></figure>

<h2 id="JSX-中使用-Emmet"><a href="#JSX-中使用-Emmet" class="headerlink" title="JSX 中使用 Emmet"></a>JSX 中使用 Emmet</h2><h3 id="在-KeyBinding-–-Users-中插入下面这段代码："><a href="#在-KeyBinding-–-Users-中插入下面这段代码：" class="headerlink" title="在 KeyBinding – Users 中插入下面这段代码："></a>在 KeyBinding – Users 中插入下面这段代码：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;keys&quot;: [&quot;tab&quot;],</span><br><span class="line">    &quot;command&quot;: &quot;expand_abbreviation_by_tab&quot;,</span><br><span class="line">    &quot;context&quot;: [&#123;</span><br><span class="line">        &quot;operand&quot;: &quot;source.js&quot;,</span><br><span class="line">        &quot;operator&quot;: &quot;equal&quot;,</span><br><span class="line">        &quot;match_all&quot;: true,</span><br><span class="line">        &quot;key&quot;: &quot;selector&quot;</span><br><span class="line">    &#125;,&#123;</span><br><span class="line">        &quot;key&quot;: &quot;preceding_text&quot;,</span><br><span class="line">        &quot;operator&quot;: &quot;regex_contains&quot;,</span><br><span class="line">        &quot;operand&quot;: &quot;(\\b(a\\b|div|span|p\\b|button)(\\.\\w*|&gt;\\w*)?)&quot;,</span><br><span class="line">        &quot;match_all&quot;: true</span><br><span class="line">    &#125;,&#123;</span><br><span class="line">        &quot;key&quot;: &quot;selection_empty&quot;,</span><br><span class="line">        &quot;operator&quot;: &quot;equal&quot;,</span><br><span class="line">        &quot;operand&quot;: true,</span><br><span class="line">        &quot;match_all&quot;: true</span><br><span class="line">    &#125;]</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<h2 id="对齐"><a href="#对齐" class="headerlink" title="对齐"></a>对齐</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在HTML-CSS-JS Pretty中设置</span><br><span class="line">在HTML-CSS-JS Prettify设置中，</span><br><span class="line">在</span><br><span class="line">&quot;js&quot;: &#123;</span><br><span class="line">    &quot;allowed_file_extensions&quot;: [&quot;js&quot;, &quot;json&quot;, &quot;jshintrc&quot;, &quot;jsbeautifyrc&quot;,&quot;jsx&quot;],</span><br><span class="line">    &quot;e4x&quot;,true</span><br><span class="line">    ...</span><br><span class="line">    allowed_file_extensions后面加上&quot;jsx&quot;，修改e4x为true.</span><br></pre></td></tr></table></figure>

<h1 id="代码规范与代码质量（sublimeLinter-jshint-csshint-htmlhint）"><a href="#代码规范与代码质量（sublimeLinter-jshint-csshint-htmlhint）" class="headerlink" title="代码规范与代码质量（sublimeLinter jshint csshint htmlhint）"></a>代码规范与代码质量（sublimeLinter jshint csshint htmlhint）</h1><h2 id="HTML-代码规范"><a href="#HTML-代码规范" class="headerlink" title="HTML 代码规范"></a>HTML 代码规范</h2><blockquote>
<p>项目所使用的 htmlhint 的配置文件如下：</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">htmlhint: &#123;</span><br><span class="line">    &#x27;tagname-lowercase&#x27;       : true,</span><br><span class="line">    &#x27;attr-lowercase&#x27;          : true,</span><br><span class="line">    &#x27;attr-value-double-quotes&#x27;: true,</span><br><span class="line">    &#x27;attr-value-not-empty&#x27;    : false,</span><br><span class="line">    &#x27;attr-no-duplication&#x27;     : true,</span><br><span class="line">    &#x27;doctype-first&#x27;           : true,</span><br><span class="line">    &#x27;tag-pair&#x27;                : true,</span><br><span class="line">    &#x27;tag-self-close&#x27;          : true,</span><br><span class="line">    &#x27;spec-char-escape&#x27;        : true,</span><br><span class="line">    &#x27;id-unique&#x27;               : true,</span><br><span class="line">    &#x27;src-not-empty&#x27;           : true,</span><br><span class="line">    &#x27;head-script-disabled&#x27;    : false,</span><br><span class="line">    &#x27;alt-require&#x27;             : true,</span><br><span class="line">    &#x27;doctype-html5&#x27;           : true,</span><br><span class="line">    &#x27;id-class-value&#x27;          : &#x27;dash&#x27;,</span><br><span class="line">    &#x27;space-tab-mixed-disabled&#x27;: true,</span><br><span class="line">    &#x27;style-disabled&#x27;          : true,</span><br><span class="line">    &#x27;href-abs-or-rel&#x27;         : true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>详细描述：</p>
</blockquote>
<table>
<thead>
<tr>
<th>规则名称</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td><code>tagname-lowercase</code></td>
<td>HTML 标签应该小写</td>
</tr>
<tr>
<td><code>attr-lowercase</code></td>
<td>HTML 标签里面的属性名应该小写</td>
</tr>
<tr>
<td><code>attr-value-double-quotes</code></td>
<td>HTML 标签里面的属性名应该使用双引号</td>
</tr>
<tr>
<td><code>attr-value-not-empty</code></td>
<td>HTML 标签里面的属性值不应该为空</td>
</tr>
<tr>
<td><code>attr-no-duplication</code></td>
<td>HTML 标签里面的属性不应该重复</td>
</tr>
<tr>
<td><code>doctype-first</code></td>
<td>HTML 页面必须以 doctype 为开始</td>
</tr>
<tr>
<td><code>tag-pair</code></td>
<td>HTML 标签应该成对匹配，除了自闭合的标签之外</td>
</tr>
<tr>
<td><code>tag-self-close</code></td>
<td>对于自闭合的标签，必须写成自闭合的格式</td>
</tr>
<tr>
<td><code>spec-char-escape</code></td>
<td>必须对特殊字符进行转义，如 <code>&gt;</code> 转义为 <code>&amp;gt;</code></td>
</tr>
<tr>
<td><code>id-unique</code></td>
<td>同个页面不能出现重复的 id</td>
</tr>
<tr>
<td><code>src-not-empty</code></td>
<td>src 属性的值不应该为空</td>
</tr>
<tr>
<td><code>alt-require</code></td>
<td>图片的 alt 必须加上</td>
</tr>
<tr>
<td><code>doctype-html5</code></td>
<td>所有页面的 doctype 必须为 HTML5 的 doctype</td>
</tr>
<tr>
<td><code>id-class-value</code></td>
<td>id 和 class 的命名应该以 <code>-</code> 作为分隔，如 <code>&lt;div class=&quot;icon-home&quot;&gt;&lt;/div&gt;</code></td>
</tr>
<tr>
<td><code>space-tab-mixed-disabled</code></td>
<td>页面里面不允许同时出现 tab 和空格。一律使用空格</td>
</tr>
<tr>
<td><code>style-disabled</code></td>
<td>页面中不应该存在 style 标签，样式应该以外部文件的形式存在。</td>
</tr>
<tr>
<td><code>href-abs-or-rel</code></td>
<td>href 属性的值必须为绝对地址 或者 相对路径，如 <code>&lt;a href=&quot;http://www.baidu.com&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../index.html&quot;&gt;&lt;/a&gt;</code></td>
</tr>
</tbody></table>
<h2 id="CSS-代码规范"><a href="#CSS-代码规范" class="headerlink" title="CSS 代码规范"></a>CSS 代码规范</h2><blockquote>
<p>项目所使用的 csslint 配置为：</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">csslint: &#123;</span><br><span class="line">    &#x27;box-sizing&#x27;                 : false,</span><br><span class="line">    &#x27;box-model&#x27;                  : true,</span><br><span class="line">    &#x27;display-property-grouping&#x27;  : true,</span><br><span class="line">    &#x27;zero-units&#x27;                 : false,</span><br><span class="line">    &#x27;bulletproof-font-face&#x27;      : false,</span><br><span class="line">    &#x27;duplicate-properties&#x27;       : true,</span><br><span class="line">    &#x27;empty-rules&#x27;                : true,</span><br><span class="line">    &#x27;known-properties&#x27;           : true,</span><br><span class="line">    &#x27;adjoining-classes&#x27;          : true,</span><br><span class="line">    &#x27;compatible-vendor-prefixes&#x27; : true,</span><br><span class="line">    &#x27;gradients&#x27;                  : true,</span><br><span class="line">    &#x27;text-indent&#x27;                : false,</span><br><span class="line">    &#x27;vendor-prefix&#x27;              : false,</span><br><span class="line">    &#x27;fallback-colors&#x27;            : false,</span><br><span class="line">    &#x27;star-property-hack&#x27;         : true,</span><br><span class="line">    &#x27;underscore-property-hack&#x27;   : true,</span><br><span class="line">    &#x27;font-faces&#x27;                 : false,</span><br><span class="line">    &#x27;font-sizes&#x27;                 : true,</span><br><span class="line">    &#x27;import&#x27;                     : true,</span><br><span class="line">    &#x27;regex-selectors&#x27;            : true,</span><br><span class="line">    &#x27;universal-selector&#x27;         : true,</span><br><span class="line">    &#x27;unqualified-attributes&#x27;     : true,</span><br><span class="line">    &#x27;overqualified-elements&#x27;     : true,</span><br><span class="line">    &#x27;shorthand&#x27;                  : true,</span><br><span class="line">    &#x27;duplicate-background-images&#x27;: true,</span><br><span class="line">    &#x27;floats&#x27;                     : false,</span><br><span class="line">    &#x27;ids&#x27;                        : true,</span><br><span class="line">    &#x27;important&#x27;                  : true,</span><br><span class="line">    &#x27;outline-none&#x27;               : false</span><br><span class="line">&#125;,</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<blockquote>
<p>详细介绍：</p>
</blockquote>
<table>
<thead>
<tr>
<th>规则名称</th>
<th>规则介绍</th>
</tr>
</thead>
<tbody><tr>
<td><code>box-model</code></td>
<td>当指定了元素的高度和宽度之后，再指定 padding 或者 border 则会导致实际显示的元素大小与所需的大小不一致。其根本原因是元素的盒模型。当有这种需求时则需要加多一条 <code>box-sizing</code> 的规则。</td>
</tr>
<tr>
<td><code>display-property-grouping</code></td>
<td><code>display</code> 规则的一些用法，比如 <code>display: inline-block</code> 之后就不应该再使用 <code>vertical-align</code> 。 深入阅读：<a href="https://github.com/CSSLint/csslint/wiki/Require-properties-appropriate-for-display">Require-properties-appropriate-for-display</a></td>
</tr>
<tr>
<td><code>duplicate-properties</code></td>
<td>不允许有重复的规则。规则细节：<a href="https://github.com/CSSLint/csslint/wiki/Disallow-duplicate-properties#rule-details">disallow duplicate properties</a></td>
</tr>
<tr>
<td><code>empty-rules</code></td>
<td>不允许有空规则的存在。</td>
</tr>
<tr>
<td><code>known-properties</code></td>
<td>只允许使用已有的规则。用来检查是否拼错了规则名</td>
</tr>
<tr>
<td><code>adjoining-classes</code></td>
<td>不允许出现类似 <code>.foo &#123;&#125; .bar &#123;&#125; .foo.bar &#123;&#125;</code> 这样的情况，而是应该新建一个 class。规则细节：<a href="https://github.com/CSSLint/csslint/wiki/Disallow-adjoining-classes#rule-details">disallow adjoining class</a></td>
</tr>
<tr>
<td><code>compatible-vendor-prefixes</code></td>
<td>对于浏览器兼容的前缀，应该提供完整，比如如果提供了 <code>-webkit-</code> 那么其他的 <code>-moz-</code> 、<code>-o-</code>、<code>-ms-</code> 也要提供。</td>
</tr>
<tr>
<td><code>gradients</code></td>
<td>应该使用完整的渐变代码</td>
</tr>
<tr>
<td><code>star-property-hack</code></td>
<td>不允许使用星号规则，如 <code>*z-index: -1</code></td>
</tr>
<tr>
<td><code>underscore-property-hack</code></td>
<td>不允许使用下划线规则，如 <code>_z-index: -1</code></td>
</tr>
<tr>
<td><code>font-sizes</code></td>
<td>不应该使用过多的 <code>font-size</code> 规则，而是应该定义一套常用的字体大小的类，直接使用该类即可。</td>
</tr>
<tr>
<td><code>import</code></td>
<td>不允许使用 import 来加载其他 css 文件</td>
</tr>
<tr>
<td><code>regex-selectors</code></td>
<td>不允许在 css 文件里面使用正则规则</td>
</tr>
<tr>
<td><code>universal-selector</code></td>
<td>不允许使用通配符。规则细节：<a href="https://github.com/CSSLint/csslint/wiki/Disallow-universal-selector#rule-details">disallow universal selector</a></td>
</tr>
<tr>
<td><code>unqualified-attributes</code></td>
<td>不允许使用属性选择器。规则细节：<a href="https://github.com/CSSLint/csslint/wiki/Disallow-unqualified-attribute-selectors#rule-details">disallow unqualified attribute selectors</a></td>
</tr>
<tr>
<td><code>overqualified-elements</code></td>
<td>规则细节 <a href="https://github.com/CSSLint/csslint/wiki/Disallow-overqualified-elements#rule-details">disallow overqualified elements</a></td>
</tr>
<tr>
<td><code>shorthand</code></td>
<td>使用规则的简写方式。如背景的规则应该都写在 <code>background</code> 里面，而不是单独写 <code>background-image</code> <code>background -size</code> 等。</td>
</tr>
<tr>
<td><code>duplicate-background-images</code></td>
<td>对于雪碧图而言，应该将图片的背景单独放在一个类，而不是在每个图标上都写着 <code>background-image</code></td>
</tr>
<tr>
<td><code>ids</code></td>
<td>不允许使用 id 选择器。</td>
</tr>
<tr>
<td><code>important</code></td>
<td>不允许使用 <code>important</code> 。</td>
</tr>
</tbody></table>
<h2 id="JS-代码规范"><a href="#JS-代码规范" class="headerlink" title="JS 代码规范"></a>JS 代码规范</h2><blockquote>
<p>jshint 的配置文件为：</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">jshint: &#123;</span><br><span class="line">    bitwise  : false,</span><br><span class="line">    camelcase: true,</span><br><span class="line">    curly    : true,</span><br><span class="line">    eqeqeq   : true,</span><br><span class="line">    forin    : true,</span><br><span class="line">    browser  : true,</span><br><span class="line">    jquery   : true,</span><br><span class="line">    strict   : false,</span><br><span class="line">    latedef  : true,</span><br><span class="line">    noarg    : true,</span><br><span class="line">    nonew    : true,</span><br><span class="line">    plusplus : true,</span><br><span class="line">    undef    : true,</span><br><span class="line">    unused   : true,</span><br><span class="line">    indent   : 4,</span><br><span class="line">    globals: &#123;</span><br><span class="line">        angular: true,</span><br><span class="line">        rcp: true</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<blockquote>
<p>详细规则：</p>
</blockquote>
<p>| 规则名称    | 规则介绍                                                                                                       |<br>| ———– | ————————————————————————————————————– | ——- |<br>| <code>bitwise</code>   | 代码不应该存在位运算符，如 <code>^</code>、 <code>                                                                            |</code>、 <code>&amp;</code> |<br>| <code>camelcase</code> | 变量使用驼峰式命名规范，如 <code>var fooBar = true</code>                                                                 |<br>| <code>curly</code>     | 不能省略<code>&#123;</code> 和 <code>&#125;</code> 。                                                                                          |<br>| <code>eqeqeq</code>    | 使用 <code>===</code> 进行对比运算，而不是 <code>==</code>                                                                           |<br>| <code>forin</code>     | 在遍历对象的属性时，必须先对属性进行判断再编写业务逻辑。因为对象的属性有可能是来自原型的，而非自己独有的属性。 |<br>| <code>browser</code>   | 声明 js 环境是在浏览器环境下运行的。                                                                           |<br>| <code>jquery</code>    | 声明 js 默认引用了 Jquery                                                                                      |<br>| <code>latedef</code>   | 变量不允许在声明前调用，函数也是。                                                                             |<br>| <code>noarg</code>     | 函数里面不允许使用 <code>arguments.callee</code> 和 <code>arguments.caller</code>。                                                  |<br>| <code>nonew</code>     | 避免在创建一个实例的时候不赋值给变量，如<code>new Contructor()</code>                                                     |<br>| <code>plusplus</code>  | 不允许使用 <code>++</code> 或者 <code>--</code> 操作符。统一使用 <code>i += 1</code> 或者 <code>i = i + 1</code> ，主要是增强代码可读性                    |<br>| <code>undef</code>     | 不允许使用未定义的变量。                                                                                       |<br>| <code>unused</code>    | 不允许存在未使用的变量。                                                                                       |<br>| <code>indent</code>    | 统一使用 4 个空格作为缩进。                                                                                    |</p>
]]></content>
      <categories>
        <category>工具类</category>
      </categories>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>SCSS_MIXIN</title>
    <url>/myBlog/2016/04/18/SCSS-MIXIN/</url>
    <content><![CDATA[<blockquote><p>scss mixin 相关收集 </p>
</blockquote>

<span id="more"></span>

<h1 id="设置-12-到-40px-的字体大小相隔-2px-eg-fs-12"><a href="#设置-12-到-40px-的字体大小相隔-2px-eg-fs-12" class="headerlink" title="设置 12 到 40px 的字体大小相隔 2px eg:fs-12"></a>设置 12 到 40px 的字体大小相隔 2px eg:fs-12</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/**</span><br><span class="line"> * [oFsSet 设置12到40px 的字体大小相隔2pxeg:fs-12]</span><br><span class="line"> * @param  &#123;[type]&#125; $l:14    [长度]</span><br><span class="line"> * @param  &#123;[type]&#125; $mul:2   [间隔]</span><br><span class="line"> * @param  &#123;[type]&#125; $unit:px [单位]</span><br><span class="line"> * @param  &#123;[type]&#125; $d:12    [最小字体大小]</span><br><span class="line"> * @return &#123;[type]&#125;          [description]</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">@mixin oFsSet($l:14, $mul:2, $unit:px, $d:12) &#123;</span><br><span class="line">    @for $fs from 0 through $l &#123;</span><br><span class="line">        .fs-#&#123;$d+$fs*$mul&#125; &#123;</span><br><span class="line">            font-size: $d+$fs*$mul+$unit;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="默认设置-10-到-40-的各个-padding-margin"><a href="#默认设置-10-到-40-的各个-padding-margin" class="headerlink" title="默认设置 10 到 40 的各个 padding margin"></a>默认设置 10 到 40 的各个 padding margin</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/**</span><br><span class="line"> * [oPdMgSet 默认设置10到40的各个ppadding margin]</span><br><span class="line"> * @param  &#123;[type]&#125; $max:4   [基数]</span><br><span class="line"> * @param  &#123;[type]&#125; $mul:10  [倍数]</span><br><span class="line"> * @param  &#123;[type]&#125; $unit:px [单位]</span><br><span class="line"> * @return &#123;[type]&#125;          [description]</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">@mixin oPdMgSet($max:10, $mul:5, $unit:px) &#123;</span><br><span class="line">  @for $padding-size from 1 through $max &#123;</span><br><span class="line">    .pd-x#&#123;$padding-size*$mul&#125; &#123;</span><br><span class="line">      padding: 0 $padding-size * $mul+$unit;</span><br><span class="line">    &#125;</span><br><span class="line">    .pd-y#&#123;$padding-size*$mul&#125; &#123;</span><br><span class="line">      padding: $padding-size * $mul+$unit 0;</span><br><span class="line">    &#125;</span><br><span class="line">    .pd-f#&#123;$padding-size*$mul&#125; &#123;</span><br><span class="line">      padding: $padding-size * $mul+$unit;</span><br><span class="line">    &#125;</span><br><span class="line">    .pd-t#&#123;$padding-size*$mul&#125; &#123;</span><br><span class="line">      padding-top: $padding-size * $mul+$unit;</span><br><span class="line">    &#125;</span><br><span class="line">    .pd-r#&#123;$padding-size*$mul&#125; &#123;</span><br><span class="line">      padding-right: $padding-size * $mul+$unit;</span><br><span class="line">    &#125;</span><br><span class="line">    .pd-b#&#123;$padding-size*$mul&#125; &#123;</span><br><span class="line">      padding-bottom: $padding-size * $mul+$unit;</span><br><span class="line">    &#125;</span><br><span class="line">    .pd-l#&#123;$padding-size*$mul&#125; &#123;</span><br><span class="line">      padding-left: $padding-size * $mul+$unit;</span><br><span class="line">    &#125;</span><br><span class="line">    .mg-x#&#123;$padding-size*$mul&#125; &#123;</span><br><span class="line">      margin: 0 $padding-size * $mul+$unit;</span><br><span class="line">    &#125;</span><br><span class="line">    .mg-y#&#123;$padding-size*$mul&#125; &#123;</span><br><span class="line">      margin: $padding-size * $mul+$unit 0;</span><br><span class="line">    &#125;</span><br><span class="line">    .mg-f#&#123;$padding-size*$mul&#125; &#123;</span><br><span class="line">      margin: $padding-size * $mul+$unit;</span><br><span class="line">    &#125;</span><br><span class="line">    .mg-t#&#123;$padding-size*$mul&#125; &#123;</span><br><span class="line">      margin-top: $padding-size * $mul+$unit;</span><br><span class="line">    &#125;</span><br><span class="line">    .mg-r#&#123;$padding-size*$mul&#125; &#123;</span><br><span class="line">      margin-right: $padding-size * $mul+$unit;</span><br><span class="line">    &#125;</span><br><span class="line">    .mg-l#&#123;$padding-size*$mul&#125; &#123;</span><br><span class="line">      margin-left: $padding-size * $mul+$unit;</span><br><span class="line">    &#125;</span><br><span class="line">    .mg-b#&#123;$padding-size*$mul&#125; &#123;</span><br><span class="line">      margin-bottom: $padding-size * $mul+$unit;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="设置-btn-背景加-hover-active-时变亮变暗"><a href="#设置-btn-背景加-hover-active-时变亮变暗" class="headerlink" title="设置 btn 背景加 hover,active 时变亮变暗"></a>设置 btn 背景加 hover,active 时变亮变暗</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/**</span><br><span class="line"> * [iBtnBgColor 设置btn背景加hover,active时变亮变暗]</span><br><span class="line"> * @param  &#123;[type]&#125; $color:gray     [初始颜色]</span><br><span class="line"> * @param  &#123;[type]&#125; $hover:2        [hover颜色或百分比]</span><br><span class="line"> * @param  &#123;[type]&#125; $active:10      [active颜色或百分比]</span><br><span class="line"> * @param  &#123;[type]&#125; $type:1         [=0使用传入的颜色，&gt;1变亮，&lt;1变暗]</span><br><span class="line"> * @param  &#123;[type]&#125; $time:1         [动画时间 eg:0.3s]</span><br><span class="line"> * @param  &#123;[type]&#125; $animation:1    [动画属性 eg: ease]</span><br><span class="line"> * @return &#123;[type]&#125;             [description]</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">@mixin iBtnBgColor($color:gray, $hover:2, $active:10, $type:1, $time:0.3s, $animation:ease) &#123;</span><br><span class="line">    background-color: $color;</span><br><span class="line">    &amp;:hover &#123;</span><br><span class="line">        @if $type==0 &#123;</span><br><span class="line">            background-color: $hover</span><br><span class="line">        &#125;</span><br><span class="line">        @if $type&gt;0 &#123;</span><br><span class="line">            background-color: lighten($color, $hover)</span><br><span class="line">        &#125;</span><br><span class="line">        @if $type&lt;0 &#123;</span><br><span class="line">            background-color: darken($color, $hover)</span><br><span class="line">        &#125;</span><br><span class="line">        transition: all $time $animation;</span><br><span class="line">    &#125;</span><br><span class="line">    &amp;:active &#123;</span><br><span class="line">        @if $type==0 &#123;</span><br><span class="line">            background-color: $active</span><br><span class="line">        &#125;</span><br><span class="line">        @if $type&gt;0 &#123;</span><br><span class="line">            background-color: lighten($color, $active)</span><br><span class="line">        &#125;</span><br><span class="line">        @if $type&lt;0 &#123;</span><br><span class="line">            background-color: darken($color, $active)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="设置-border"><a href="#设置-border" class="headerlink" title="设置 border"></a>设置 border</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@mixin iBorder ($p:all,$c:gray,$style:solid,$width:1px) &#123;</span><br><span class="line">    @if $p == all &#123;</span><br><span class="line">        border: $width $style $c;</span><br><span class="line">    &#125; @else &#123;</span><br><span class="line">        border-#&#123;$p&#125;: $width $style $c;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="清除浮动"><a href="#清除浮动" class="headerlink" title="清除浮动"></a>清除浮动</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@mixin iCB($old:false) &#123;</span><br><span class="line">    @if $old &#123;</span><br><span class="line">        &amp;:before,</span><br><span class="line">        &amp;:after &#123;</span><br><span class="line">            content: &quot;&quot;;</span><br><span class="line">            display: table;</span><br><span class="line">            font: 0/0 a;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    @else &#123;</span><br><span class="line">        &amp;:after &#123;</span><br><span class="line">            content: &quot;&quot;;</span><br><span class="line">            display: block;</span><br><span class="line">            clear: both;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="flex"><a href="#flex" class="headerlink" title="flex"></a>flex</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@mixin oFlex() &#123;</span><br><span class="line">  // http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html</span><br><span class="line">  //  flex-direction属性决定主轴的方向（即项目的排列方向）。</span><br><span class="line">  //  flex-wrap 属性定义，如果一条轴线排不下，如何换行</span><br><span class="line">  //  flex-flow属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。</span><br><span class="line">  // justify-content属性定义了项目在主轴(x轴)上的对齐方式。</span><br><span class="line">  // align-items属性定义项目在交叉轴(y轴)上如何对齐。</span><br><span class="line">  // align-content属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。</span><br><span class="line">  // order属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。</span><br><span class="line">  //  flex-grow属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。</span><br><span class="line">  //  flex-shrink属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。</span><br><span class="line">  //  flex-basis属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。</span><br><span class="line">  //  flex属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选。</span><br><span class="line">  // align-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。</span><br><span class="line">  .flex1 &#123;</span><br><span class="line">    flex: 1</span><br><span class="line">  &#125;</span><br><span class="line">  .flex2 &#123;</span><br><span class="line">    flex: 2</span><br><span class="line">  &#125;</span><br><span class="line">  .flex3 &#123;</span><br><span class="line">    flex: 3</span><br><span class="line">  &#125;</span><br><span class="line">  .flex4 &#123;</span><br><span class="line">    flex: 4</span><br><span class="line">  &#125;</span><br><span class="line">  .flex5 &#123;</span><br><span class="line">    flex: 5</span><br><span class="line">  &#125;</span><br><span class="line">  .flex-box &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">  &#125;</span><br><span class="line">  .flex-column &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    flex-direction: column;</span><br><span class="line">    justify-content: space-between;</span><br><span class="line">  &#125;</span><br><span class="line">  .flex-space-between &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    flex-direction: row;</span><br><span class="line">    justify-content: space-between;</span><br><span class="line">    align-content: center;</span><br><span class="line">    align-items: center;</span><br><span class="line">  &#125;</span><br><span class="line">  .flex-space-between-end &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    flex-direction: row;</span><br><span class="line">    justify-content: space-between;</span><br><span class="line">    align-content: center;</span><br><span class="line">    align-items: flex-end;</span><br><span class="line">  &#125;</span><br><span class="line">  .flex-center &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: center;</span><br><span class="line">    align-content: center;</span><br><span class="line">    align-items: center;</span><br><span class="line">  &#125;</span><br><span class="line">  .flex-middle &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    align-items: center;</span><br><span class="line">  &#125;</span><br><span class="line">  .flex-stretch &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    align-items: stretch;</span><br><span class="line">  &#125;</span><br><span class="line">  .flex-end &#123;</span><br><span class="line">    align-self: flex-end;</span><br><span class="line">  &#125;</span><br><span class="line">  .flex-start &#123;</span><br><span class="line">    align-items: flex-start;</span><br><span class="line">  &#125;</span><br><span class="line">  .flex-noshrink &#123;</span><br><span class="line">    flex-shrink: 0;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="我的-reset"><a href="#我的-reset" class="headerlink" title="我的 reset"></a>我的 reset</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@mixin reset() &#123;</span><br><span class="line">    html,</span><br><span class="line">    body,</span><br><span class="line">    div,</span><br><span class="line">    span,</span><br><span class="line">    applet,</span><br><span class="line">    object,</span><br><span class="line">    iframe,</span><br><span class="line">    h1,</span><br><span class="line">    h2,</span><br><span class="line">    h3,</span><br><span class="line">    h4,</span><br><span class="line">    h5,</span><br><span class="line">    h6,</span><br><span class="line">    p,</span><br><span class="line">    blockquote,</span><br><span class="line">    pre,</span><br><span class="line">    a,</span><br><span class="line">    abbr,</span><br><span class="line">    acronym,</span><br><span class="line">    address,</span><br><span class="line">    big,</span><br><span class="line">    cite,</span><br><span class="line">    code,</span><br><span class="line">    del,</span><br><span class="line">    dfn,</span><br><span class="line">    em,</span><br><span class="line">    img,</span><br><span class="line">    ins,</span><br><span class="line">    kbd,</span><br><span class="line">    q,</span><br><span class="line">    s,</span><br><span class="line">    samp,</span><br><span class="line">    small,</span><br><span class="line">    strike,</span><br><span class="line">    strong,</span><br><span class="line">    sub,</span><br><span class="line">    sup,</span><br><span class="line">    tt,</span><br><span class="line">    var,</span><br><span class="line">    b,</span><br><span class="line">    u,</span><br><span class="line">    i,</span><br><span class="line">    center,</span><br><span class="line">    dl,</span><br><span class="line">    dt,</span><br><span class="line">    dd,</span><br><span class="line">    ol,</span><br><span class="line">    ul,</span><br><span class="line">    li,</span><br><span class="line">    fieldset,</span><br><span class="line">    form,</span><br><span class="line">    label,</span><br><span class="line">    legend,</span><br><span class="line">    table,</span><br><span class="line">    caption,</span><br><span class="line">    tbody,</span><br><span class="line">    tfoot,</span><br><span class="line">    thead,</span><br><span class="line">    tr,</span><br><span class="line">    th,</span><br><span class="line">    td,</span><br><span class="line">    article,</span><br><span class="line">    aside,</span><br><span class="line">    canvas,</span><br><span class="line">    details,</span><br><span class="line">    embed,</span><br><span class="line">    figure,</span><br><span class="line">    figcaption,</span><br><span class="line">    footer,</span><br><span class="line">    header,</span><br><span class="line">    hgroup,</span><br><span class="line">    menu,</span><br><span class="line">    nav,</span><br><span class="line">    output,</span><br><span class="line">    ruby,</span><br><span class="line">    section,</span><br><span class="line">    summary,</span><br><span class="line">    time,</span><br><span class="line">    mark,</span><br><span class="line">    audio,</span><br><span class="line">    video &#123;</span><br><span class="line">        margin: 0;</span><br><span class="line">        padding: 0;</span><br><span class="line">        border: 0;</span><br><span class="line">        font-size: 100%;</span><br><span class="line">        font: inherit;</span><br><span class="line">        vertical-align: baseline;</span><br><span class="line">    &#125;</span><br><span class="line">    /* HTML5 display-role reset for older browsers */</span><br><span class="line">    article,</span><br><span class="line">    aside,</span><br><span class="line">    details,</span><br><span class="line">    figcaption,</span><br><span class="line">    figure,</span><br><span class="line">    footer,</span><br><span class="line">    header,</span><br><span class="line">    hgroup,</span><br><span class="line">    menu,</span><br><span class="line">    nav,</span><br><span class="line">    section &#123;</span><br><span class="line">        display: block;</span><br><span class="line">    &#125;</span><br><span class="line">    body &#123;</span><br><span class="line">        line-height: 1;</span><br><span class="line">    &#125;</span><br><span class="line">    ol,</span><br><span class="line">    ul &#123;</span><br><span class="line">        list-style: none;</span><br><span class="line">    &#125;</span><br><span class="line">    blockquote,</span><br><span class="line">    q &#123;</span><br><span class="line">        quotes: none;</span><br><span class="line">    &#125;</span><br><span class="line">    blockquote:before,</span><br><span class="line">    blockquote:after,</span><br><span class="line">    q:before,</span><br><span class="line">    q:after &#123;</span><br><span class="line">        content: &#x27;&#x27;;</span><br><span class="line">        content: none;</span><br><span class="line">    &#125;</span><br><span class="line">    table &#123;</span><br><span class="line">        border-collapse: collapse;</span><br><span class="line">        border-spacing: 0;</span><br><span class="line">    &#125;</span><br><span class="line">    i &#123;</span><br><span class="line">        display: inline-block;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>html转base64</title>
    <url>/myBlog/2016/04/03/html%E8%BD%ACbase64/</url>
    <content><![CDATA[<blockquote><p>html 转 base64 </p>
</blockquote>

<span id="more"></span>

<h1 id="html-转-base64"><a href="#html-转-base64" class="headerlink" title="html 转 base64"></a><a href="https://github.com/niklasvh/html2canvas">html 转 base64</a></h1><h2 id="demo"><a href="#demo" class="headerlink" title="demo"></a><a href="https://codepen.io/LinJieLinLin/pen/PRabpK">demo</a></h2><h1 id="js-生成二维码"><a href="#js-生成二维码" class="headerlink" title="js 生成二维码"></a><a href="https://github.com/davidshimjs/qrcodejs">js 生成二维码</a></h1><h2 id="demo-1"><a href="#demo-1" class="headerlink" title="demo"></a><a href="https://codepen.io/davidshimjs/pen/NdBYrg">demo</a></h2>]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>MD</tag>
      </tags>
  </entry>
  <entry>
    <title>CSS</title>
    <url>/myBlog/2016/04/02/CSS-%E5%A4%A7%E6%9D%82%E7%83%A9/</url>
    <content><![CDATA[<blockquote><p>与 CSS 相关的一些学习记录 </p>
</blockquote>

<span id="more"></span>

<h1 id="将元素垂直居中"><a href="#将元素垂直居中" class="headerlink" title="将元素垂直居中"></a>将元素垂直居中</h1><ol>
<li>CSS3 transform:</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.c&#123;</span><br><span class="line">top:50%;transform: translate(0 , -50%);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>把容器当作表格单元:</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.parent&#123;display:table;&#125;;.child&#123;display:table-cell;vertical-align:middle;&#125;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>这个方法使用了一个 position:absolute，有固定宽度和高度的 div。这个 div 被设置为 top:0; bottom:0;。但是因为它有固定高度，其实并不能和上下都间距为 0，因此 margin:auto; 会使它居中。使用 margin:auto;使块级元素垂直居中是很简单的。</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#content &#123;</span><br><span class="line">    position:absolute;</span><br><span class="line">    top:0;</span><br><span class="line">    bottom:0;</span><br><span class="line">    left:0;</span><br><span class="line">    right:0;</span><br><span class="line">    margin:auto;</span><br><span class="line">    height:240px;</span><br><span class="line">    width:70%;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>触屏下 ie 或 edge 点击显示:hover 伪类(添加在 html 标签中)</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">aria-haspopup=&quot;true&quot;</span><br></pre></td></tr></table></figure>

<h1 id="Display-属性"><a href="#Display-属性" class="headerlink" title="Display: 属性"></a>Display: 属性</h1><ul>
<li>none：隐藏对象。与 visibility 属性的 hidden 值不同，其不为被隐藏的对象保留其物理空间</li>
<li>inline：指定对象为内联元素。</li>
<li>block：指定对象为块元素。</li>
<li>list-item：指定对象为列表项目。</li>
<li>inline-block：指定对象为内联块元素。（CSS2）</li>
<li>table：指定对象作为块元素级的表格。类同于 html 标签<code>&lt;table&gt;</code>（CSS2）</li>
<li>inline-table：指定对象作为内联元素级的表格。类同于 html 标签<code>&lt;table&gt;</code>（CSS2）</li>
<li>table-caption：指定对象作为表格标题。类同于 html 标签<code>&lt;caption&gt;</code>（CSS2）</li>
<li>table-cell：指定对象作为表格单元格。类同于 html 标签<code>&lt;td&gt;</code>（CSS2）</li>
<li>table-row：指定对象作为表格行。类同于 html 标签<code>&lt;tr&gt;</code>（CSS2）</li>
<li>table-row-group：指定对象作为表格行组。类同于 html 标签<code>&lt;tbody&gt;</code>（CSS2）</li>
<li>table-column：指定对象作为表格列。类同于 html 标签<code>&lt;col&gt;</code>（CSS2）</li>
<li>table-column-group：指定对象作为表格列组显示。类同于 html 标签<code>&lt;colgroup&gt;</code>（CSS2）</li>
<li>table-header-group：指定对象作为表格标题组。类同于 html 标签<code>&lt;thead&gt;</code>（CSS2）</li>
<li>table-footer-group：指定对象作为表格脚注组。类同于 html 标签<code>&lt;tfoot&gt;</code>（CSS2）</li>
<li>run-in：根据上下文决定对象是内联对象还是块级对象。（CSS3）</li>
<li>box：将对象作为弹性伸缩盒显示。（伸缩盒最老版本）（CSS3）</li>
<li>inline-box：将对象作为内联块级弹性伸缩盒显示。（伸缩盒最老版本）（CSS3）</li>
<li>flexbox：将对象作为弹性伸缩盒显示。（伸缩盒过渡版本）（CSS3）</li>
<li>inline-flexbox：将对象作为内联块级弹性伸缩盒显示。（伸缩盒过渡版本）（CSS3）</li>
<li>flex：将对象作为弹性伸缩盒显示。（伸缩盒最新版本）（CSS3）</li>
<li>inline-flex：将对象作为内联块级弹性伸缩盒显示。（伸缩盒最新版本）（CSS3）</li>
</ul>
<h1 id="visibility-属性"><a href="#visibility-属性" class="headerlink" title="visibility 属性"></a>visibility 属性</h1><ul>
<li>visible 默认值。元素是可见的。</li>
<li>hidden 元素是不可见的。</li>
<li>collapse 当在表格元素中使用时，此值可删除一行或一列，但是它不会影响表格的布局。被行或列占据的空间会留给其他内容使用。如果此值被用在其他的元素上，会呈现为 “hidden”。</li>
<li>inherit 规定应该从父元素继承 visibility 属性的值。</li>
</ul>
<h1 id="HTML-标签"><a href="#HTML-标签" class="headerlink" title="HTML 标签"></a>HTML 标签</h1><ul>
<li>布局类：header, footer, container, main, content, aside, page, section</li>
<li>包裹类：wrap, inner</li>
<li>区块类：region, block, box</li>
<li>结构类：hd, bd, ft, top, bottom, left, right, middle, col, row, grid, span</li>
<li>列表类：list, item, field</li>
<li>主次类：primary, secondary, sub, minor</li>
<li>大小类：s, m, l, xl, large, small</li>
<li>状态类：active, current, checked, hover, fail, success, warn, error, on, off</li>
<li>导航类：nav, prev, next, breadcrumb, forward, back, indicator, paging, first, last</li>
<li>交互类：tips, alert, modal, pop, panel, tabs, accordion, slide, scroll, overlay,</li>
<li>星级类：rate, star</li>
<li>分割类：group, seperate, divider</li>
<li>等分类：full, half, third, quarter</li>
<li>表格类：table, tr, td, cell, row</li>
<li>图片类：img, thumbnail, original, album, gallery</li>
<li>语言类：cn, en</li>
<li>论坛类：forum, bbs, topic, post</li>
<li>方向类：up, down, left, right</li>
<li>其他语义类：btn, close, ok, cancel, switch; link, title, info, intro, more, icon; form, label, search, contact, phone, date, email, user; view, loading</li>
</ul>
<h1 id="手机-wap"><a href="#手机-wap" class="headerlink" title="手机 wap"></a>手机 wap</h1><h2 id="去掉-input-buttom-默认样式"><a href="#去掉-input-buttom-默认样式" class="headerlink" title="去掉 input buttom 默认样式"></a>去掉 input buttom 默认样式</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">input[type=button]&#123;</span><br><span class="line">  -webkit-appearance:none;</span><br><span class="line">  outline:none</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="去掉点击默认样式"><a href="#去掉点击默认样式" class="headerlink" title="去掉点击默认样式"></a>去掉点击默认样式</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-webkit-tap-highlight-color:transparent;</span><br></pre></td></tr></table></figure>

<h1 id="tap-效果-使用-tap-item-类时点击生效"><a href="#tap-效果-使用-tap-item-类时点击生效" class="headerlink" title="tap 效果(使用 tap_item 类时点击生效)"></a>tap 效果(使用 tap_item 类时点击生效)</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[class*=&#x27;btn_&#x27;],</span><br><span class="line">[class*=&#x27;tap_&#x27;] &#123;</span><br><span class="line">  transition: 400ms;</span><br><span class="line">&#125;</span><br><span class="line">[class*=&#x27;btn_&#x27;]:active,</span><br><span class="line">[class*=&#x27;tap_&#x27;]:active &#123;</span><br><span class="line">  transition: 0ms;</span><br><span class="line">&#125;</span><br><span class="line">[class*=&#x27;tap_&#x27;].tap_item:active &#123;</span><br><span class="line">  background-color: #d9d9d9;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>移动端web</title>
    <url>/myBlog/2016/04/02/%E7%A7%BB%E5%8A%A8%E7%AB%AFweb/</url>
    <content><![CDATA[<blockquote><p>移动端 web 相关 </p>
</blockquote>

<span id="more"></span>

<h1 id="meta-标签"><a href="#meta-标签" class="headerlink" title="meta 标签"></a>meta 标签</h1><p>1、width：设置布局视口的宽<br>2、init-scale：设置页面的初始缩放程度<br>3、minimum-scale：设置了页面最小缩放程度<br>4、maximum-scale：设置了页面最大缩放程度<br>5、user-scalable：是否允许用户对页面进行缩放操作</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no&quot;&gt;</span><br></pre></td></tr></table></figure>

<h1 id="媒体查询"><a href="#媒体查询" class="headerlink" title="媒体查询"></a><a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Media_queries">媒体查询</a></h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@media all and (min-width: 321px) and (max-width: 400px)&#123;</span><br><span class="line">    html&#123;</span><br><span class="line">        background: red;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="网页调移动端的函数"><a href="#网页调移动端的函数" class="headerlink" title="网页调移动端的函数"></a>网页调移动端的函数</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 获取浏览器信息</span><br><span class="line"> * @return &#123;[type]&#125; [description]</span><br><span class="line"> */</span><br><span class="line">function getOSInfo() &#123;</span><br><span class="line">    var D = &#123;&#125;;</span><br><span class="line">    D.ua = navigator.userAgent;</span><br><span class="line">    D.uaTLC = D.ua.toLowerCase();</span><br><span class="line">    D.platform = navigator.platform;</span><br><span class="line">    D.isCrosswalk = navigator.userAgent.indexOf(&#x27;Crosswalk&#x27;) &gt; -1;</span><br><span class="line">    D.isLinux = (String(D.platform).indexOf(&#x27;Linux&#x27;) &gt; -1);</span><br><span class="line">    D.isWin = D.platform === (&#x27;Win32&#x27; || &#x27;Windows&#x27;);</span><br><span class="line">    D.isMac = D.platform === (&#x27;Mac68K&#x27; || &#x27;MacPPC&#x27; || &#x27;Macintosh&#x27; || &#x27;MacIntel&#x27;);</span><br><span class="line">    D.isUnix = (D.platform === &#x27;X11&#x27;) &amp;&amp; !D.isWin &amp;&amp; !D.isMac;</span><br><span class="line">    D.isSymbian = D.platform === (&#x27;SymbianOS&#x27;);</span><br><span class="line">    D.bIsCE = D.uaTLC.match(/windows ce/i);</span><br><span class="line">    D.bIsWM = D.uaTLC.match(/windows mobile/i);</span><br><span class="line">    D.bIsAndroid = D.uaTLC.match(/android/i);</span><br><span class="line">    D.bIsIpad = D.uaTLC.match(/ipad/i);</span><br><span class="line">    D.bIsIphoneOs = D.uaTLC.match(/iphone os/i);</span><br><span class="line">    D.bIsMidp = D.uaTLC.match(/midp/i);</span><br><span class="line">    D.bIsUc7 = D.uaTLC.match(/rv:1.2.3.4/i);</span><br><span class="line">    D.bIsUc = D.uaTLC.match(/ucweb/i);</span><br><span class="line">    D.mobile = (D.bIsIpad || D.bIsIphoneOs || D.bIsMidp || D.bIsUc7 || D.bIsUc || D.bIsAndroid || D.bIsCE || D.bIsWM || D.isSymbian) ? true : false;</span><br><span class="line">    D.pc = D.mobile ? false : true;</span><br><span class="line">    D.name = (D.bIsIpad) ? &#x27;iPad&#x27; : (D.bIsIphoneOs) ? &#x27;iPhone&#x27; : (D.bIsMidp) ? &#x27;midp&#x27; : (D.bIsUc7) ? &#x27;Uc7&#x27; : (D.bIsUc) ? &#x27;Ucweb&#x27; : (D.isMac) ? &#x27;Mac&#x27; : (D.isLinux) ? ((D.bIsAndroid) ? &#x27;Android&#x27; : &#x27;Linux&#x27;) : (D.isSymbian) ? &#x27;SymbianOS&#x27; : (D.bIsCE || D.bIsWM) ? &#x27;wm&#x27; : &#x27;other&#x27;;</span><br><span class="line">    if (D.isWin) &#123;</span><br><span class="line">        D.isWin2K = D.ua.indexOf(&#x27;Windows NT 5.0&#x27;) &gt; -1 || D.ua.indexOf(&#x27;Windows 2000&#x27;) &gt; -1;</span><br><span class="line">        D.isWinXP = D.ua.indexOf(&#x27;Windows NT 5.1&#x27;) &gt; -1 || D.ua.indexOf(&#x27;Windows XP&#x27;) &gt; -1;</span><br><span class="line">        D.isWin2003 = D.ua.indexOf(&#x27;Windows NT 5.2&#x27;) &gt; -1 || D.ua.indexOf(&#x27;Windows 2003&#x27;) &gt; -1;</span><br><span class="line">        D.isWinVista = D.ua.indexOf(&#x27;Windows NT 6.0&#x27;) &gt; -1 || D.ua.indexOf(&#x27;Windows Vista&#x27;) &gt; -1;</span><br><span class="line">        D.isWin7 = D.ua.indexOf(&#x27;Windows NT 6.1&#x27;) &gt; -1 || D.ua.indexOf(&#x27;Windows 7&#x27;) &gt; -1;</span><br><span class="line">        D.isWin8 = D.ua.indexOf(&#x27;Windows NT 6.2&#x27;) &gt; -1 || D.ua.indexOf(&#x27;Windows 8&#x27;) &gt; -1;</span><br><span class="line">        D.isWin10 = D.ua.indexOf(&#x27;Windows NT 10&#x27;) &gt; -1 || D.ua.indexOf(&#x27;Windows 10&#x27;) &gt; -1;</span><br><span class="line">        D.name = (D.isWin2K) ? &#x27;Win2000&#x27; : (D.isWinXP) ? &#x27;WinXP&#x27; : (D.isWin2003) ? &#x27;Win2003&#x27; : (D.isWinVista) ? &#x27;WinVista&#x27; : (D.isWin7) ? &#x27;Win7&#x27; : (D.isWin8) ? &#x27;Win8&#x27; : (D.isWin10) ? &#x27;win10&#x27; : &#x27;other&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line">    return D;</span><br><span class="line">&#125;</span><br><span class="line">/**</span><br><span class="line"> * [判断android或ios手机并触发相关事件]</span><br><span class="line"> * @param  &#123;[type]&#125; argType   [事件类型]</span><br><span class="line"> * @param  &#123;[type]&#125; argData   [数据]</span><br><span class="line"> * @return &#123;[type]&#125;           [description]</span><br><span class="line"> */</span><br><span class="line">function mobilePlug(argType, argData) &#123;</span><br><span class="line">    var osName = getOSInfo().name;</span><br><span class="line">    //判断是否为iPad or iPhone,否则为android</span><br><span class="line">    switch (osName) &#123;</span><br><span class="line">        case &#x27;iPad&#x27;:</span><br><span class="line">        case &#x27;iPhone&#x27;:</span><br><span class="line">            //执行iphone事件</span><br><span class="line">            iphoneEvent(argType, argData);</span><br><span class="line">            break;</span><br><span class="line">        default:</span><br><span class="line">            //执行android事件</span><br><span class="line">            androidEvent(argType, argData);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">/**</span><br><span class="line"> * [iphoneEvent ios事件]</span><br><span class="line"> * @param  &#123;[type]&#125; argType   [事件类型]</span><br><span class="line"> * @param  &#123;[type]&#125; argData   [数据]</span><br><span class="line"> * @return &#123;[type]&#125;        [description]</span><br><span class="line"> */</span><br><span class="line">function iphoneEvent(argType, argData) &#123;</span><br><span class="line">    var data = &#123;&#125;;</span><br><span class="line">    switch (argType) &#123;</span><br><span class="line">        case &#x27;testFunc&#x27;:</span><br><span class="line">            // key为要调用的ios函数名，value为传入的参数</span><br><span class="line">            data[argType] = argData;</span><br><span class="line">            window.webkit.messageHandlers.notification.postMessage(data);</span><br><span class="line">            break;</span><br><span class="line">        default:</span><br><span class="line">            console.log(&#x27;还没有此函数：&#x27; + argType);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">/**</span><br><span class="line"> * [androidEvent 安卓事件]</span><br><span class="line"> * @param  &#123;[type]&#125; argType   [事件类型]</span><br><span class="line"> * @param  &#123;[type]&#125; argData   [数据]</span><br><span class="line"> * @return &#123;[type]&#125;        [description]</span><br><span class="line"> */</span><br><span class="line">function androidEvent(argType, argData) &#123;</span><br><span class="line">    var androidFunc = getOSInfo().isCrosswalk ? NativeJsInterface : window.NativeJsInterface;</span><br><span class="line">    switch (argType) &#123;</span><br><span class="line">        case &#x27;testFunc&#x27;:</span><br><span class="line">            androidFunc[argType](params.src);</span><br><span class="line">            break;</span><br><span class="line">        default:</span><br><span class="line">            console.log(&#x27;还没有此函数：&#x27; + argType);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">// 使用</span><br><span class="line">mobilePlug(&#x27;testFunc&#x27;, &#123; name: &#x27;c1&#x27;, password: 123456 &#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title>问题记录</title>
    <url>/myBlog/2016/04/02/QA/%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<blockquote><p>一些问题收集 </p>
</blockquote>

<span id="more"></span>

<h1 id="小程序"><a href="#小程序" class="headerlink" title="小程序"></a>小程序</h1><h2 id="ios-textarea-padding-top-x2F-padding-bottom-会多出-20px，margin-left-10px"><a href="#ios-textarea-padding-top-x2F-padding-bottom-会多出-20px，margin-left-10px" class="headerlink" title="ios textarea padding-top&#x2F;padding-bottom 会多出 20px，margin-left:-10px;"></a>ios textarea padding-top&#x2F;padding-bottom 会多出 20px，margin-left:-10px;</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">let isIos = wx.getSystemInfoSync().platform === &#x27;ios&#x27;</span><br></pre></td></tr></table></figure>

<h2 id="ios11-以下-用到-column-和-flex-1-时，flex-1-会失效（多用在整页布局上）"><a href="#ios11-以下-用到-column-和-flex-1-时，flex-1-会失效（多用在整页布局上）" class="headerlink" title="ios11 以下 用到 column 和 flex:1 时，flex:1 会失效（多用在整页布局上）"></a>ios11 以下 用到 column 和 flex:1 时，flex:1 会失效（多用在整页布局上）</h2><h2 id="cover-view"><a href="#cover-view" class="headerlink" title="cover-view"></a>cover-view</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 尽量不用flex布局</span><br><span class="line"># 尽量不使用 mode=&quot;aspectFill&quot;(swiper-item cover失效，少用吧),用object-fit: cover;代替</span><br></pre></td></tr></table></figure>

<h1 id="移动端"><a href="#移动端" class="headerlink" title="移动端"></a>移动端</h1><h2 id="iosh5"><a href="#iosh5" class="headerlink" title="iosh5"></a>iosh5</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 加上这个多个滚动区域不卡顿</span><br><span class="line">-webkit-overflow-scrolling: touch;</span><br><span class="line"># 使用fixed可阻止上下回弹</span><br><span class="line"># 使用fixed加-webkit-overflow-scrolling: touch;会导致fixed的z-index失效</span><br><span class="line"># input输入后，需要滚动一下回到原页面，粗暴方法</span><br><span class="line">window.scrollTo(0, 0)</span><br></pre></td></tr></table></figure>

<h2 id="部分安卓手机-vue-qrcode-component-组件，二维码默认使用-cavnas-显示问题"><a href="#部分安卓手机-vue-qrcode-component-组件，二维码默认使用-cavnas-显示问题" class="headerlink" title="部分安卓手机 vue-qrcode-component 组件，二维码默认使用 cavnas 显示问题"></a>部分安卓手机 vue-qrcode-component 组件，二维码默认使用 cavnas 显示问题</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># scss eg:</span><br><span class="line">.qr-code&#123;</span><br><span class="line">  width: 100px;</span><br><span class="line">  height: 100px;</span><br><span class="line">  canvas&#123;</span><br><span class="line">    width: 100%;</span><br><span class="line">    height: 100%;</span><br><span class="line">  &#125;</span><br><span class="line">  img&#123;</span><br><span class="line">    width: 100%;</span><br><span class="line">    height: 100%;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="某些-android-版本-eg：5-0-1-iframe-内部可以滚动主页面不能滚动的问题"><a href="#某些-android-版本-eg：5-0-1-iframe-内部可以滚动主页面不能滚动的问题" class="headerlink" title="某些 android 版本(eg：5.0.1)iframe 内部可以滚动主页面不能滚动的问题"></a>某些 android 版本(eg：5.0.1)iframe 内部可以滚动主页面不能滚动的问题</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;iframe src=&quot;url&quot; frameborder=&quot;0&quot; width=&quot;100%&quot; scrolling=&quot;auto&quot; onload=&quot;iframeHeight(this)&quot;&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>iframe 里页页的内容将设有 overflow 的属性全部替换为 eg:overflow-x: inherit;</p>
</blockquote>
<h2 id="IOS-点击事件失效"><a href="#IOS-点击事件失效" class="headerlink" title="IOS 点击事件失效"></a>IOS 点击事件失效</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;input type=&quot;checkbox&quot; id=1&gt;</span><br><span class="line">&lt;label for=&quot;1&quot;&gt;选择&lt;/label&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- 添加 onclick/touch事件 --&gt;</span><br><span class="line">&lt;label onclick=&quot;&quot;&gt;&lt;input type=&quot;checkbox&quot;&gt;选择&lt;/label&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- 添加 css --&gt;</span><br><span class="line">label input &#123;</span><br><span class="line">  pointer-events: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h2 id="Safari-音视频不会自动播放，没有-canplay-监听-详见"><a href="#Safari-音视频不会自动播放，没有-canplay-监听-详见" class="headerlink" title="Safari 音视频不会自动播放，没有 canplay 监听 详见"></a>Safari 音视频不会自动播放，没有 canplay 监听 <a href="https://rcp.dyfchk2.kuxiao.cn/space/teacher-space.html#/coursesManager">详见</a></h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 针对Safari preload=&quot;metadata&quot;</span><br><span class="line">if (navigator.userAgent.indexOf(&#x27;Safari&#x27;) &gt; -1 &amp;&amp; navigator.userAgent.indexOf(&#x27;Chrome&#x27;) &lt; 1) &#123;</span><br><span class="line">                        O.canplay = true;</span><br><span class="line">                    &#125;else if (f.get(&#x27;Player&#x27;).readyState &lt;= 2)&#123;</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br></pre></td></tr></table></figure>

<h2 id="ie9-只有前-31-个-link-或-style-标记关联的-CSS-能够应用，从第-32-个开始，其标记关联的-CSS-都将失效-CSS-文件的大小不能超过-288kb-超过切分为多个即可-。"><a href="#ie9-只有前-31-个-link-或-style-标记关联的-CSS-能够应用，从第-32-个开始，其标记关联的-CSS-都将失效-CSS-文件的大小不能超过-288kb-超过切分为多个即可-。" class="headerlink" title="ie9 只有前 31 个 link 或 style 标记关联的 CSS 能够应用，从第 32 个开始，其标记关联的 CSS 都将失效,CSS 文件的大小不能超过 288kb(超过切分为多个即可)。"></a>ie9 只有前 31 个 link 或 style 标记关联的 CSS 能够应用，从第 32 个开始，其标记关联的 CSS 都将失效,CSS 文件的大小不能超过 288kb(超过切分为多个即可)。</h2><h2 id="ie-css-不支持-unset-initial-关键字"><a href="#ie-css-不支持-unset-initial-关键字" class="headerlink" title="ie css 不支持 unset initial 关键字"></a>ie css 不支持 unset initial 关键字</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">要设置unset前添加默认属性。</span><br></pre></td></tr></table></figure>

<h2 id="ie11-字体图标显示不出来-添加静态文件缓存即可）"><a href="#ie11-字体图标显示不出来-添加静态文件缓存即可）" class="headerlink" title="ie11 字体图标显示不出来(添加静态文件缓存即可）"></a>ie11 字体图标显示不出来(添加静态文件缓存即可）</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># nginx config eg</span><br><span class="line"> location ~* .(gif|jpeg|jpg|png|woff|ttf|otf|svg|woff2|eot|woff2\?*|eot\?*|ttf\?*)$ &#123;</span><br><span class="line">       proxy_pass   http://127.0.0.1:4673;</span><br><span class="line">       proxy_set_header Host $host;</span><br><span class="line">       proxy_set_header X-Forward-For $remote_addr;</span><br><span class="line">       expires 1d;</span><br><span class="line">       access_log /var/log/eot.log main;</span><br><span class="line">       proxy_hide_header Pragma;</span><br><span class="line">       add_header Cache-Control &quot;public, max-age=86400&quot;;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>问题</tag>
      </tags>
  </entry>
  <entry>
    <title>mongodb</title>
    <url>/myBlog/2016/04/02/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/mongoDb/</url>
    <content><![CDATA[<blockquote><p>mongodb 相关 </p>
</blockquote>

<span id="more"></span>

<h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><h2 id="创建管理员"><a href="#创建管理员" class="headerlink" title="创建管理员"></a>创建管理员</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">db.createUser(</span><br><span class="line">   &#123;</span><br><span class="line">     user: &quot;admin&quot;,</span><br><span class="line">     pwd: &quot;123456&quot;,</span><br><span class="line">     roles: [ &#123; role: &quot;userAdminAnyDatabase&quot;, db: &quot;admin&quot; &#125; ]</span><br><span class="line">   &#125;</span><br><span class="line">)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>##创建普通用户</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">db.createUser(</span><br><span class="line">   &#123;</span><br><span class="line">     user: &quot;test&quot;,</span><br><span class="line">     pwd: &quot;123456&quot;,</span><br><span class="line">     roles: [ &#123; role: &quot;readWrite&quot;, db: &quot;test&quot; &#125; ]</span><br><span class="line">   &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<h2 id="开启权限验证"><a href="#开启权限验证" class="headerlink" title="开启权限验证"></a>开启权限验证</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># win 添加到/mongod.conf里</span><br><span class="line">auth = true</span><br><span class="line"># ubuntu添加到/etc/mongod.conf里</span><br><span class="line">security:</span><br><span class="line">  authorization: enabled</span><br></pre></td></tr></table></figure>

<h2 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># mongo 数据库名 -u 用户名 -p 密码</span><br><span class="line">mongo admin -u root -p 123456</span><br></pre></td></tr></table></figure>

<h2 id="备份数据库"><a href="#备份数据库" class="headerlink" title="备份数据库"></a>备份数据库</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># mongodump -h ip+端口 -d 数据库名 -u 用户名 -p 密码 -o 备件目录</span><br><span class="line">mongodump -h 127.0.0.1:27017 -d nodebb -u linj -p 123456 -o /home/linj/backup</span><br></pre></td></tr></table></figure>

<h2 id="还原数据库"><a href="#还原数据库" class="headerlink" title="还原数据库"></a>还原数据库</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># mongorestore -h 127.0.0.1:27017 -d nodebb -u linj -p 123456 恢复位置/nodebb --drop(删除其它数据后导入)</span><br><span class="line">mongorestore -h 127.0.0.1:27017 -d nodebb -u linj -p 123456 /home/linj/backup/nodebb</span><br></pre></td></tr></table></figure>

<h1 id="win-下安装-下载-64-位版本，一路-NEXT"><a href="#win-下安装-下载-64-位版本，一路-NEXT" class="headerlink" title="win 下安装:下载 64 位版本，一路 NEXT"></a>win 下安装:下载 64 位版本，一路 NEXT</h1><h2 id="命令行运行-bin-目录下"><a href="#命令行运行-bin-目录下" class="headerlink" title="命令行运行(bin 目录下)"></a>命令行运行(bin 目录下)</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mongdb</span><br><span class="line">或</span><br><span class="line">mongodb --dbpath (数据库存放文件夹)</span><br></pre></td></tr></table></figure>

<h2 id="配置服务如下（服务名为-myMongodb）"><a href="#配置服务如下（服务名为-myMongodb）" class="headerlink" title="配置服务如下（服务名为 myMongodb）"></a>配置服务如下（服务名为 myMongodb）</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mongod.exe --logpath &quot;D:\KFenv\mongoDB3.2\mongodb.log(log文件，指定路径即可)&quot; --logappend --dbpath &quot;D:\KFenv\mongoDB3.2\db（数据库存放文件夹，运行前要先创建该文件夹）&quot; --port 27017 --serviceName &quot;myMongodb&quot; --serviceDisplayName &quot;myMongodb&quot; --install</span><br></pre></td></tr></table></figure>

<h2 id="添加已存在的用户"><a href="#添加已存在的用户" class="headerlink" title="添加已存在的用户"></a>添加已存在的用户</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">db.addUser(&quot;userName&quot;,&quot;Pwd&quot;)</span><br><span class="line">//设置用户为允许连接的用户</span><br><span class="line">db.auth(&quot;userName&quot;,&quot;Pwd&quot;)</span><br><span class="line">//创建表</span><br><span class="line">db.createCollection(&quot;TableName&quot;)</span><br></pre></td></tr></table></figure>

<h1 id="ubnutu-64-mongodb-install"><a href="#ubnutu-64-mongodb-install" class="headerlink" title="ubnutu 64 mongodb install"></a><a href="https://docs.mongodb.com/v3.0/tutorial/install-mongodb-on-ubuntu/">ubnutu 64 mongodb install</a></h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 0C49F3730359A14518585931BC711F9BA15703C6</span><br><span class="line"># 要翻墙</span><br><span class="line">$ echo &quot;deb [ arch=amd64,arm64 ] http://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.4 multiverse&quot; | sudo tee /etc/apt/sources.list.d/mongodb-org-3.4.list</span><br><span class="line">MongoDB 默认的数据目录是 /data/db/ ，就直接使用默认的。</span><br><span class="line">#创建数据存储目录</span><br><span class="line">$ sudo mkdir -p /data/db</span><br><span class="line">#赋予目录权限</span><br><span class="line">$ sudo chmod 755 /data/*</span><br></pre></td></tr></table></figure>

<h2 id="配置-MongoDB"><a href="#配置-MongoDB" class="headerlink" title="配置 MongoDB"></a>配置 MongoDB</h2><h3 id="指定配置启动"><a href="#指定配置启动" class="headerlink" title="指定配置启动"></a>指定配置启动</h3><p>首先要创建配置文件，默认的配置文件路径是：&#x2F;etc&#x2F;mongod.conf。<br>一个简单的配置文件如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">verbose = true</span><br><span class="line"># 数据存放目录</span><br><span class="line">dbpath = /data/db</span><br><span class="line"># 日志目录</span><br><span class="line">logpath = /var/log/mongodb/mongodb.log</span><br><span class="line">logappend = true</span><br><span class="line">port = 27017</span><br></pre></td></tr></table></figure>

<h3 id="指定配置文件的命令如下："><a href="#指定配置文件的命令如下：" class="headerlink" title="指定配置文件的命令如下："></a>指定配置文件的命令如下：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ mongod -f /etc/mongod.conf</span><br></pre></td></tr></table></figure>

<h3 id="控制脚本在：-x2F-etc-x2F-init-d-x2F-mongod"><a href="#控制脚本在：-x2F-etc-x2F-init-d-x2F-mongod" class="headerlink" title="控制脚本在：&#x2F;etc&#x2F;init.d&#x2F;mongod"></a>控制脚本在：&#x2F;etc&#x2F;init.d&#x2F;mongod</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">安装开机服务</span><br><span class="line">sudo update-rc.d mongod defaults 95</span><br></pre></td></tr></table></figure>

<blockquote>
<p>如果想要切换用户运行 MongoDB 的话，需要设置 &#x2F;var&#x2F;lib&#x2F;mongodb 、 &#x2F;var&#x2F;log&#x2F;mongodb 两个目录的权限</p>
</blockquote>
<h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#启动服务端</span><br><span class="line">$ mongod</span><br><span class="line">#启动客户端</span><br><span class="line">$ mongo</span><br></pre></td></tr></table></figure>

<h2 id="服务启动、停止、重启"><a href="#服务启动、停止、重启" class="headerlink" title="服务启动、停止、重启"></a>服务启动、停止、重启</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ sudo service mongodb start</span><br><span class="line">$ sudo service mongodb stop</span><br><span class="line">$ sudo service mongodb restart</span><br></pre></td></tr></table></figure>

<h2 id="开机启动"><a href="#开机启动" class="headerlink" title="开机启动"></a>开机启动</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo systemctl enable mongod</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>配置</tag>
        <tag>DB</tag>
      </tags>
  </entry>
  <entry>
    <title>JS</title>
    <url>/myBlog/2016/03/04/JS-%E5%A4%A7%E6%9D%82%E7%83%A9/</url>
    <content><![CDATA[<blockquote><p>与 JS 相关的一些学习记录 </p>
</blockquote>

<span id="more"></span>

<h1 id="测试浏览器支持的-localStorage-大小"><a href="#测试浏览器支持的-localStorage-大小" class="headerlink" title="测试浏览器支持的 localStorage 大小"></a><a href="https://arty.name/localstorage.html">测试浏览器支持的 localStorage 大小</a></h1><h2 id="获取当前存储大小"><a href="#获取当前存储大小" class="headerlink" title="获取当前存储大小"></a>获取当前存储大小</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if(window.localStorage)&#123;</span><br><span class="line">    var hasUse =unescape(encodeURIComponent(JSON.stringify(localStorage))).length;</span><br><span class="line">    console.log(hasUse);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="原生"><a href="#原生" class="headerlink" title="原生"></a>原生</h1><h2 id="getter-setter"><a href="#getter-setter" class="headerlink" title="getter setter"></a>getter setter</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">    <span class="attr">value</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="keyword">get</span> <span class="title function_">db</span>()&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">value</span> = <span class="number">2</span>*<span class="variable language_">this</span>.<span class="property">value</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="keyword">get</span> <span class="title function_">v</span>()&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">value</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="keyword">set</span> <span class="title function_">v</span>(<span class="params">v</span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">value</span> = v</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 0</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj.<span class="property">value</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj.<span class="property">v</span>=<span class="number">1</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="获取整数-向下最整"><a href="#获取整数-向下最整" class="headerlink" title="获取整数(向下最整)"></a>获取整数(向下最整)</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> num = <span class="number">3.141592654</span></span><br><span class="line"><span class="keyword">let</span> a=~~num</span><br><span class="line"><span class="keyword">let</span> b=<span class="title class_">Math</span>.<span class="title function_">floor</span>(num)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a===b)</span><br></pre></td></tr></table></figure>

<h2 id="标签页激活状态-visibilitychange"><a href="#标签页激活状态-visibilitychange" class="headerlink" title="标签页激活状态 visibilitychange"></a>标签页激活状态 visibilitychange</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 各种浏览器兼容</span><br><span class="line">var hidden, state, visibilityChange;</span><br><span class="line">if (typeof document.hidden !== &quot;undefined&quot;) &#123;</span><br><span class="line">    hidden = &quot;hidden&quot;;</span><br><span class="line">    visibilityChange = &quot;visibilitychange&quot;;</span><br><span class="line">    state = &quot;visibilityState&quot;;</span><br><span class="line">&#125; else if (typeof document.mozHidden !== &quot;undefined&quot;) &#123;</span><br><span class="line">    hidden = &quot;mozHidden&quot;;</span><br><span class="line">    visibilityChange = &quot;mozvisibilitychange&quot;;</span><br><span class="line">    state = &quot;mozVisibilityState&quot;;</span><br><span class="line">&#125; else if (typeof document.msHidden !== &quot;undefined&quot;) &#123;</span><br><span class="line">    hidden = &quot;msHidden&quot;;</span><br><span class="line">    visibilityChange = &quot;msvisibilitychange&quot;;</span><br><span class="line">    state = &quot;msVisibilityState&quot;;</span><br><span class="line">&#125; else if (typeof document.webkitHidden !== &quot;undefined&quot;) &#123;</span><br><span class="line">    hidden = &quot;webkitHidden&quot;;</span><br><span class="line">    visibilityChange = &quot;webkitvisibilitychange&quot;;</span><br><span class="line">    state = &quot;webkitVisibilityState&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 添加监听器，在title里显示状态变化</span><br><span class="line">document.addEventListener(visibilityChange, function() &#123;</span><br><span class="line">    document.title = document[state];</span><br><span class="line">&#125;, false);</span><br><span class="line"></span><br><span class="line">// 初始化</span><br><span class="line">document.title = document[state];</span><br></pre></td></tr></table></figure>

<h2 id="为每个元素添加-outline-for-chrome"><a href="#为每个元素添加-outline-for-chrome" class="headerlink" title="为每个元素添加 outline for chrome"></a>为每个元素添加 outline for chrome</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[].forEach.call($$(&quot;*&quot;),function(a)&#123;</span><br><span class="line"></span><br><span class="line">  a.style.outline=&quot;1px solid #&quot;+(~~(Math.random()*(1&lt;&lt;24))).toString(16)</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h1 id="angular"><a href="#angular" class="headerlink" title="angular"></a>angular</h1><h2 id="获取-scope-元素"><a href="#获取-scope-元素" class="headerlink" title="获取 scope 元素"></a>获取 scope 元素</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var a = angular.element(&#x27;body[ng-controller=&quot;yourCtrl&quot;]&#x27;).scope()</span><br></pre></td></tr></table></figure>

<h2 id="广播通信"><a href="#广播通信" class="headerlink" title="广播通信"></a>广播通信</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!--父级--&gt;</span><br><span class="line">&lt;div ng-controller=&quot;ParentCtrl&quot;&gt;</span><br><span class="line">    &lt;!--自己--&gt;</span><br><span class="line">    &lt;div ng-controller=&quot;SelfCtrl&quot;&gt;</span><br><span class="line">        &lt;a ng-click=&quot;click()&quot;&gt;click me&lt;/a&gt;</span><br><span class="line">        &lt;!--子级--&gt;</span><br><span class="line">        &lt;div ng-controller=&quot;ChildCtrl&quot;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;!--平级--&gt;</span><br><span class="line">    &lt;div ng-controller=&quot;BroCtrl&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">app.controller(&#x27;SelfCtrl&#x27;, function($scope) &#123;</span><br><span class="line">    $scope.click = function () &#123;</span><br><span class="line">        $scope.$broadcast(&#x27;to-child&#x27;, &#x27;child&#x27;);</span><br><span class="line">        $scope.$emit(&#x27;to-parent&#x27;, &#x27;parent&#x27;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.controller(&#x27;ParentCtrl&#x27;, function($scope) &#123;</span><br><span class="line">    $scope.$on(&#x27;to-parent&#x27;, function(event,data) &#123;</span><br><span class="line">        //父级能得到值</span><br><span class="line">        console.log(&#x27;ParentCtrl&#x27;, data);</span><br><span class="line">    &#125;);</span><br><span class="line">    $scope.$on(&#x27;to-child&#x27;, function(event,data) &#123;</span><br><span class="line">        //子级得不到值</span><br><span class="line">        console.log(&#x27;ParentCtrl&#x27;, data);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.controller(&#x27;ChildCtrl&#x27;, function($scope)&#123;</span><br><span class="line">    $scope.$on(&#x27;to-child&#x27;, function(event,data) &#123;</span><br><span class="line">        //子级能得到值</span><br><span class="line">        console.log(&#x27;ChildCtrl&#x27;, data);</span><br><span class="line">    &#125;);</span><br><span class="line">    $scope.$on(&#x27;to-parent&#x27;, function(event,data) &#123;</span><br><span class="line">        //父级得不到值</span><br><span class="line">        console.log(&#x27;ChildCtrl&#x27;, data);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.controller(&#x27;BroCtrl&#x27;, function($scope)&#123;</span><br><span class="line">    $scope.$on(&#x27;to-parent&#x27;, function(event,data) &#123;</span><br><span class="line">        //平级得不到值</span><br><span class="line">        console.log(&#x27;BroCtrl&#x27;, data);</span><br><span class="line">    &#125;);</span><br><span class="line">    $scope.$on(&#x27;to-child&#x27;, function(event,data) &#123;</span><br><span class="line">        //平级得不到值</span><br><span class="line">        console.log(&#x27;BroCtrl&#x27;, data);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h2 id="模拟-href（异步新页面打开不支持）"><a href="#模拟-href（异步新页面打开不支持）" class="headerlink" title="模拟 href（异步新页面打开不支持）"></a>模拟 href（异步新页面打开不支持）</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$scope.eventTest = function($event) &#123;</span><br><span class="line">    if ($event.target.href === window.location.href) &#123;</span><br><span class="line">        //阻止事件冒泡</span><br><span class="line">        $event.preventDefault();</span><br><span class="line">        $timeout(function() &#123;</span><br><span class="line">            $event.target.href = &#x27;your href&#x27;;</span><br><span class="line">            $timeout(function() &#123;</span><br><span class="line">                $event.target.click();</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;,0);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>JS</tag>
      </tags>
  </entry>
  <entry>
    <title>JS-function</title>
    <url>/myBlog/2016/02/01/JS-Function/</url>
    <content><![CDATA[<blockquote><p>与 JS 相关的函数 </p>
</blockquote>

<span id="more"></span>

<h1 id="时间相关"><a href="#时间相关" class="headerlink" title="时间相关"></a>时间相关</h1><h1 id="正则相关"><a href="#正则相关" class="headerlink" title="正则相关"></a>正则相关</h1><h1 id="位置相关"><a href="#位置相关" class="headerlink" title="位置相关"></a>位置相关</h1><h2 id="获取元素相对于这个页面的-X-标"><a href="#获取元素相对于这个页面的-X-标" class="headerlink" title="获取元素相对于这个页面的 X 标"></a>获取元素相对于这个页面的 X 标</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/**</span><br><span class="line"> * [获取元素相对于这个页面的X坐标]</span><br><span class="line"> * @param  &#123;[type]&#125; elem [description]</span><br><span class="line"> * @return &#123;[type]&#125;      [description]</span><br><span class="line"> */</span><br><span class="line">lin.pageX = function(argE) &#123;</span><br><span class="line">    return argE.getBoundingClientRect().left + (document.documentElement.scrollLeft || document.body.scrollLeft);</span><br><span class="line">&#125;;</span><br><span class="line">/**</span><br><span class="line"> * [获取元素相对于这个页面的Y坐标]</span><br><span class="line"> * @param  &#123;[type]&#125; argE [description]</span><br><span class="line"> * @return &#123;[type]&#125;      [description]</span><br><span class="line"> */</span><br><span class="line">lin.pageY = function(argE) &#123;</span><br><span class="line">    return argE.getBoundingClientRect().top + (document.documentElement.scrollTop || document.body.scrollTop);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>JS</tag>
      </tags>
  </entry>
  <entry>
    <title>gulp</title>
    <url>/myBlog/2016/02/01/%E5%B7%A5%E5%85%B7%E7%B1%BB-gulp/</url>
    <content><![CDATA[<blockquote><p>与 gulp 相关的插件 </p>
</blockquote>

<span id="more"></span>

<h1 id="gulp-插件加载"><a href="#gulp-插件加载" class="headerlink" title="gulp 插件加载"></a>gulp 插件加载</h1><blockquote>
<p>gulp-load-plugins</p>
</blockquote>
<h1 id="js-文档生成"><a href="#js-文档生成" class="headerlink" title="js 文档生成"></a>js 文档生成</h1><blockquote>
<p>gulp-documentation</p>
</blockquote>
<h1 id="简化-angular-moudle-声明"><a href="#简化-angular-moudle-声明" class="headerlink" title="简化 angular moudle 声明"></a>简化 angular moudle 声明</h1><blockquote>
<p>gulp-ng-annotate</p>
</blockquote>
<h1 id="处理-sass"><a href="#处理-sass" class="headerlink" title="处理 sass"></a>处理 sass</h1><blockquote>
<p>gulp-sass</p>
</blockquote>
<h1 id="生成-sourceMap"><a href="#生成-sourceMap" class="headerlink" title="生成 sourceMap"></a>生成 sourceMap</h1><blockquote>
<p>gulp-sourcemaps</p>
</blockquote>
<h1 id="实时更新"><a href="#实时更新" class="headerlink" title="实时更新"></a>实时更新</h1><blockquote>
<p>browser-sync</p>
</blockquote>
<h1 id="雪碧图"><a href="#雪碧图" class="headerlink" title="雪碧图"></a>雪碧图</h1><blockquote>
<p>gulp.spritesmith</p>
</blockquote>
]]></content>
      <categories>
        <category>工具类</category>
      </categories>
      <tags>
        <tag>JS</tag>
      </tags>
  </entry>
  <entry>
    <title>MD语法</title>
    <url>/myBlog/2016/01/01/MD-%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[<h1 id="访问原文"><a href="#访问原文" class="headerlink" title="访问原文"></a><a href="http://wowubuntu.com/markdown/index.html#img">访问原文</a></h1><span id="more"></span>
<div class="wikistyle"><p>&lt;&lt;<a href="http://wowubuntu.com">访问Wow!Ubuntu</a></p><p><strong>NOTE:</strong>This is Simplelified Chinese Edition Document of Markdown Syntax.If you are seeking for English Edition Document.Please refer to<a href="http://daringfireball.net/projects/markdown/syntax">Markdown:Syntax</a>.</p><p><strong>声明：</strong>这份文档派生(fork)于<a href="http://markdown.tw/">繁体中文版</a>，在此基础上进行了繁体转简体工作，并进行了适当的润色。此文档用Markdown语法编写，你可以到这里<a href="http://gitcafe.com/riku/Markdown-Syntax-CN/blob/master/syntax.md">查看它的源文件</a>。「繁体中文版的原始文件可以<a href="https://github.com/othree/markdown-syntax-zhtw/blob/master/syntax.md">查看这里</a>。」--By @<a href="http://twitter.com/riku">riku</a></p><p><strong>注：</strong>本项目托管于<a href="http://gitcafe.com/riku/Markdown-Syntax-CN/">GitCafe</a>上，请通过"派生"和"合并请求"来帮忙改进本项目。</p><p><strong>***AD:</strong>本网站托管于具备SSD硬盘的<a href="https://www.digitalocean.com/?refcode=824a4f4aea1a">DigitalOcean.com</a>VPS服务商，<a href="https://www.digitalocean.com/?refcode=824a4f4aea1a">点击此处</a>进入购买，即可免费获赠10USD优惠款！</p><h1>Markdown语法说明</h1><ul><li><a href="#overview">概述</a><ul><li><a href="#philosophy">宗旨</a></li><li><a href="#html">兼容HTML</a></li><li><a href="#autoescape">特殊字符自动转换</a></li></ul></li><li><a href="#block">区块元素</a><ul><li><a href="#p">段落和换行</a></li><li><a href="#header">标题</a></li><li><a href="#blockquote">区块引用</a></li><li><a href="#list">列表</a></li><li><a href="#precode">代码区块</a></li><li><a href="#hr">分隔线</a></li></ul></li><li><a href="#span">区段元素</a><ul><li><a href="#link">链接</a></li><li><a href="#em">强调</a></li><li><a href="#code">代码</a></li><li><a href="#img">图片</a></li></ul></li><li><a href="#misc">其它</a><ul><li><a href="#backslash">反斜杠</a></li><li><a href="#autolink">自动链接</a></li></ul></li><li><a href="#acknowledgement">感谢</a></li><li><a href="#editor">Markdown免费编辑器</a></li></ul><hr><h2 id="overview">概述</h2><h3 id="philosophy">宗旨</h3><p>Markdown的目标是实现「易读易写」。</p><p>可读性，无论如何，都是最重要的。一份使用Markdown格式撰写的文件应该可以直接以纯文本发布，并且看起来不会像是由许多标签或是格式指令所构成。Markdown语法受到一些既有text-to-HTML格式的影响，包括<a href="http://docutils.sourceforge.net/mirror/setext.html">Setext</a>、<a href="http://www.aaronsw.com/2002/atx/">atx</a>、<a href="http://textism.com/tools/textile/">Textile</a>、<a href="http://docutils.sourceforge.net/rst.html">reStructuredText</a>、<a href="http://www.triptico.com/software/grutatxt.html">Grutatext</a>和<a href="http://ettext.taint.org/doc/">EtText</a>，而最大灵感来源其实是纯文本电子邮件的格式。</p><p>总之，Markdown的语法全由一些符号所组成，这些符号经过精挑细选，其作用一目了然。比如：在文字两旁加上星号，看起来就像*强调*。Markdown的列表看起来，嗯，就是列表。Markdown的区块引用看起来就真的像是引用一段文字，就像你曾在电子邮件中见过的那样。</p><h3 id="html">兼容HTML</h3><p>Markdown语法的目标是：成为一种适用于网络的<em>书写</em>语言。</p><p>Markdown不是想要取代HTML，甚至也没有要和它相近，它的语法种类很少，只对应HTML标记的一小部分。Markdown的构想<em>不是</em>要使得HTML文档更容易书写。在我看来，HTML已经很容易写了。Markdown的理念是，能让文档更容易读、写和随意改。HTML是一种<em>发布</em>的格式，Markdown是一种<em>书写</em>的格式。就这样，Markdown的格式语法只涵盖纯文本可以涵盖的范围。</p><p>不在Markdown涵盖范围之内的标签，都可以直接在文档里面用HTML撰写。不需要额外标注这是HTML或是Markdown；只要直接加标签就可以了。</p><p>要制约的只有一些HTML区块元素――比如<code>&lt;div&gt;</code>、<code>&lt;table&gt;</code>、<code>&lt;pre&gt;</code>、<code>&lt;p&gt;</code>等标签，必须在前后加上空行与其它内容区隔开，还要求它们的开始标签与结尾标签不能用制表符或空格来缩进。Markdown的生成器有足够智能，不会在HTML区块标签外加上不必要的<code>&lt;p&gt;</code>标签。</p><p>例子如下，在Markdown文件里加上一段HTML表格：</p><pre><code>这是一个普通段落。&lt;table&gt;&lt;tr&gt;&lt;td&gt;Foo&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;这是另一个普通段落。</code></pre><p>请注意，在HTML区块标签间的Markdown格式语法将不会被处理。比如，你在HTML区块内使用Markdown样式的<code>*强调*</code>会没有效果。</p><p>HTML的区段（行内）标签如<code>&lt;span&gt;</code>、<code>&lt;cite&gt;</code>、<code>&lt;del&gt;</code>可以在Markdown的段落、列表或是标题里随意使用。依照个人习惯，甚至可以不用Markdown格式，而直接采用HTML标签来格式化。举例说明：如果比较喜欢HTML的<code>&lt;a&gt;</code>或<code>&lt;img&gt;</code>标签，可以直接使用这些标签，而不用Markdown提供的链接或是图像标签语法。</p><p>和处在HTML区块标签间不同，Markdown语法在HTML区段标签间是有效的。</p><h3 id="autoescape">特殊字符自动转换</h3><p>在HTML文件中，有两个字符需要特殊处理：<code>&lt;</code>和<code>&amp;</code>。<code>&lt;</code>符号用于起始标签，<code>&amp;</code>符号则用于标记HTML实体，如果你只是想要显示这些字符的原型，你必须要使用实体的形式，像是<code>&amp;lt;</code>和<code>&amp;amp;</code>。</p><p><code>&amp;</code>字符尤其让网络文档编写者受折磨，如果你要打「<code>AT&amp;T</code>」，你必须要写成「<code>AT&amp;amp;T</code>」。而网址中的<code>&amp;</code>字符也要转换。比如你要链接到：</p><pre><code>http:</code></pre><p>你必须要把网址转换写为：</p><pre><code>http:</code></pre><p>才能放到链接标签的<code>href</code>属性里。不用说也知道这很容易忽略，这也可能是HTML标准检验所检查到的错误中，数量最多的。</p><p>Markdown让你可以自然地书写字符，需要转换的由它来处理好了。如果你使用的<code>&amp;</code>字符是HTML字符实体的一部分，它会保留原状，否则它会被转换成<code>&amp;amp</code>;。</p><p>所以你如果要在文档中插入一个版权符号<code>©</code>，你可以这样写：</p><pre><code>&amp;copy;</code></pre><p>Markdown会保留它不动。而若你写：</p><pre><code>AT&amp;T</code></pre><p>Markdown就会将它转为：</p><pre><code>AT&amp;amp;T</code></pre><p>类似的状况也会发生在<code>&lt;</code>符号上，因为Markdown允许<a href="#html">兼容HTML</a>，如果你是把<code>&lt;</code>符号作为HTML标签的定界符使用，那Markdown也不会对它做任何转换，但是如果你写：</p><pre><code>4&lt;5</code></pre><p>Markdown将会把它转换为：</p><pre><code>4&amp;lt;5</code></pre><p>不过需要注意的是，code范围内，不论是行内还是区块，<code>&lt;</code>和<code>&amp;</code>两个符号都<em>一定</em>会被转换成HTML实体，这项特性让你可以很容易地用Markdown写HTML code（和HTML相对而言，HTML语法中，你要把所有的<code>&lt;</code>和<code>&amp;</code>都转换为HTML实体，才能在HTML文件里面写出HTML code。）</p><hr><h2 id="block">区块元素</h2><h3 id="p">段落和换行</h3><p>一个Markdown段落是由一个或多个连续的文本行组成，它的前后要有一个以上的空行（空行的定义是显示上看起来像是空的，便会被视为空行。比方说，若某一行只包含空格和制表符，则该行也会被视为空行）。普通段落不该用空格或制表符来缩进。</p><p>「由一个或多个连续的文本行组成」这句话其实暗示了Markdown允许段落内的强迫换行（插入换行符），这个特性和其他大部分的text-to-HTML格式不一样（包括Movable Type的「Convert Line Breaks」选项），其它的格式会把每个换行符都转成<code>&lt;br/&gt;</code>标签。</p><p>如果你<em>确实</em>想要依赖Markdown来插入<code>&lt;br/&gt;</code>标签的话，在插入处先按入两个以上的空格然后回车。</p><p>的确，需要多费点事（多加空格）来产生<code>&lt;br/&gt;</code>，但是简单地「每个换行都转换为<code>&lt;br/&gt;</code>」的方法在Markdown中并不适合，Markdown中email式的<a href="#blockquote">区块引用</a>和多段落的<a href="#list">列表</a>在使用换行来排版的时候，不但更好用，还更方便阅读。</p><h3 id="header">标题</h3><p>Markdown支持两种标题的语法，类<a href="http://docutils.sourceforge.net/mirror/setext.html">Setext</a>和类<a href="http://www.aaronsw.com/2002/atx/">atx</a>形式。</p><p>类Setext形式是用底线的形式，利用<code>=</code>（最高阶标题）和<code>-</code>（第二阶标题），例如：</p><pre><code>This is an H1=============This is an H2-------------</code></pre><p>任何数量的<code>=</code>和<code>-</code>都可以有效果。</p><p>类Atx形式则是在行首插入1到6个<code>#</code>，对应到标题1到6阶，例如：</p><pre><code>#这是H1##这是H2######这是H6</code></pre><p>你可以选择性地「闭合」类atx样式的标题，这纯粹只是美观用的，若是觉得这样看起来比较舒适，你就可以在行尾加上<code>#</code>，而行尾的<code>#</code>数量也不用和开头一样（行首的井字符数量决定标题的阶数）：</p><pre><code>#这是H1###这是H2#####这是H3######</code></pre><h3 id="blockquote">区块引用Blockquotes</h3><p>Markdown标记区块引用是使用类似email中用<code>&gt;</code>的引用方式。如果你还熟悉在email信件中的引言部分，你就知道怎么在Markdown文件中建立一个区块引用，那会看起来像是你自己先断好行，然后在每行的最前面加上<code>&gt;</code>：</p><pre><code>&gt;This is a blockquote with two paragraphs.Lorem ipsum dolor sit amet,&gt;consectetuer adipiscing elit.Aliquam hendrerit mi posuere lectus.&gt;Vestibulum enim wisi,viverra nec,fringilla in,laoreet vitae,risus.&gt;&gt;Donec sit amet nisl.Aliquam semper ipsum sit amet velit.Suspendisse&gt;id sem consectetuer libero luctus adipiscing.</code></pre><p>Markdown也允许你偷懒只在整个段落的第一行最前面加上<code>&gt;</code>：</p><pre><code>&gt;This is a blockquote with two paragraphs.Lorem ipsum dolor sit amet,consectetuer adipiscing elit.Aliquam hendrerit mi posuere lectus.Vestibulum enim wisi,viverra nec,fringilla in,laoreet vitae,risus.&gt;Donec sit amet nisl.Aliquam semper ipsum sit amet velit.Suspendisse id sem consectetuer libero luctus adipiscing.</code></pre><p>区块引用可以嵌套（例如：引用内的引用），只要根据层次加上不同数量的<code>&gt;</code>：</p><pre><code>&gt;This is the first level of quoting.&gt;&gt;&gt;This is nested blockquote.&gt;&gt;Back to the first level.</code></pre><p>引用的区块内也可以使用其他的Markdown语法，包括标题、列表、代码区块等：</p><pre><code>&gt;##这是一个标题。&gt;&gt;1.这是第一行列表项。&gt;2.这是第二行列表项。&gt;&gt;给出一些例子代码：&gt;&gt;return shell_exec("echo $input | $markdown_script");</code></pre><p>任何像样的文本编辑器都能轻松地建立email型的引用。例如在BBEdit中，你可以选取文字后然后从选单中选择<em>增加引用阶层</em>。</p><h3 id="list">列表</h3><p>Markdown支持有序列表和无序列表。</p><p>无序列表使用星号、加号或是减号作为列表标记：</p><pre><code>*Red*Green*Blue</code></pre><p>等同于：</p><pre><code>+Red+Green+Blue</code></pre><p>也等同于：</p><pre><code>-Red-Green-Blue</code></pre><p>有序列表则使用数字接着一个英文句点：</p><pre><code>1.Bird 2.McHale 3.Parish</code></pre><p>很重要的一点是，你在列表标记上使用的数字并不会影响输出的HTML结果，上面的列表所产生的HTML标记为：</p><pre><code>&lt;ol&gt;&lt;li&gt;Bird&lt;/li&gt;&lt;li&gt;McHale&lt;/li&gt;&lt;li&gt;Parish&lt;/li&gt;&lt;/ol&gt;</code></pre><p>如果你的列表标记写成：</p><pre><code>1.Bird 1.McHale 1.Parish</code></pre><p>或甚至是：</p><pre><code>3.Bird 1.McHale 8.Parish</code></pre><p>你都会得到完全相同的HTML输出。重点在于，你可以让Markdown文件的列表数字和输出的结果相同，或是你懒一点，你可以完全不用在意数字的正确性。</p><p>如果你使用懒惰的写法，建议第一个项目最好还是从1.开始，因为Markdown未来可能会支持有序列表的start属性。</p><p>列表项目标记通常是放在最左边，但是其实也可以缩进，最多3个空格，项目标记后面则一定要接着至少一个空格或制表符。</p><p>要让列表看起来更漂亮，你可以把内容用固定的缩进整理好：</p><pre><code>*Lorem ipsum dolor sit amet,consectetuer adipiscing elit.Aliquam hendrerit mi posuere lectus.Vestibulum enim wisi,viverra nec,fringilla in,laoreet vitae,risus.*Donec sit amet nisl.Aliquam semper ipsum sit amet velit.Suspendisse id sem consectetuer libero luctus adipiscing.</code></pre><p>但是如果你懒，那也行：</p><pre><code>*Lorem ipsum dolor sit amet,consectetuer adipiscing elit.Aliquam hendrerit mi posuere lectus.Vestibulum enim wisi,viverra nec,fringilla in,laoreet vitae,risus.*Donec sit amet nisl.Aliquam semper ipsum sit amet velit.Suspendisse id sem consectetuer libero luctus adipiscing.</code></pre><p>如果列表项目间用空行分开，在输出HTML时Markdown就会将项目内容用<code>&lt;p&gt;</code>标签包起来，举例来说：</p><pre><code>*Bird*Magic</code></pre><p>会被转换为：</p><pre><code>&lt;ul&gt;&lt;li&gt;Bird&lt;/li&gt;&lt;li&gt;Magic&lt;/li&gt;&lt;/ul&gt;</code></pre><p>但是这个：</p><pre><code>*Bird*Magic</code></pre><p>会被转换为：</p><pre><code>&lt;ul&gt;&lt;li&gt;&lt;p&gt;Bird&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Magic&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</code></pre><p>列表项目可以包含多个段落，每个项目下的段落都必须缩进4个空格或是1个制表符：</p><pre><code>1.This is a list item with two paragraphs.Lorem ipsum dolor sit amet,consectetuer adipiscing elit.Aliquam hendrerit mi posuere lectus.Vestibulum enim wisi,viverra nec,fringilla in,laoreet vitae,risus.Donec sit amet nisl.Aliquam semper ipsum sit amet velit.2.Suspendisse id sem consectetuer libero luctus adipiscing.</code></pre><p>如果你每行都有缩进，看起来会看好很多，当然，再次地，如果你很懒惰，Markdown也允许：</p><pre><code>*This is a list item with two paragraphs.This is the second paragraph in the list item.You're only required to indent the first line. Lorem ipsum
      dolor sit amet, consectetuer adipiscing elit. * Another item in the same
      list.
    </code>
  </pre>
  <p>
    如果要在列表项目内放进引用，那
    <code>
      &gt;
    </code>
    就需要缩进：
  </p>
  <pre>
    <code>
      * A list item with a blockquote: &gt; This is a blockquote &gt; inside
      a list item.
    </code>
  </pre>
  <p>
    如果要放代码区块的话，该区块就需要缩进
    <em>
      两次
    </em>
    ，也就是 8 个空格或是 2 个制表符：
  </p>
  <pre>
    <code>
      * 一列表项包含一个列表区块： &lt;代码写在这&gt;
    </code>
  </pre>
  <p>
    当然，项目列表很可能会不小心产生，像是下面这样的写法：
  </p>
  <pre>
    <code>
      1986. What a great season.
    </code>
  </pre>
  <p>
    换句话说，也就是在行首出现
    <em>
      数字-句点-空白
    </em>
    ，要避免这样的状况，你可以在句点前面加上反斜杠。
  </p>
  <pre>
    <code>
      1986\. What a great season.
    </code>
  </pre>
  <h3 id="precode">
    代码区块
  </h3>
  <p>
    和程序相关的写作或是标签语言原始码通常会有已经排版好的代码区块，通常这些区块我们并不希望它以一般段落文件的方式去排版，而是照原来的样子显示，Markdown
    会用
    <code>
      &lt;pre&gt;
    </code>
    和
    <code>
      &lt;code&gt;
    </code>
    标签来把代码区块包起来。
  </p>
  <p>
    要在 Markdown 中建立代码区块很简单，只要简单地缩进 4 个空格或是 1 个制表符就可以，例如，下面的输入：
  </p>
  <pre>
    <code>
      这是一个普通段落： 这是一个代码区块。
    </code>
  </pre>
  <p>
    Markdown 会转换成：
  </p>
  <pre>
    <code>
      &lt;p&gt;这是一个普通段落：&lt;/p&gt; &lt;pre&gt;&lt;code&gt;这是一个代码区块。 &lt;/code&gt;&lt;/pre&gt;
    </code>
  </pre>
  <p>
    这个每行一阶的缩进（4 个空格或是 1 个制表符），都会被移除，例如：
  </p>
  <pre>
    <code>
      Here is an example of AppleScript: tell application "Foo" beep end tell
    </code>
  </pre>
  <p>
    会被转换为：
  </p>
  <pre>
    <code>
      &lt;p&gt;Here is an example of AppleScript:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;tell
      application "Foo" beep end tell &lt;/code&gt;&lt;/pre&gt;
    </code>
  </pre>
  <p>
    一个代码区块会一直持续到没有缩进的那一行（或是文件结尾）。
  </p>
  <p>
    在代码区块里面，
    <code>
      &amp;
    </code>
    、
    <code>
      &lt;
    </code>
    和
    <code>
      &gt;
    </code>
    会自动转成 HTML 实体，这样的方式让你非常容易使用 Markdown 插入范例用的 HTML 原始码，只需要复制贴上，再加上缩进就可以了，剩下的
    Markdown 都会帮你处理，例如：
  </p>
  <pre>
    <code>
      &lt;div class="footer"&gt; &amp;copy; 2004 Foo Corporation &lt;/div&gt;
    </code>
  </pre>
  <p>
    会被转换为：
  </p>
  <pre>
    <code>
      &lt;pre&gt;&lt;code&gt;&amp;lt;div class="footer"&amp;gt; &amp;amp;copy;
      2004 Foo Corporation &amp;lt;/div&amp;gt; &lt;/code&gt;&lt;/pre&gt;
    </code>
  </pre>
  <p>
    代码区块中，一般的 Markdown 语法不会被转换，像是星号便只是星号，这表示你可以很容易地以 Markdown 语法撰写 Markdown
    语法相关的文件。
  </p>
  <h3 id="hr">
    分隔线
  </h3>
  <p>
    你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：
  </p>
  <pre>
    <code>
      * * * *** ***** - - - ---------------------------------------
    </code>
  </pre>
  <hr>
  <h2 id="span">
    区段元素
  </h2>
  <h3 id="link">
    链接
  </h3>
  <p>
    Markdown 支持两种形式的链接语法：
    <em>
      行内式
    </em>
    和
    <em>
      参考式
    </em>
    两种形式。
  </p>
  <p>
    不管是哪一种，链接文字都是用 [方括号] 来标记。
  </p>
  <p>
    要建立一个
    <em>
      行内式
    </em>
    的链接，只要在方块括号后面紧接着圆括号并插入网址链接即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title
    文字包起来即可，例如：
  </p>
  <pre>
    <code>
      This is [an example](http://example.com/ "Title") inline link. [This link](http://example.net/)
      has no title attribute.
    </code>
  </pre>
  <p>
    会产生：
  </p>
  <pre>
    <code>
      &lt;p&gt;This is &lt;a href="http://example.com/" title="Title"&gt; an
      example&lt;/a&gt; inline link.&lt;/p&gt; &lt;p&gt;&lt;a href="http://example.net/"&gt;This
      link&lt;/a&gt; has no title attribute.&lt;/p&gt;
    </code>
  </pre>
  <p>
    如果你是要链接到同样主机的资源，你可以使用相对路径：
  </p>
  <pre>
    <code>
      See my [About](/about/) page for details.
    </code>
  </pre>
  <p>
    <em>
      参考式
    </em>
    的链接是在链接文字的括号后面再接上另一个方括号，而在第二个方括号里面要填入用以辨识链接的标记：
  </p>
  <pre>
    <code>
      This is [an example][id] reference-style link.
    </code>
  </pre>
  <p>
    你也可以选择性地在两个方括号中间加上一个空格：
  </p>
  <pre>
    <code>
      This is [an example] [id] reference-style link.
    </code>
  </pre>
  <p>
    接着，在文件的任意处，你可以把这个标记的链接内容定义出来：
  </p>
  <pre>
    <code>
      [id]: http://example.com/ "Optional Title Here"
    </code>
  </pre>
  <p>
    链接内容定义的形式为：
  </p>
  <ul>
    <li>
      方括号（前面可以选择性地加上至多三个空格来缩进），里面输入链接文字
    </li>
    <li>
      接着一个冒号
    </li>
    <li>
      接着一个以上的空格或制表符
    </li>
    <li>
      接着链接的网址
    </li>
    <li>
      选择性地接着 title 内容，可以用单引号、双引号或是括弧包着
    </li>
  </ul>
  <p>
    下面这三种链接的定义都是相同：
  </p>
  <pre>
    <code>
      [foo]: http://example.com/ "Optional Title Here" [foo]: http://example.com/
      'Optional Title Here' [foo]: http://example.com/ (Optional Title Here)
    </code>
  </pre>
  <p>
    <strong>
      请注意：
    </strong>
    有一个已知的问题是 Markdown.pl 1.0.1 会忽略单引号包起来的链接 title。
  </p>
  <p>
    链接网址也可以用尖括号包起来：
  </p>
  <pre>
    <code>
      [id]: &lt;http://example.com/&gt; "Optional Title Here"
    </code>
  </pre>
  <p>
    你也可以把 title 属性放到下一行，也可以加一些缩进，若网址太长的话，这样会比较好看：
  </p>
  <pre>
    <code>
      [id]: http://example.com/longish/path/to/resource/here "Optional Title
      Here"
    </code>
  </pre>
  <p>
    网址定义只有在产生链接的时候用到，并不会直接出现在文件之中。
  </p>
  <p>
    链接辨别标签可以有字母、数字、空白和标点符号，但是并
    <em>
      不
    </em>
    区分大小写，因此下面两个链接是一样的：
  </p>
  <pre>
    <code>
      [link text][a] [link text][A]
    </code>
  </pre>
  <p>
    <em>
      隐式链接标记
    </em>
    功能让你可以省略指定链接标记，这种情形下，链接标记会视为等同于链接文字，要用隐式链接标记只要在链接文字后面加上一个空的方括号，如果你要让 "Google"
    链接到 google.com，你可以简化成：
  </p>
  <pre>
    <code>
      [Google][]
    </code>
  </pre>
  <p>
    然后定义链接内容：
  </p>
  <pre>
    <code>
      [Google]: http://google.com/
    </code>
  </pre>
  <p>
    由于链接文字可能包含空白，所以这种简化型的标记内也许包含多个单词：
  </p>
  <pre>
    <code>
      Visit [Daring Fireball][] for more information.
    </code>
  </pre>
  <p>
    然后接着定义链接：
  </p>
  <pre>
    <code>
      [Daring Fireball]: http://daringfireball.net/
    </code>
  </pre>
  <p>
    链接的定义可以放在文件中的任何一个地方，我比较偏好直接放在链接出现段落的后面，你也可以把它放在文件最后面，就像是注解一样。
  </p>
  <p>
    下面是一个参考式链接的范例：
  </p>
  <pre>
    <code>
      I get 10 times more traffic from [Google] [1] than from [Yahoo] [2] or
      [MSN] [3]. [1]: http://google.com/ "Google" [2]: http://search.yahoo.com/
      "Yahoo Search" [3]: http://search.msn.com/ "MSN Search"
    </code>
  </pre>
  <p>
    如果改成用链接名称的方式写：
  </p>
  <pre>
    <code>
      I get 10 times more traffic from [Google][] than from [Yahoo][] or [MSN][].
      [google]: http://google.com/ "Google" [yahoo]: http://search.yahoo.com/
      "Yahoo Search" [msn]: http://search.msn.com/ "MSN Search"
    </code>
  </pre>
  <p>
    上面两种写法都会产生下面的 HTML。
  </p>
  <pre>
    <code>
      &lt;p&gt;I get 10 times more traffic from &lt;a href="http://google.com/"
      title="Google"&gt;Google&lt;/a&gt; than from &lt;a href="http://search.yahoo.com/"
      title="Yahoo Search"&gt;Yahoo&lt;/a&gt; or &lt;a href="http://search.msn.com/"
      title="MSN Search"&gt;MSN&lt;/a&gt;.&lt;/p&gt;
    </code>
  </pre>
  <p>
    下面是用行内式写的同样一段内容的 Markdown 文件，提供作为比较之用：
  </p>
  <pre>
    <code>
      I get 10 times more traffic from [Google](http://google.com/ "Google")
      than from [Yahoo](http://search.yahoo.com/ "Yahoo Search") or [MSN](http://search.msn.com/
      "MSN Search").
    </code>
  </pre>
  <p>
    参考式的链接其实重点不在于它比较好写，而是它比较好读，比较一下上面的范例，使用参考式的文章本身只有 81 个字符，但是用行内形式的却会增加到
    176 个字元，如果是用纯 HTML 格式来写，会有 234 个字元，在 HTML 格式中，标签比文本还要多。
  </p>
  <p>
    使用 Markdown 的参考式链接，可以让文件更像是浏览器最后产生的结果，让你可以把一些标记相关的元数据移到段落文字之外，你就可以增加链接而不让文章的阅读感觉被打断。
  </p>
  <h3 id="em">
    强调
  </h3>
  <p>
    Markdown 使用星号（
    <code>
      *
    </code>
    ）和底线（
    <code>
      _
    </code>
    ）作为标记强调字词的符号，被
    <code>
      *
    </code>
    或
    <code>
      _
    </code>
    包围的字词会被转成用
    <code>
      &lt;em&gt;
    </code>
    标签包围，用两个
    <code>
      *
    </code>
    或
    <code>
      _
    </code>
    包起来的话，则会被转成
    <code>
      &lt;strong&gt;
    </code>
    ，例如：
  </p>
  <pre>
    <code>
      *single asterisks* _single underscores_ **double asterisks** __double
      underscores__
    </code>
  </pre>
  <p>
    会转成：
  </p>
  <pre>
    <code>
      &lt;em&gt;single asterisks&lt;/em&gt; &lt;em&gt;single underscores&lt;/em&gt;
      &lt;strong&gt;double asterisks&lt;/strong&gt; &lt;strong&gt;double underscores&lt;/strong&gt;
    </code>
  </pre>
  <p>
    你可以随便用你喜欢的样式，唯一的限制是，你用什么符号开启标签，就要用什么符号结束。
  </p>
  <p>
    强调也可以直接插在文字中间：
  </p>
  <pre>
    <code>
      un*frigging*believable
    </code>
  </pre>
  <p>
    但是
    <strong>
      如果你的
      <code>
        *
      </code>
      和
      <code>
        _
      </code>
      两边都有空白的话，它们就只会被当成普通的符号
    </strong>
    。
  </p>
  <p>
    如果要在文字前后直接插入普通的星号或底线，你可以用反斜线：
  </p>
  <pre>
    <code>
      \*this text is surrounded by literal asterisks\*
    </code>
  </pre>
  <h3 id="code">
    代码
  </h3>
  <p>
    如果要标记一小段行内代码，你可以用反引号把它包起来（
    <code>
      `
    </code>
    ），例如：
  </p>
  <pre>
    <code>
      Use the `printf()` function.
    </code>
  </pre>
  <p>
    会产生：
  </p>
  <pre>
    <code>
      &lt;p&gt;Use the &lt;code&gt;printf()&lt;/code&gt; function.&lt;/p&gt;
    </code>
  </pre>
  <p>
    如果要在代码区段内插入反引号，你可以用多个反引号来开启和结束代码区段：
  </p>
  <pre>
    <code>
      ``There is a literal backtick (`) here.``
    </code>
  </pre>
  <p>
    这段语法会产生：
  </p>
  <pre>
    <code>
      &lt;p&gt;&lt;code&gt;There is a literal backtick (`) here.&lt;/code&gt;&lt;/p&gt;
    </code>
  </pre>
  <p>
    代码区段的起始和结束端都可以放入一个空白，起始端后面一个，结束端前面一个，这样你就可以在区段的一开始就插入反引号：
  </p>
  <pre>
    <code>
      A single backtick in a code span: `` ` `` A backtick-delimited string
      in a code span: `` `foo` ``
    </code>
  </pre>
  <p>
    会产生：
  </p>
  <pre>
    <code>
      &lt;p&gt;A single backtick in a code span: &lt;code&gt;`&lt;/code&gt;&lt;/p&gt;
      &lt;p&gt;A backtick-delimited string in a code span: &lt;code&gt;`foo`&lt;/code&gt;&lt;/p&gt;
    </code>
  </pre>
  <p>
    在代码区段内，
    <code>
      &amp;
    </code>
    和尖括号
    <strong>
      都
    </strong>
    会被自动地转成 HTML 实体，这使得插入 HTML 原始码变得很容易，Markdown 会把下面这段：
  </p>
  <pre>
    <code>
      Please don't use any`&lt;blink&gt;`tags.</code></pre><p>转为：</p><pre><code>&lt;p&gt;Please don't use any &lt;code&gt;&amp;lt;blink&amp;gt;&lt;/code&gt;
      tags.&lt;/p&gt;
    </code>
  </pre>
  <p>
    你也可以这样写：
  </p>
  <pre>
    <code>
      `&amp;#8212;` is the decimal-encoded equivalent of `&amp;mdash;`.
    </code>
  </pre>
  <p>
    以产生：
  </p>
  <pre>
    <code>
      &lt;p&gt;&lt;code&gt;&amp;amp;#8212;&lt;/code&gt; is the decimal-encoded
      equivalent of &lt;code&gt;&amp;amp;mdash;&lt;/code&gt;.&lt;/p&gt;
    </code>
  </pre>
  <h3 id="img">
    图片
  </h3>
  <p>
    很明显地，要在纯文字应用中设计一个「自然」的语法来插入图片是有一定难度的。
  </p>
  <p>
    Markdown 使用一种和链接很相似的语法来标记图片，同样也允许两种样式：
    <em>
      行内式
    </em>
    和
    <em>
      参考式
    </em>
    。
  </p>
  <p>
    行内式的图片语法看起来像是：
  </p>
  <pre>
    <code>
      ![Alt text](/path/to/img.jpg) ![Alt text](/path/to/img.jpg "Optional title")
    </code>
  </pre>
  <p>
    详细叙述如下：
  </p>
  <ul>
    <li>
      一个惊叹号
      <code>
        !
      </code>
    </li>
    <li>
      接着一个方括号，里面放上图片的替代文字
    </li>
    <li>
      接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上 选择性的 'title'文字。</li></ul><p>参考式的图片语法则长得像这样：</p><pre><code>![Alt text][id]</code></pre><p>「id」是图片参考的名称，图片参考的定义方式则和连结参考一样：</p><pre><code>[id]:url/to/image"Optional title attribute"</code></pre><p>到目前为止，Markdown还没有办法指定图片的宽高，如果你需要的话，你可以使用普通的<code>&lt;img&gt;</code>标签。</p><hr><h2 id="misc">其它</h2><h3 id="autolink">自动链接</h3><p>Markdown支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用尖括号包起来，Markdown就会自动把它转成链接。一般网址的链接文字就和链接地址一样，例如：</p><pre><code>&lt;http:</code></pre><p>Markdown会转为：</p><pre><code>&lt;a href="http://example.com/"&gt;http:</code></pre><p>邮址的自动链接也很类似，只是Markdown会先做一个编码转换的过程，把文字字符转成16进位码的HTML实体，这样的格式可以糊弄一些不好的邮址收集机器人，例如：</p><pre><code>&lt;address@example.com&gt;</code></pre><p>Markdown会转成：</p><pre><code>&lt;a href="&amp;#x6D;&amp;#x61;i&amp;#x6C;&amp;#x74;&amp;#x6F;:&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;
      &amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;
      &amp;#109;"&gt;&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;&amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;&amp;#109;&lt;/a&gt;</code></pre><p>在浏览器里面，这段字串（其实是<code>&lt;a href="mailto:address@example.com"&gt;address@example.com&lt;/a&gt;</code>）会变成一个可以点击的「address@example.com」链接。</p><p>（这种作法虽然可以糊弄不少的机器人，但并不能全部挡下来，不过总比什么都不做好些。不管怎样，公开你的信箱终究会引来广告信件的。）</p><h3 id="backslash">反斜杠</h3><p>Markdown可以利用反斜杠来插入一些在语法中有其它意义的符号，例如：如果你想要用星号加在文字旁边的方式来做出强调效果（但不用<code>&lt;em&gt;</code>标签），你可以在星号的前面加上反斜杠：</p><pre><code>\*literal asterisks\*</code></pre><p>Markdown支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</p><pre><code>\反斜线`反引号*星号_底线&#123;&#125;花括号[]方括号()括弧#井字号+加号-减号.英文句点!惊叹号</code></pre><h2 id="acknowledgement">感谢</h2><p>感谢<a href="https://twitter.com/#!/leafy7382">leafy7382</a>协助翻译，<a href="http://iamhlb.com/">hlb</a>、<a href="http://twitter.com/randylien">Randylien</a>帮忙润稿，<a href="https://twitter.com/#!/ethantw">ethantw</a>的<a href="http://ethantw.net/projects/han/">汉字标准格式・CSS Reset</a>，<a href="http://kidwm.net/">WM</a>回报文字错误。</p><p>感谢<a href="https://github.com/fenprace">fenprace</a>，<a href="https://github.com/addv">addv</a>。</p><hr><h2 id="editor">Markdown免费编辑器</h2><p>Windows平台</p><ul><li><a href="http://markdownpad.com/">MarkdownPad</a></li><li><a href="http://code52.org/DownmarkerWPF/">MarkPad</a></li></ul><p>Linux平台</p><ul><li><a href="http://sourceforge.net/p/retext/home/ReText/">ReText</a></li></ul><p>Mac平台</p><ul><li><a href="http://mouapp.com/">Mou</a></li></ul><p>在线编辑器</p><ul><li><a href="http://markable.in/">Markable.in</a></li><li><a href="http://dillinger.io/">Dillinger.io</a></li></ul><p>浏览器插件</p><ul><li><a href="https://chrome.google.com/webstore/detail/oknndfeeopgpibecfjljjfanledpbkog">MaDe</a>(Chrome)</li></ul><p>高级应用</p><ul><li><a href="http://www.sublimetext.com/2">Sublime Text 2</a>+<a href="http://ttscoff.github.com/MarkdownEditing/">MarkdownEditing</a>/<a href="http://lucifr.com/2012/07/12/markdownediting-for-sublime-text-2/">教程</a></li></ul><p>***如有更好的Markdown免费编辑器推荐，请到<a href="https://gitcafe.com/riku/Markdown-Syntax-CN/tickets/1">这里反馈</a>，谢谢！</p></div>]]></content>
      <tags>
        <tag>转</tag>
        <tag>MD</tag>
      </tags>
  </entry>
  <entry>
    <title>MD基本语法</title>
    <url>/myBlog/2016/01/01/MD-%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[<blockquote><p>第一次配置 </p>
</blockquote>

<span id="more"></span>

<h1 id="欢迎使用-Cmd-Markdown-编辑阅读器"><a href="#欢迎使用-Cmd-Markdown-编辑阅读器" class="headerlink" title="欢迎使用 Cmd Markdown 编辑阅读器"></a>欢迎使用 Cmd Markdown 编辑阅读器</h1><hr>
<p>我们理解您需要更便捷更高效的工具记录思想，整理笔记、知识，并将其中承载的价值传播给他人，<strong>Cmd Markdown</strong> 是我们给出的答案 —— 我们为记录思想和分享知识提供更专业的工具。 您可以使用 Cmd Markdown：</p>
<blockquote>
<ul>
<li>整理知识，学习笔记</li>
<li>发布日记，杂文，所见所想</li>
<li>撰写发布技术文稿（代码支持）</li>
<li>撰写发布学术论文（LaTeX 公式支持）</li>
</ul>
</blockquote>
<p><img src="https://www.zybuluo.com/static/img/logo.png" alt="cmd-markdown-logo"></p>
<p>除了您现在看到的这个 Cmd Markdown 在线版本，您还可以前往以下网址下载：</p>
<h3 id="Windows-x2F-Mac-x2F-Linux-全平台客户端"><a href="#Windows-x2F-Mac-x2F-Linux-全平台客户端" class="headerlink" title="Windows&#x2F;Mac&#x2F;Linux 全平台客户端"></a><a href="https://www.zybuluo.com/cmd/">Windows&#x2F;Mac&#x2F;Linux 全平台客户端</a></h3><blockquote>
<p>请保留此份 Cmd Markdown 的欢迎稿兼使用说明，如需撰写新稿件，点击顶部工具栏右侧的 <i class="icon-file"></i> <strong>新文稿</strong> 或者使用快捷键 <code>Ctrl+Alt+N</code>。</p>
</blockquote>
<hr>
<h2 id="什么是-Markdown"><a href="#什么是-Markdown" class="headerlink" title="什么是 Markdown"></a>什么是 Markdown</h2><p>Markdown 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号以最小的输入代价生成极富表现力的文档：譬如您正在阅读的这份文档。它使用简单的符号标记不同的标题，分割不同的段落，<strong>粗体</strong> 或者 <em>斜体</em> 某些文字，更棒的是，它还可以</p>
<h3 id="1-制作一份待办事宜-Todo-列表"><a href="#1-制作一份待办事宜-Todo-列表" class="headerlink" title="1. 制作一份待办事宜 Todo 列表"></a>1. 制作一份待办事宜 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#13-%E5%BE%85%E5%8A%9E%E4%BA%8B%E5%AE%9C-todo-%E5%88%97%E8%A1%A8">Todo 列表</a></h3><ul>
<li><input disabled="" type="checkbox"> 支持以 PDF 格式导出文稿</li>
<li><input disabled="" type="checkbox"> 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率</li>
<li><input checked="" disabled="" type="checkbox"> 新增 Todo 列表功能</li>
<li><input checked="" disabled="" type="checkbox"> 修复 LaTex 公式渲染问题</li>
<li><input checked="" disabled="" type="checkbox"> 新增 LaTex 公式编号功能</li>
</ul>
<h3 id="2-书写一个质能守恒公式-latex"><a href="#2-书写一个质能守恒公式-latex" class="headerlink" title="2. 书写一个质能守恒公式[^latex]"></a>2. 书写一个质能守恒公式[^latex]</h3><p>$$E&#x3D;mc^2$$</p>
<h3 id="3-高亮一段代码-code"><a href="#3-高亮一段代码-code" class="headerlink" title="3. 高亮一段代码[^code]"></a>3. 高亮一段代码[^code]</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">@requires_authorization</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SomeClass</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># A comment</span></span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;hello world&#x27;</span></span><br></pre></td></tr></table></figure>

<h3 id="4-高效绘制-流程图"><a href="#4-高效绘制-流程图" class="headerlink" title="4. 高效绘制 流程图"></a>4. 高效绘制 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#7-%E6%B5%81%E7%A8%8B%E5%9B%BE">流程图</a></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">st=&gt;start: Start</span><br><span class="line">op=&gt;operation: Your Operation</span><br><span class="line">cond=&gt;condition: Yes or No?</span><br><span class="line">e=&gt;end</span><br><span class="line"></span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br></pre></td></tr></table></figure>

<h3 id="5-高效绘制-序列图"><a href="#5-高效绘制-序列图" class="headerlink" title="5. 高效绘制 序列图"></a>5. 高效绘制 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#8-%E5%BA%8F%E5%88%97%E5%9B%BE">序列图</a></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Alice-&gt;Bob: Hello Bob, how are you?</span><br><span class="line">Note right of Bob: Bob thinks</span><br><span class="line">Bob--&gt;Alice: I am good thanks!</span><br></pre></td></tr></table></figure>

<h3 id="6-绘制表格"><a href="#6-绘制表格" class="headerlink" title="6. 绘制表格"></a>6. 绘制表格</h3><table>
<thead>
<tr>
<th>项目</th>
<th align="right">价格</th>
<th align="center">数量</th>
</tr>
</thead>
<tbody><tr>
<td>计算机</td>
<td align="right">$1600</td>
<td align="center">5</td>
</tr>
<tr>
<td>手机</td>
<td align="right">$12</td>
<td align="center">12</td>
</tr>
<tr>
<td>管线</td>
<td align="right">$1</td>
<td align="center">234</td>
</tr>
</tbody></table>
<h3 id="7-更详细语法说明"><a href="#7-更详细语法说明" class="headerlink" title="7. 更详细语法说明"></a>7. 更详细语法说明</h3><p>想要查看更详细的语法说明，可以参考我们准备的 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown">Cmd Markdown 简明语法手册</a>，进阶用户可以参考 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#cmd-markdown-%E9%AB%98%E9%98%B6%E8%AF%AD%E6%B3%95%E6%89%8B%E5%86%8C">Cmd Markdown 高阶语法手册</a> 了解更多高级功能。</p>
<p>总而言之，不同于其它 <em>所见即所得</em> 的编辑器：你只需使用键盘专注于书写文本内容，就可以生成印刷级的排版格式，省却在键盘和工具栏之间来回切换，调整内容和格式的麻烦。<strong>Markdown 在流畅的书写和印刷级的阅读体验之间找到了平衡。</strong> 目前它已经成为世界上最大的技术分享网站 GitHub 和 技术问答网站 StackOverFlow 的御用书写格式。</p>
<hr>
<h2 id="什么是-Cmd-Markdown"><a href="#什么是-Cmd-Markdown" class="headerlink" title="什么是 Cmd Markdown"></a>什么是 Cmd Markdown</h2><p>您可以使用很多工具书写 Markdown，但是 Cmd Markdown 是这个星球上我们已知的、最好的 Markdown 工具——没有之一 ：）因为深信文字的力量，所以我们和你一样，对流畅书写，分享思想和知识，以及阅读体验有极致的追求，我们把对于这些诉求的回应整合在 Cmd Markdown，并且一次，两次，三次，乃至无数次地提升这个工具的体验，最终将它演化成一个 <strong>编辑&#x2F;发布&#x2F;阅读</strong> Markdown 的在线平台——您可以在任何地方，任何系统&#x2F;设备上管理这里的文字。</p>
<h3 id="1-实时同步预览"><a href="#1-实时同步预览" class="headerlink" title="1. 实时同步预览"></a>1. 实时同步预览</h3><p>我们将 Cmd Markdown 的主界面一分为二，左边为<strong>编辑区</strong>，右边为<strong>预览区</strong>，在编辑区的操作会实时地渲染到预览区方便查看最终的版面效果，并且如果你在其中一个区拖动滚动条，我们有一个巧妙的算法把另一个区的滚动条同步到等价的位置，超酷！</p>
<h3 id="2-编辑工具栏"><a href="#2-编辑工具栏" class="headerlink" title="2. 编辑工具栏"></a>2. 编辑工具栏</h3><p>也许您还是一个 Markdown 语法的新手，在您完全熟悉它之前，我们在 <strong>编辑区</strong> 的顶部放置了一个如下图所示的工具栏，您可以使用鼠标在工具栏上调整格式，不过我们仍旧鼓励你使用键盘标记格式，提高书写的流畅度。</p>
<p><img src="https://www.zybuluo.com/static/img/toolbar-editor.png" alt="tool-editor"></p>
<h3 id="3-编辑模式"><a href="#3-编辑模式" class="headerlink" title="3. 编辑模式"></a>3. 编辑模式</h3><p>完全心无旁骛的方式编辑文字：点击 <strong>编辑工具栏</strong> 最右测的拉伸按钮或者按下 <code>Ctrl + M</code>，将 Cmd Markdown 切换到独立的编辑模式，这是一个极度简洁的写作环境，所有可能会引起分心的元素都已经被挪除，超清爽！</p>
<h3 id="4-实时的云端文稿"><a href="#4-实时的云端文稿" class="headerlink" title="4. 实时的云端文稿"></a>4. 实时的云端文稿</h3><p>为了保障数据安全，Cmd Markdown 会将您每一次击键的内容保存至云端，同时在 <strong>编辑工具栏</strong> 的最右侧提示 <code>已保存</code> 的字样。无需担心浏览器崩溃，机器掉电或者地震，海啸——在编辑的过程中随时关闭浏览器或者机器，下一次回到 Cmd Markdown 的时候继续写作。</p>
<h3 id="5-离线模式"><a href="#5-离线模式" class="headerlink" title="5. 离线模式"></a>5. 离线模式</h3><p>在网络环境不稳定的情况下记录文字一样很安全！在您写作的时候，如果电脑突然失去网络连接，Cmd Markdown 会智能切换至离线模式，将您后续键入的文字保存在本地，直到网络恢复再将他们传送至云端，即使在网络恢复前关闭浏览器或者电脑，一样没有问题，等到下次开启 Cmd Markdown 的时候，她会提醒您将离线保存的文字传送至云端。简而言之，我们尽最大的努力保障您文字的安全。</p>
<h3 id="6-管理工具栏"><a href="#6-管理工具栏" class="headerlink" title="6. 管理工具栏"></a>6. 管理工具栏</h3><p>为了便于管理您的文稿，在 <strong>预览区</strong> 的顶部放置了如下所示的 <strong>管理工具栏</strong>：</p>
<p><img src="https://www.zybuluo.com/static/img/toolbar-manager.jpg" alt="tool-manager"></p>
<p>通过管理工具栏可以：</p>
<p><i class="icon-share"></i> 发布：将当前的文稿生成固定链接，在网络上发布，分享<br><i class="icon-file"></i> 新建：开始撰写一篇新的文稿<br><i class="icon-trash"></i> 删除：删除当前的文稿<br><i class="icon-cloud"></i> 导出：将当前的文稿转化为 Markdown 文本或者 Html 格式，并导出到本地<br><i class="icon-reorder"></i> 列表：所有新增和过往的文稿都可以在这里查看、操作<br><i class="icon-pencil"></i> 模式：切换 普通&#x2F;Vim&#x2F;Emacs 编辑模式</p>
<h3 id="7-阅读工具栏"><a href="#7-阅读工具栏" class="headerlink" title="7. 阅读工具栏"></a>7. 阅读工具栏</h3><p><img src="https://www.zybuluo.com/static/img/toolbar-reader.jpg" alt="tool-manager"></p>
<p>通过 <strong>预览区</strong> 右上角的 <strong>阅读工具栏</strong>，可以查看当前文稿的目录并增强阅读体验。</p>
<p>工具栏上的五个图标依次为：</p>
<p><i class="icon-list"></i> 目录：快速导航当前文稿的目录结构以跳转到感兴趣的段落<br><i class="icon-chevron-sign-left"></i> 视图：互换左边编辑区和右边预览区的位置<br><i class="icon-adjust"></i> 主题：内置了黑白两种模式的主题，试试 <strong>黑色主题</strong>，超炫！<br><i class="icon-desktop"></i> 阅读：心无旁骛的阅读模式提供超一流的阅读体验<br><i class="icon-fullscreen"></i> 全屏：简洁，简洁，再简洁，一个完全沉浸式的写作和阅读环境</p>
<h3 id="8-阅读模式"><a href="#8-阅读模式" class="headerlink" title="8. 阅读模式"></a>8. 阅读模式</h3><p>在 <strong>阅读工具栏</strong> 点击 <i class="icon-desktop"></i> 或者按下 <code>Ctrl+Alt+M</code> 随即进入独立的阅读模式界面，我们在版面渲染上的每一个细节：字体，字号，行间距，前背景色都倾注了大量的时间，努力提升阅读的体验和品质。</p>
<h3 id="9-标签、分类和搜索"><a href="#9-标签、分类和搜索" class="headerlink" title="9. 标签、分类和搜索"></a>9. 标签、分类和搜索</h3><p>在编辑区任意行首位置输入以下格式的文字可以标签当前文档：</p>
<p>标签： 未分类</p>
<p>标签以后的文稿在【文件列表】（Ctrl+Alt+F）里会按照标签分类，用户可以同时使用键盘或者鼠标浏览查看，或者在【文件列表】的搜索文本框内搜索标题关键字过滤文稿，如下图所示：</p>
<p><img src="https://www.zybuluo.com/static/img/file-list.png" alt="file-list"></p>
<h3 id="10-文稿发布和分享"><a href="#10-文稿发布和分享" class="headerlink" title="10. 文稿发布和分享"></a>10. 文稿发布和分享</h3><p>在您使用 Cmd Markdown 记录，创作，整理，阅读文稿的同时，我们不仅希望它是一个有力的工具，更希望您的思想和知识通过这个平台，连同优质的阅读体验，将他们分享给有相同志趣的人，进而鼓励更多的人来到这里记录分享他们的思想和知识，尝试点击 <i class="icon-share"></i> (Ctrl+Alt+P) 发布这份文档给好友吧！</p>
<hr>
<p>再一次感谢您花费时间阅读这份欢迎稿，点击 <i class="icon-file"></i> (Ctrl+Alt+N) 开始撰写新的文稿吧！祝您在这里记录、阅读、分享愉快！</p>
<p>作者 <a href="http://weibo.com/ghosert">@ghosert</a><br>2015 年 06 月 15 日</p>
<p>[^latex]: 支持 <strong>LaTeX</strong> 编辑显示支持，例如：$\sum_{i&#x3D;1}^n a_i&#x3D;0$， 访问 <a href="http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference">MathJax</a> 参考更多使用方法。<br>[^code]: 代码高亮功能支持包括 Java, Python, JavaScript 在内的，<strong>四十一</strong>种主流编程语言。</p>
]]></content>
      <tags>
        <tag>转</tag>
        <tag>MD</tag>
      </tags>
  </entry>
  <entry>
    <title>HELLO WORLD</title>
    <url>/myBlog/2016/01/01/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<span id="more"></span>

<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h2 id=""><a href="#" class="headerlink" title=""></a></h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">title: title</span><br><span class="line">//date: 2016-04-4 00:03:54</span><br><span class="line">tags:</span><br><span class="line">- tags1</span><br><span class="line">- tags2</span><br><span class="line">---</span><br><span class="line">&#123;% blockquote %&#125; describe &#123;% endblockquote %&#125;</span><br><span class="line">&lt;!--more--&gt;</span><br><span class="line"></span><br><span class="line"># first section</span><br></pre></td></tr></table></figure>

<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo s</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure>

<h3 id="build"><a href="#build" class="headerlink" title="build"></a>build</h3><figure class="highlight plaintext"><figcaption><span>c</span></figcaption><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p>
]]></content>
      <tags>
        <tag>MD</tag>
      </tags>
  </entry>
  <entry>
    <title>模板</title>
    <url>/myBlog/2016/01/01/%E6%A8%A1%E6%9D%BF/</url>
    <content><![CDATA[<blockquote><p>一句话描述 </p>
</blockquote>

<span id="more"></span>

<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1>]]></content>
      <tags>
        <tag>MD</tag>
      </tags>
  </entry>
</search>
